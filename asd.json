{
  "$schema": "schemas/subject.json",
  "title": "Algorytmy i Struktury Danych - edux",
  "id": "asd",
  "data": [
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"3f566a80-f58e-5507-9323-ea1cfb2e2be6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"808fa008-9d4d-5719-b6e6-dd812b361e2e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"c6515bd7-da76-5b33-a837-2819e6ae544e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"2da8d362-3a9f-565f-9539-55dd6d985dea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8c97e313-74fe-5638-9ee8-8d12a09547ea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1897f655-59c6-529c-a360-57aa176751f5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c2813e02-438e-5a79-a936-9092937b104c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c0046bbb-b646-55b7-af13-c85a12ee4506.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e84d0027-98a1-5a39-9959-9b97ed9be938.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ba56fca5-cacd-5acd-8f94-40b6624daf71.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"2536b9f9-8c4d-5399-94e0-0d16ce45ffc7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności BFS z wierzchołka startowego <img src=\"3e84ec74-01a2-56dc-bf85-a19aae43f3c5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie BFS wierzchołki grafu umieszczamy w kolejce pomocniczej w kolejności rosnących wartości etykiet.<img src=\"64c0bb41-eda7-5163-9a54-3c6ecca90b37.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1689,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji OUT w kolejce pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"b8d7d60a-bddf-5aea-a85c-2347efed0684.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna długość kolejki pomocniczej w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej długości kolejki pomocniczej, w trakacie wykonania rozważnego algorytmu dla grafu <img src=\"687681e0-bf75-5553-b5bb-12c3d928e66a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"9b5f6efb-6ec8-595c-832e-7aeb8359cdad.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna długość kolejki pomocniczej w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej długości kolejki pomocniczej, w trakacie wykonania rozważnego algorytmu dla grafu <img src=\"ea8e28c4-0d1f-5b07-a091-76e6934673da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"764bdf7d-d80c-54cc-a791-9efbb8719697.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"f929ae22-1067-55d7-8290-a112992ed02b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"c4fd9c77-8ae4-5b1b-bcdd-cb51a1fb1b2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"2ef4b89a-ad71-590e-bd61-5fad253e9993.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"b1a6c238-5a28-58ae-987a-cab8907509fa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?",
      "id": 1688,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Tuż po sortowaniu liczb względem cyfr na <img src=\"cd2c036e-f8e7-50d4-95fd-2898d9da1802.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"3d8a7608-8c18-5980-b1a2-b4bfbb522e23.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"1cfcb75e-0a22-5c47-8fd0-38761fe2f15d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna długość dowolnej kolejki (tj. maksymalna liczba jednocześnie przechowywanych elementów) w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"ff467686-8e4d-5877-9a11-40829664802b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Tuż po sortowaniu liczb względem cyfr na <img src=\"0997aa36-2812-5e97-8fa0-f60e67b3e3ea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"f05b24b3-215a-51bb-8044-5218bc9761da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"30c7f441-3d2e-58fb-b5d1-69894ae57607.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"7a41539f-3cb7-53cb-b7e8-15009d3108c9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"eadc0400-69e7-5440-98de-4c2e698e1dbb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1686,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"a7e83137-87d1-5873-811c-3c71a072d817.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności InOrder tworzą ciąg <img src=\"789b9b3b-03a8-5e15-8974-e8f1768ba0b7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg: <img src=\"a80c6769-2ed6-5178-bd20-ee8ff36feb4c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"f63f1c74-2c88-5f2b-a944-321d75142a2e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PreOrder tworzą ciąg <img src=\"5439e298-1f64-5695-b8a1-12d70513951c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"ec8bcbc2-0985-5a29-8be1-1512981d156c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"bc6476a8-8627-56c4-944c-92744578ec22.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności InOrder tworzą ciąg <img src=\"f4cfe8b4-930e-5cdf-b380-b5d9b296be97.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"fbfa4003-4ed2-5596-8849-429a179a87a4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"748d0e9a-2b94-534d-9685-ad555d4599e0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1687,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"2f5b5358-9727-5728-90bc-db1baae02104.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"8a0bbdee-ac6b-56ec-a809-b1518bae8b73.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"ccbea446-1b7b-5016-b084-d54a0d70352c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"69f70a19-5b7c-5428-a0d7-a55668a8b53e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"29a6dfc1-d011-5112-8bb2-e3700b8a83af.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"976cdaa9-f209-5ea1-b412-4ddecff8bb81.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1683,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Argumentem <img src=\"706516e5-8709-55aa-b72e-97cbd61a9e39.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu QuickSort jest tablica postaci: <img src=\"289a54d1-3e6b-5c08-ad54-3e1eec1cbe88.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"6aa7ca4b-8f34-5676-ad5e-4fd27898d79c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"ddf222eb-908c-580b-9e2a-fb89ab9b52a6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"ce2d4411-c84e-54d5-9676-3bc8a7afd27a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"7db2eb99-6e47-5a24-9cc4-623a23427408.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"febcaf85-6435-565f-a995-63d33b610039.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"4aeee353-213d-5bc2-93d9-a0114f4cd580.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"ba2e5b1b-e9e2-587d-8c62-2a888e794daf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"ad28e99c-5682-527f-8a16-6722904cf31b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1684,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"bc3c367f-1154-560b-aa66-44b47c4789ee.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"cfd2cee6-39cd-5d42-81b6-078e713a5dec.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"e65d3070-f28f-5632-9190-fcaee27d1a75.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"92448fb5-fc74-52fb-9137-da18ec62ad84.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wysokość drzewa <img src=\"bca9d73e-2299-5094-a10a-67ece332859c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"1027b8f5-6550-5a46-bd2d-206061fd5a43.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę stosu <img src=\"8d104dcf-938c-5e01-9338-809f7bea5ba8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"225b3e12-ee01-5914-b92e-c31134329ee3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"7b84a451-42d6-5ef2-b4f4-566a5d2b979e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"ed2ed451-eff1-5083-b601-487e6aa970ea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1dd37837-21bb-576b-a1f3-1e92d7c92c2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"24df1726-df88-54cc-8f28-8840b57ed67f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"349e4ced-d170-5a3b-83a4-878f68f0390c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"98f2623f-dd83-5dd6-9cf8-1fc91f25714d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2570962d-dbd5-5379-88b2-53c7f0128cc7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"db871b45-4be0-5610-abc1-fe7fd591cd2e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"04ff72c3-b36e-5166-bb91-e4897869a509.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1685,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"5af46f85-c406-56d5-b393-c3e43cf2ac59.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Ostateczna wysokość stosu <img src=\"c85862ba-c4fd-546d-bb2d-63d455458898.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tuż po wykonaniu przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"fb6a8c46-e63d-5d48-b095-1c0858082283.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8f74264e-5324-5154-9ac1-e752b5b6603c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e55f400d-ab79-5d24-8eb6-c90e1a4f8121.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2bf8eb4a-4397-5ff1-bc56-927db3321e8f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2596b22e-a0c2-5d82-939d-ebb0e38cf493.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"05447bca-a674-5caf-8097-b5f4b7b9c790.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f9579160-1cac-58e7-9242-aeec5f40fc77.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5226a8ba-83f4-50bb-80fa-acdbaa592143.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Ostateczna wysokość stosu <img src=\"5db1149a-61a0-5597-910c-d694e84a7b3d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tuż po wykonaniu przedstawionego ciągu operacji jest równa dokładnie <img src=\"8daa2355-108c-516f-b6d4-582df08c0fd4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"ff649a36-a8ca-5164-aea7-4f4b380ea5c7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"07c6e0c5-2e05-5be9-8eb9-ea6ad6241fa2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c14b82f5-4ad1-5fb2-8885-5953866eeb77.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8a7241d4-5209-5fde-92c5-ab19470016f1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oznaczają odpowiednio funkcje opisujące średnią złożoność czasową algorytmów odpowiednio InsertionSort, SelectionSort, MergeSort, QuickSort. Wskaż poprawne zależności.",
      "id": 1680,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"a27ab7f1-8c16-5d68-afc2-82f7a324b4e1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"c3528fc4-4f9f-50be-8a82-ea99c0448ce9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"9a4fba6b-a43b-5959-9f8e-339a3d894dd1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Każdy algorytm sortowania ciągu <img src=\"e253a66a-05d4-5c52-9749-e88953c903de.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementowego, w modelu drzew decyzyjnych, musi w przypadku najgorszym wykonać:",
      "id": 1681,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"38fa7fc2-0e01-5a1b-a2e4-2625ec3459e7.gif\" border=\"0\\\" data-zdaj-se=\"true\">porównań",
          "correct": false
        },
        {
          "answer": "<img src=\"795f4144-e688-5a60-804d-838c1954ad94.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań",
          "correct": false
        },
        {
          "answer": "Rzędu <img src=\"0a15e34b-00b8-5765-83c2-af6d915c54be.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy tyle porównań ile w przypadku ciągu wejściowego długości <img src=\"25540d0e-f850-5581-8fcb-702ef5a027bd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"7319f6fe-3718-5203-b862-dcb3ced3ee49.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"bebd2cc8-ffe9-5760-961b-cd1238c1c9e2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"279a20b6-181e-59c4-8b3e-907392d9c807.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"321bbf7a-13c7-5188-90a2-a4131a736c15.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1682,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"1d930ab1-9c55-5338-b23b-d925c0a7d7e1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"33930069-c63f-5a97-9d7d-e360a507182f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"60a439be-e231-5a17-aa26-d9209690079e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"2f57d4bd-99e0-55a1-9d30-880fb1c79dbb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"e4979756-6a9e-564e-a5e8-bd24ef0b68e7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"9276c479-2453-5ce8-8114-41726188fb75.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"61580500-5384-5bc8-bbfb-32f321232aad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"4e377c66-43ff-55c7-8719-198b03d0d30d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"af065602-3f12-5946-9021-d48df81ece5f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Jaki jest stan tablicy <img src=\"6bc87d8a-d05c-504b-b896-ad1118e4028c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> po wykonaniu pierwszych dwóch iteracji algorytmu SelectionSort?",
      "id": 1677,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Taki sam jak po <img src=\"2cdec515-fecf-5df0-b3f4-58b4eec03cb8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -krotnym wykonaniu algorytmu podziału Split",
          "correct": false
        },
        {
          "answer": "<img src=\"fe0cf8e5-62fd-5aea-9427-8f9f6d399654.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Inny niż po wykonaniu pierwszych&nbsp; <img src=\"c8b7856b-48c4-5028-9ada-8c1c784d95cd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji algorytmu InsertionSort",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"6acc9ece-b052-518a-ab77-d77d85f1e242.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"2ab2c774-3c7f-5c7c-95ff-5ec702398107.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg liczb naturalnych: <img src=\"2f2b50e8-0d14-5ccf-9909-9d72d700e196.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm CountingSort. Które z poniższych zdań jest prawdziwe?",
      "id": 1678,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po drugiej pętli iteracyjnej (sumowanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"d57d8714-c8ae-534f-b759-8c420e09d7e5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po pierwszej pętli iteracyjnej (zliczanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"cf24ebab-9e2d-5f1a-96b3-dde9069e2290.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po trzeciej pętli iteracyjnej (wypisanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"a41a3f5e-952b-5f63-9f43-793ca488e2dc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"f1392db3-9b79-51df-a5e2-3330b743b311.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"fa4dd0f6-4a6f-5517-a971-3af1261e8b4b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"9de1cf9e-ecd3-5ab8-ab70-1901d549560b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm MergeSort w implementacji rekurencyjnej, z procedurą scalania zgodną z metodą Merge. Które z poniższych zdań jest prawdziwe?",
      "id": 1679,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Rezultatem <img src=\"112a8aae-735d-52ca-b5f7-a2f535e2a592.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu MergeSort jest tablica postaci: <img src=\"9ea02e72-506d-5629-abdf-48ca27f15bd2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Merge jest równa dokładnie <img src=\"b336d530-6f88-5695-9b33-9a5abcbc86ed.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Rezultatem <img src=\"4a63fbb0-6556-5c0f-8b20-94aa047e9b07.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu MergeSort jest tablica postaci: <img src=\"7b002abc-1c2b-531e-9b99-c7c6cc7b61fe.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"4cfb2372-cbd1-50d0-91d6-6cf1289e57f6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"d2f509ac-8ca8-5c4b-9567-58c90c1a2bce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"18621d64-3972-5fcb-aa83-44fdd4f28dad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1674,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"113932ba-ad72-5a57-a1a6-26d8267315f3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"0277a6f5-2079-5ebb-961d-8b15cd7ce027.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"0c23dd39-f0c4-57a3-85d8-1528a106fb30.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"e481dac4-0c1b-55e8-a17b-6259e4574020.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"26074bc0-babc-59d9-847b-38190ea43b2d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"fb558cb1-2d65-5f0d-b575-8f3f79e186b3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"12cb71f2-e81b-555a-a47f-eb7cbc7e2fb5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1675,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"08438cb5-3c98-5c41-acdf-df5970f35a8d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"c5c7f3db-d336-5d9c-babf-32eae831c836.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"cf742ed3-21b9-5fa9-8751-0587c2c7d8c3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"42894db2-7067-532d-9c7f-15c79c2e361b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"06448049-90e5-5b46-8718-509e45173d14.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"d2a6618d-f22a-5c44-87c6-d2368611f454.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"834aa461-ced6-5be7-82b8-e1bb7bbf48ca.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"6e62854a-42b0-5df0-8f4e-e1492e79936c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"2ada4735-c4e4-513a-88a3-591c674e6bbb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"8f56b7bf-0c21-5701-a317-7694375bfd26.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"d19c26dc-3144-5f64-98eb-f5213a4910fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"f94ce384-095d-5115-a847-149edd34f4c9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"057290db-acdc-5540-9b5d-53c58b094868.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"c0a0b618-f9e2-512e-a8bb-0250c212c74d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"1ef524e9-e00d-5aec-ae60-37a603bb1e49.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1676,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"8f8ef99c-d585-5d46-a808-d1a6e494ebfe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"d4ddd3e8-3b27-5b41-b731-fe8ca25dadf2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"5ec966fe-44d1-5941-acfe-8abd5fd230fa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"2fda6341-64d9-5d28-ad0f-97546ce4a333.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"4cbc3c3b-b4a6-594a-9ce6-75aa6b09aa01.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"2a4e87d6-3c1c-5e4f-a31f-df497e081b87.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"972fd985-ccb1-5591-b775-43a7a1ba2bb1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"ca166c69-b366-51e0-bde3-49f3c0e45a4e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"2e2244c3-8281-5ede-8047-c779efcdece3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"24c593c8-b663-5e0c-bb40-6b5fe94fd471.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"3135b46c-6a7d-5dae-84f7-2c796355623e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"fb683bdd-7024-5c18-a592-31cfad91b860.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"6b69e424-e7bd-5070-83a0-3915ad67b7aa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"c9d6aab7-51f7-52a2-bd3e-6bc0fcf14ae1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"3da676d5-6c98-5d97-bdda-7d68743b5e11.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1673,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"ef81443c-aabe-5956-8266-4cabfd5acb15.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacjach przestawień elementów tablicy <img src=\"c685aefe-d527-5f07-b3c1-24172ca4da92.gif\" border=\"0\\\" data-zdaj-se=\"true\"> lewy wskaźnik wykorzystywany w rozważanym algorytmie, wskazuje na element tablicy <img src=\"1a32b263-fa8e-59b7-9e49-e7a5dffcb946.gif\" border=\"0\\\" data-zdaj-se=\"true\"> o indeksie <img src=\"79c97f03-a846-535d-8930-973163329764.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po pierwszych <img src=\"50953416-656f-53e5-99f4-b03e6c7dcc10.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"64d9711a-bc19-5cdf-8c0d-50231a60a7e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> prawy wskaźnik wykorzystywany w rozważanym algorytmie, wskazuje na element tablicy <img src=\"e3861a35-1e41-5840-9ae1-e3faa23b86d2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> o indeksie <img src=\"34b592b0-7188-5083-ad0d-ccb51377bd29.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"aaac625f-9234-513a-b706-74928771b50c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacji przestawień elementów tablicy <img src=\"86642c39-64b7-5d58-80c2-fd5194911e52.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania dokładnie <img src=\"d08e0985-0ab2-5bc0-98a7-66687027ccdf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań jej elementów",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"b2a9d583-1bc2-58e0-ad81-05e1b54fe7c5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"f189a30a-129c-5306-a1bc-c60ad3cc7edf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"25db9a8c-39d9-5831-9591-d3d09cae417d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"2cd5ad97-c319-5754-9060-943a3bc4a8ba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1670,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"69628681-1539-596d-9efc-e5c7da26634e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"be74e121-d65a-5191-8982-eddd29ddd299.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"ac40ce50-7275-5ba0-8e91-98716ffe8526.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"6d652114-d6af-5772-8dfe-250373f6d173.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"4f382840-614f-5f35-932d-11aee70f8be6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"bb4b8176-3b34-5275-8d32-d6316d0614ed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"b9cab7bf-61a8-5696-bcee-663eef4d55cb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"fe332ad7-0b83-5231-8a86-08ef9380fd10.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"3e356aa8-288d-5336-8854-1170482ec744.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"96b251cc-6312-5771-953b-283bddd91a59.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"1e028312-ffad-5a55-a424-9f986c5e16ee.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Ile porównań elementów wykona algorytm InsertionSort dla podanego ciągu?",
      "id": 1671,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Dla ciągu <img src=\"da8c553d-65b0-5518-b2c5-1c43d3914f60.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań wynosi <img src=\"fdb56cc3-aa83-5892-8e0c-bd892583277c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Dla ciągu <img src=\"076f3cd0-e694-5a94-907c-fb0edb3e9513.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań wynosi <img src=\"81b634b5-4e0b-5237-be21-967c9dec1c68.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Dla ciągu <img src=\"d3debb82-50cd-5d96-aae4-24e45c3c936e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykona dokładnie o <img src=\"79441477-d67b-517d-bee4-49ca72f82430.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań więcej niż przestawień elementów",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"8f72cff9-c442-5076-b7d3-e09e7b8b608e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"f251ca79-3534-5ea0-8888-e83a302aea6c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"4a374f06-e636-5f26-bc31-19ae060c9a8e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"83ee3434-02e9-502e-9b5c-7ee836263bb2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1672,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie <img src=\"6b6ee693-e107-5d90-a0a8-318efdf0baf3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest większa od liczby wykonań tego algorytmu, gdy zamiast indeksu elementu <img src=\"52d11578-8d24-5011-8b1c-592a58639dd8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości będziemy wyszukiwali indeksu elementu <img src=\"b1a735a7-c126-5987-b039-db0f31a8f96b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        },
        {
          "answer": "Argumentem <img src=\"a79931c2-951a-5c40-bba7-c932d79ce2fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"95aa8b8e-7691-573d-b2b7-44e456e1413e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"293ebbab-c0d1-5e64-8c84-d6e15492a7a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"415ed401-87b4-5201-8947-6400240016a5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"365f621e-e5d0-53f9-817a-0415a4dab95b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"ebc1fa1f-86e1-584a-82c3-90551547b9e5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1668,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"a3089332-62bb-5f1e-b3c4-45a18a2a4dc4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"f9b571bc-bf11-59a0-bcc4-2b1d86255fbd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie <img src=\"d4c143f3-eba2-5f45-9d99-4feb509a0cb7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"83d625c9-86cd-54d9-8181-c1b4a3741e2d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"c05d94e8-eecb-5086-9e1a-a5dc789020eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"6b46974a-9708-57e0-a9cb-288d05bfc727.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"032d444c-baee-5a4e-bc1a-dc4cb4eb883a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1667,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"73cfae6a-3d48-5dbb-9c31-5db02a4c542b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"26831536-a06f-546b-a43e-6116dfa380fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jej postać jest następująca: <img src=\"268787e1-24cf-523f-9d6e-5d571ee58927.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"2eae3a5c-4bb7-5319-9494-a713e77eec77.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacji przestawień elementów tablicy <img src=\"27d86a78-4967-539d-83af-287279347d44.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania dokładnie <img src=\"84a982dd-5ce0-5aed-b497-24ebe93fcb1b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań jej elementów",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"6266aead-958e-5209-a9b8-7cf28a54ed81.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"3286e612-c083-559b-97f0-4424ae5b55cc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"6fb004d4-4fef-575e-bf5c-24877990e762.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"6eb0f3de-a7ce-569d-b20c-27fa3eb3701a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"1ba4b158-1826-5e1b-8504-54aa47c86437.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"a4d872bb-527e-575d-a17b-0fecebfa4eba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"d2bae146-649a-5df8-bad7-21de9e3ca891.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"7d1e122e-993c-5311-a1d4-93d96e717249.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1669,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"4bbd19ee-6b45-55d6-b799-d2dc0f8234f7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"147b4b57-def4-5efc-81f1-6d51fee23b0f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"df064165-d510-5c40-b7c6-e8fb1eb2c244.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"d4e447bd-83a5-553a-b785-f5aea3fd5ce5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"1267a5e7-a662-5c20-a657-a97aa6308bf9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"24faf1b8-930b-5091-883b-ba16e144c766.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"25b7d6d5-68ef-59cc-98a4-7f2bea09e21c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"1176bf0a-207b-58f4-8428-fa6ff7e05602.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"fac2624c-64cd-5ee7-ad8e-d45c30093ef6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"a0f7cab8-3e78-5744-838c-f48c15ae150f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "W ciągu <img src=\"3f89ac46-a038-50cb-ae70-af55008f43a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> uporządkowanym rosnąco szukamy metodą binarnych poszukiwań takiego <img src=\"4a1f6541-40a8-5bde-9745-29174d51b6d4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , by <img src=\"c24458c6-c2f6-5920-9591-9bf33d9517a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , dla pewnego ustalonego <img src=\"80c1a9a6-bb1c-5f34-974c-07547f3adcc0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Jakiej długości jest przeszukiwany ciąg, jeśli wykonaliśmy dokładnie <img src=\"94172808-da2b-5890-b18d-06de46167861.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań?",
      "id": 1665,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Ciąg ma około&nbsp; <img src=\"6176ef97-ba4a-5888-913f-fd9f30738381.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementów",
          "correct": true
        },
        {
          "answer": "Ciąg ma co najwyżej <img src=\"a6d2b66e-2307-5dd4-a35a-2b74afccefda.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementów",
          "correct": false
        },
        {
          "answer": "Dokładnie tyle&nbsp;samo ile w przypadku <img src=\"0f8d734f-ce29-505f-bb44-f870f699234b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -stu porównań i tej samej metody postępowania",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"242fc4ea-6595-5af8-81a0-30fcda635067.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"1b0b1bbb-7b15-5832-b91c-2a51f66b174e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"18a2617b-0453-5983-91a1-5fec35e2510c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"2a8663b4-3d37-55b8-bf4f-63419c61af94.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1666,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest większa od liczby wykonań tego algorytmu, gdy zamiast indeksu elementu <img src=\"33632110-c266-5e62-be91-edcedb8e2f61.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości będziemy wyszukiwali indeksu elementu <img src=\"4052ae4b-034a-5ef1-a66e-89dfb32563fa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        },
        {
          "answer": "Argumentem <img src=\"8e271b7f-f907-5f54-b3ce-5208840c46d5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"e8b3befa-9522-5f7b-b9f5-3614712bc0a6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"15ec5e3b-bc62-55dd-b754-343a0bb2a2e4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        },
        {
          "answer": "Argumentem <img src=\"21786ed2-eb09-55b7-943c-19d1538992cb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"949e329f-f30e-516c-9c87-c38fd2c9750e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"0c2ba838-9da5-5072-a423-0bc76b631489.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm <img src=\"9a35fee3-3b15-51e5-8932-ca4547999dab.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie&nbsp; <img src=\"e4c0e7a9-a8d8-5632-ae78-618106e4d34e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest tablicą liczb naturalnych&nbsp;długości <img src=\"069681fe-47a5-54ea-899c-5438c9bceeac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> (indeksowaną od <img src=\"3b9831b3-6323-519e-b0a1-5cb7a4d501e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> )<br>int p:=A[1], q:=A[1], i:=2;while (i &lt; n+1) do<br>&nbsp;&nbsp;&nbsp; if (A[i] &gt; p) then p:=A[i]; fi&nbsp;&nbsp;&nbsp; if (q &gt; A[i]) then q:=A[i]; fi<br>&nbsp;&nbsp;&nbsp; i:=i+1;od<br>return (p,q);<br>Która w wymienionych fomuł jest niezmiennikiem pętli w tym algorytmie?",
      "id": 1662,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Dla każdego <img src=\"4d47768f-37fb-5975-adb6-9e597175298b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> zachodzi <img src=\"b77070e3-2d56-5987-b19d-ea3cdbf8383a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Dla każdego <img src=\"bb9d814d-2f71-5691-8b0e-c1cf845f8b17.gif\" border=\"0\\\" data-zdaj-se=\"true\"> zachodzi <img src=\"d1010449-0dd5-5e15-b469-52a9e839cb10.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"f9a43173-9cc0-586e-b568-637cab6bb94c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"cb119d73-cae2-5fc5-9b83-e5449b6763ce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"20ab5f8a-95a0-56d2-a08e-d7ff02a89b3a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy rosnący ciąg różnych liczb naturalnych: <img src=\"48dafce9-0ace-5947-b9c6-20b2dd16d2ce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Dla owej tablicy i liczby naturalnej <img src=\"d028b6c7-12c6-5871-8aaf-c08b33f91774.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm wyszukiwania binarnego BinSearch. Które z poniższych zdań jest prawdziwe? Uwaga! Zakładamy, że tablica <img src=\"861c65f8-5e96-53fe-9108-1870645d40b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowana jest liczbami od <img src=\"414a5270-7e65-5793-a0db-10c90120dba5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"dc8eba37-fef8-5b10-8af1-d101c9727983.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1664,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba operacji porównań elementów tablicy <img src=\"2cea387f-d195-5dbb-8b52-e2989cdd5269.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wyszukiwanym elementem <img src=\"ba8b3d93-cf55-5246-91af-2290241aa9da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"8befd608-83f3-5501-a769-0985b5f47f2a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Łączna liczba operacji porównań elementów tablicy <img src=\"6bb2b41b-17c2-54ca-b86e-a8a72e6e83e6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wyszukiwanym elementem <img src=\"8a4075ac-f382-5591-a5a1-3597ac911037.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie liczbie analogicznych operacji w przypadku wyszukiwania indeksu elementu <img src=\"46f8f404-a781-5637-a139-441a2dc046ff.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w tablicy <img src=\"d0cb4e90-b864-5973-b562-12778ae12ae9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przy zastosowaniu tego samego algorytmu",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji porównań elementów tablicy <img src=\"dd2de091-f21e-58e9-a211-0cc84acae26c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wyszukiwanym elementem <img src=\"e2e4a26d-6705-538b-b544-3ccbf9795f1a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie liczbie analogicznych operacji w przypadku wyszukiwania indeksu elementu <img src=\"ad9c4e01-83f6-56e7-bfdc-c77d464cbc4d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w tablicy <img src=\"2d6a821a-9658-5118-bc17-adf8335e5fc3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przy zastosowaniu tego samego algorytmu",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"1af4629e-9278-5ec9-b45e-9512e248b6e6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> będzie programem postaci<br>int i:=1, x:=1;<br>while (i &lt; n) do&nbsp;&nbsp;&nbsp; i:=i+1;<br>&nbsp;&nbsp;&nbsp; x:=x+i;od<br>return x;<br>Które&nbsp;z podanych zdań jest prawdziwe?",
      "id": 1663,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli <img src=\"55bed1d3-a5f1-59fe-9c78-31e9f55cc129.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest liczbą naturalną, to algorytm <img src=\"706e33f8-05ca-51b3-8465-777e711d0ee9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> &nbsp;nigdy się nie zapętla",
          "correct": true
        },
        {
          "answer": "Niezmiennikim pętli w <img src=\"e65d1fd9-5bfc-5917-8359-0f025019b6a2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest formuła <img src=\"67ade06e-6184-5bd2-94a6-a449c059e2f2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli <img src=\"77a4d735-8362-5c57-a55d-e636513fbd5e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest liczbą naturalną większą od zera, to po wykonaniu algorymu spełnione są warunki <img src=\"14f4e5c8-10de-591e-8108-30aece10d938.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oraz <img src=\"d1ee8a66-fe50-509b-9f23-3f45b761a91d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"a83c4adb-be87-572e-ac65-4387017b37d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"4e292778-1b2c-5f97-8c66-3a970fd708e0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"bbf58e92-7fad-5b2c-baa0-88ff34cf2854.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"db2b5df2-bbaa-5781-b5f1-3f3a1bd83440.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"997f16f1-a6a7-5564-af3f-1eed36f69532.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1661,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"69f6713f-1cc0-58d8-b5bb-47c771d1547d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, tuż po ustaleniu finalnej postaci owego drzewa, jest równa dokładnie <img src=\"7852f2ab-5b5f-50f6-ad07-868023d6b3b6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"47ddc786-25e8-5a87-8bab-998d60cd8f12.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"76cd6e5f-94bb-54e3-947b-14afeb16093d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"344456a4-8fc9-5d6c-8f60-7bdd23a8bb20.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"b4115c2b-0137-518a-ab61-6a178f3a92d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"dd33de4d-e475-5113-b472-c1977b7d2ecb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a59c4956-4afd-5f2a-910d-570f006e2323.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1e947205-6546-5330-8ba1-375b98a8a163.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b8c4e628-d60b-59b3-9352-a1271a6c6300.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"23738a47-fe20-5e59-8f50-0b5154d7a9c0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3052840c-417a-51a5-a8a5-c3e8f2fbe737.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"43a4227a-f0fe-5392-a203-b03a8c10b587.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3ed70f56-4a08-5ae8-885b-f3f67fcff642.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"10d05675-4458-5df4-acd8-716a1aaac1f3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"156fa30a-9158-5e0b-907f-f6fa490291d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"e07e404e-c82b-522b-9de7-9c0e73195f85.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1659,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość minimalego drzewa rozpinającego będącego rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"9405f2f5-f824-53c3-8ea4-11febd73afce.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"91d172be-7662-564b-b157-24210ed922a1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"4c3948dc-b644-56cd-9d7e-b5679d8def99.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"e56a838a-9df1-5b65-91ac-0a520424ec1b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"8e45ebe2-9b5c-5638-b5ca-9448fcbb7ef8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"5650d649-7b70-52a9-b6a2-f05bbeaf02fd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"37769dd3-501a-5058-9de2-c53677184aed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d0dfc20c-6c07-5d90-b349-f585720a1f44.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"da79ec0f-e06a-5013-b9eb-aa03577d6355.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2fe6b6a8-b2e5-5318-aee3-2ac4d79f01f1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3f307047-ec18-5eee-abc1-2bbe6e4b8828.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ca2daddb-bfe4-5ef3-829b-86578141e3c1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2b7046c4-96cd-51f5-b543-e7e5ea64790e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"71a82558-e34e-5591-a599-ac8e0000b7ce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"7a17a41d-08af-5c66-9f07-ba83f14e1618.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"648edc31-6e44-5890-8279-835238e18c8b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1660,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność akceptowania krawędzi grafu do drzewa rozpinającego w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"f7fb8d9f-6b37-51c6-9ee2-867fecc63a91.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"86073c3d-309c-5c8a-a0e5-44e34836605d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"a7fbf630-e846-5b8c-bf95-05ea53740cff.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa co najmniej <img src=\"e7e1d0d9-2106-50af-8b47-b8377a749d2d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"52b1395a-675c-50be-bd84-6180de16ff85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"b5391f59-ed46-5f73-988c-34dbcae828be.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"88c3e830-f185-511c-b4cc-6b50bd571463.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"9f328feb-2451-5089-ac37-d95b9dc5de83.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"51e108fc-2d56-5958-b8a2-2dd5557cbef2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"97705ab9-8a02-54ea-b193-050177187d64.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1658,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Krawędź <img src=\"5748b389-cd23-5063-b548-b03d749ddcbc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"efdf07dd-419a-56e4-920f-9e404bf4274e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Krawędź <img src=\"7b3a2e55-4e52-5889-8af2-ffd7b8bfc19d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"772a81c5-d0e8-5f9c-8b74-70b64b18c3ed.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"aa22a95f-19e2-5d01-8334-c3c50019db32.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"c814972d-6a93-5df1-87d5-32055b8e6505.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"37e7372b-6a1c-556d-8aa8-40caa71d27ff.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"e4bf0c0f-40de-5341-8b9e-29b7c4379896.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"788f4feb-b98b-5bd1-b456-016719099a5d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"04928618-b52e-5ff7-9f5d-7f18abe4cc69.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e2a6cd19-1a09-50a2-a87e-1b8997a723c7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"90875152-3817-564b-9ebe-484c39fbb5da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"52b41d0b-c6fa-5972-8499-b3c79de881e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d26f117a-11d6-53f9-bda2-a9e251f1e2f4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"892f11f7-2223-56b8-ad63-0626b1101fcf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"415ef763-ba67-54e5-9246-f7056974ec0f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"64afe0d0-e477-55b6-8ba0-9f932d562eb9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"0a7a554c-148a-5b71-ab42-66503c25c12e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"957874f9-082c-5752-a23c-33a78b58b0b3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"94ed784b-f388-5ff3-9b45-cb4d418c26ab.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1657,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków zewnętrznych w drzewie najkrótszych ścieżek będącym rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"78a685d2-9117-5c9f-8441-4d969b9b963d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych w drzewie najkrótszych ścieżek będącym rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"699b3113-17d7-5fb8-a7cc-57e6309a1e07.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Najkrótsza ścieżka z wierzchołka <img src=\"0fb91450-1daf-55af-8fd8-c1dddaac53da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"d74c2374-e778-5746-8a29-f3404c222c1f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w rozważanym grafie jest długości dokładnie <img src=\"bcd32478-22e8-5877-adac-152b8cd3b776.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"a74e8cbd-0371-512d-bf59-4ca10374561c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"dd26691f-6bad-5135-ba74-3e42b24dc6ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"bc8f936e-b596-5f8a-bf27-68ae269f7edf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"93698640-525e-5048-bc50-5bc14f5d4a8d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d42c2da6-caae-557d-85cd-a65e05290af8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b4de806e-3fbb-51de-a736-56a85c6832e1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"413988fb-6e55-56b0-9589-64c7f1107105.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8247d033-1a06-59bf-a47a-b155a3206aa4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"fc762349-4f78-5794-ab04-71677c3d7fd7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"33b800ed-a013-5665-8665-ac1cdd0cfbc6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"162a4c09-774b-552d-a79c-f93c2e7fc53c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e54aafc8-7cbd-5f75-b169-5d49d03c96af.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a1774b72-f6f0-54f3-8303-aebb268c3e48.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"5b1c6238-47b6-5558-aade-03ea3cb19d05.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"98324635-0da3-59a4-830e-392ebb0754fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"823e2d1a-317a-5d2e-b330-3df230e238de.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1656,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"5214f665-d7da-50b5-bce2-09343aa49277.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"40285356-b653-57ab-a705-ce21e5cd2ae2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność kolorowania wierzchołków grafu <img src=\"8b4817ba-592a-578d-a24b-ff711e1e8c44.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu LF jest następująca: <img src=\"a5f5cb65-1e5f-549d-9411-291285f508c5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba chromatyczna <img src=\"8afcec07-b451-5dae-9809-afe38fd19f7a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"5eb11a7f-f9c0-516c-93a5-178a5f1520a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"0f3fc2eb-b8d3-53e2-968a-8756031ec8b8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Do początkowo pustego kopca-drzewa wstawiono <img src=\"212e4325-3b19-58cb-8ecc-03b52d58dbb3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementów. Ile liści ma kopiec utworzony z tych elementów?",
      "id": 1654,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"3e1e2f6a-0bb0-5f8a-8ace-b765bda3844c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Tyle samo&nbsp;ile wierzchołków wewnętrznych",
          "correct": true
        },
        {
          "answer": "<img src=\"fa1dc7e1-d304-5bc4-81b1-26cf32540ed0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"12c4050f-6aae-53d6-bf7a-d856c9acf37b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"e415c57c-6ff7-5b27-b668-23fdc375e4d9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"05678359-2e34-5236-9878-f1b3e5429b26.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Następnie w kopcu <img src=\"607b51e9-d0f9-557a-80de-02c0a7b2ea71.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonujem <img src=\"76d26c2c-c474-5e44-8cd1-38c74e8aa751.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -krotnie operaję DELMIN. Które z poniższych zdań jest prawdziwe?",
      "id": 1655,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"a5f241b9-22ba-50df-86ef-d34a2354889d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"d0534390-a261-58f9-80eb-3ebd5668e05c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa-kopca <img src=\"fdbc425c-fe45-5310-95c5-6962f3baefb1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"465f2e79-fea8-507d-9bc6-a7ecf7884f34.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"9dd57a85-c7ef-597f-adec-1908008a5703.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"0a7c6f3f-e28b-5490-be57-44e389ac0f51.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Dla którego z podanych ciągów utworzenie drzewa AVL przez kolejne wstawianie elementów za pomocą algorytmu <img src=\"08e0d1f9-b251-57fe-9b2a-a9603b82081b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga najmniej liczby rotacji wsród wszystkich możliwych drzew <img src=\"3a585c58-523e-513a-9500-59b340ad52cc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cio elementowych?",
      "id": 1652,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"e5c5d1e2-e8f2-51bc-b4ee-66872626b113.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"3bd9fd3d-d040-5609-ba36-46efe41ca1f4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"6baa82a0-e20c-567c-a962-de5425cd1bac.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"6782e9a6-dbd1-5e0c-a4f7-a6bef9ca1baa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"2d19266f-b98c-543c-ab73-f73dd5a19f86.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"167c5a9e-9a1c-5d8d-84fc-03a5fbf69789.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Które z poniższych zdań jest prawdziwe?",
      "id": 1653,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji przestawień elementów kopca wykonanych w trakcie jego budowy jest równa co najwyżej <img src=\"4250dba2-fb1c-55d5-ac3b-a90d5ce86b7f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wysokość drzewa-kopca <img src=\"bbc665bb-90d8-5e08-b3a9-7ecf664f788f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"8acea786-4e5b-5d92-98b8-005d122fa10f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba operacji porównań elementów kopca wykonanych w trakcie jego budowy jest równa co najwyżej <img src=\"b2633e9e-11a7-59be-a7ca-ab0df03124c1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"fe6214e5-dd16-5161-85e3-c26513379613.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"a52d1c97-43d9-53f0-af48-038bb734d673.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"ea26db00-3663-5c25-8266-9040ed2755e5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"c63bf3d0-453e-5791-b233-a083a7bc5869.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"74ba4c02-5971-594f-8338-e9aef1575613.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"29f5ab3b-1484-59eb-ac37-e229f2629087.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1651,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba rotacji pojedynczych w lewo wykonanych w trakcie budowy i usuwania elementów drzewa <img src=\"99a1b7c0-8fee-5792-93dc-96f66769f71c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"3c6950da-43fa-50a2-98fd-e195d8e299b9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"9d196eac-dd5a-5e73-8bce-ad520a060313.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"1b61a5eb-2dae-5da9-8b7f-3d2fe6c72edc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"3e0f22e1-9baa-57e2-bd9a-397e2a19c776.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"d8620a73-3e66-58ce-a0a8-577f2ccd5df3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"093508a6-c987-5eaa-987a-5017d3eac501.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"7f01f6c4-d8c6-525d-a419-5ba1a4e32f59.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Które z poniższych zdań jest prawdziwe?",
      "id": 1650,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków zewnętrznych drzewa <img src=\"7f23b6d6-7d69-5f21-a02b-4b863f38d83c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"90b19292-6da4-543d-9d81-601426640361.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"6d2a3fcc-eb29-5a35-a63b-7a64b74d1f6e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"fee8138f-750a-51e2-ba63-925500ddb93b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wysokość drzewa <img src=\"0bddca29-cf85-560d-b0a9-eec2fffd3ca7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"6eefa28f-7232-575f-bf87-a0008d362eb8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"e17ce511-3606-5f52-b1b5-71f5bd0787b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"5e9e5ddf-30c0-5518-9252-9a1d5aebbc01.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"8bb11832-1617-58ae-96b9-f09c7e38fe9b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"aeb87b53-bd2c-55e9-9e23-7fa890254625.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"206eb6a0-ff93-5fd8-ab69-708bc1dbe4bb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"cf18c7dd-44d6-5144-be1b-bb7f4a87d1ca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"77ccb024-43f8-5f20-8911-a470c7ee329a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"039d97f9-51c7-5512-a4e1-7d71cbed5ff6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"053286a0-8845-5914-b445-f89f747c4ec1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ca531c1c-e362-5719-987c-5bbf2a7982c1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"97dc8dfa-842b-5d4f-b6e4-3cde2c7db796.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności BFS z wierzchołka startowego <img src=\"76cc2605-c6bf-57c1-9c48-334094c9a70f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie BFS wierzchołki grafu umieszczamy w kolejce pomocniczej w kolejności rosnących wartości etykiet.<img src=\"eb39ea00-ab10-5808-a120-5d15c542b564.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1649,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji IN w kolejce pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"3383f092-9a47-5b6f-9744-a9604348ddb3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna długość kolejki pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"d800c51c-8e42-5901-a16b-6d570f98818d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba operacji OUT w kolejce pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"37e9ffba-abc0-5275-a4e5-947ff38f82c9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę stosu <img src=\"0ef65622-954b-5dbf-8f74-bcc01aacac2a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"9ea1e04a-a672-5fa4-a3be-1d7978c66f85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"68e296b7-ca8e-548e-8fd0-d4e9dc4388e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"6dda14cb-9f6e-5ecc-bb34-26551caa9ab2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1a0fd64b-b4e0-51b6-ba68-1ac8f4bdaff1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"024acdeb-3ff6-548c-a74a-c2fc7dc588bf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"40174fdd-79e1-5839-a402-8987c2519400.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2b183547-1b2e-5032-881d-eedee6777748.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"126e8c2d-8b12-590e-9c42-25d7f1878da6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e8799dcb-97ef-5a59-817d-d83fb279e9eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8ffcc91a-2c35-5235-809a-31d7cc256912.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1645,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu <img src=\"e59cfadd-5957-5fc7-baf2-4ac07d82e89f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania przedstawionego ciągu operacji jest równa dokładnie <img src=\"db28e573-5bbd-55d9-8ca4-9cc2374a540c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"42c48e20-bb78-52b5-82d5-79dd5b667d9a.gif\" border=\"0\\\" data-zdaj-se=\"true\">, gdzie <img src=\"c3e12db2-ff94-5f98-889b-5259a214bcf3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest stosem, którego proces konstrukcji przebiegł analogicznie jak dla stosu <img src=\"8e6b5cdb-424c-56d3-9097-0c7d26a08e97.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tyle, że dla innego ciągu operacji: <img src=\"179e172f-ec74-5075-8f25-663b8f8a5179.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6b5bfd85-4d68-5222-ae3a-2c70c25bdbfc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1387788c-3e73-5b76-b3fb-9ba5bed1ee28.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"184af2fa-ce07-5b82-a940-33ef1838b6dd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5b778758-ff58-57ac-912b-1b0827c5d685.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"fc41f039-4450-5975-9dcd-ea2c241268fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c60fd2fe-7e10-5e17-99d3-10b9379a98b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b3816f24-94dc-5c91-9213-fbb7a7e5db9b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu <img src=\"c615a7cb-cc5f-56e8-a847-b6352cde133e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania przedstawionego ciągu operacji jest równa dokładnie <img src=\"ccac6a8a-ef57-5783-bc7a-2b74c7e48b4a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"fa359744-15e9-560f-aa7c-0986f6bb4a49.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"8f4e51eb-ef1b-5fe5-a061-8cc00589e1f4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1646,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"652582ee-5c1f-5fba-85e2-7aa082366571.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PreOrder tworzą ciąg <img src=\"9a2236ad-b256-5578-8e0c-2e3f22114325.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"6cf96c4c-5e2a-5f05-8a7b-c4fc1fd45379.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"59290abf-33ac-5caf-ab6c-d849404a78e5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"bd6b6b87-967d-5793-a680-0b8c3502da2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"d5f6a502-ad07-55f3-8f84-88a1c7ef420a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"aeb74618-3158-531d-8e6e-1a42cb81b5db.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności InOrder tworzą ciąg <img src=\"4367466c-c777-54a1-b928-e85cb0fdca08.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg: <img src=\"8642bad7-8f0f-5991-93e5-eac7727f2a76.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"07ba3b4b-f9f0-5948-9eaf-e845dc6a2d58.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1647,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"eee1bd26-311a-5920-8caa-54c636c4989c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu operatorów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu operatorów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"5d34777a-9bbe-53f7-8d52-b63271a4649d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"6cca458f-acf7-5c33-83d0-504a58ba11d2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"fc803f4e-62d6-564c-b0a1-ca8596507524.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"4238c2fa-4a3b-55cc-ae4f-2638653dfa06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"c7963c4a-a46f-59f0-88ec-82f7a27eb117.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"9bc0c76c-b7e1-50b0-8508-25d03e59d3b3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?",
      "id": 1648,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba operacji FIRST we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"ae6d559f-8ad0-5da6-80d9-e726d2e8eeaf.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Tuż po sortowaniu liczb względem cyfr na <img src=\"8b8dd3c5-2910-5d59-a34d-cc6380945908.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"41d3c32d-f494-5e72-8c68-e70df069fd7d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"d825a133-f0e6-5006-8db1-e217a19c51b4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Łączna liczba operacji FIRST we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"50e62dcd-fe36-5e95-9e50-75b3871b1d00.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"8ec7bdff-5c95-5e44-ba83-b46b7e6b69f8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"cae56c22-c855-5aef-a47b-888f92e25ed1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"5b52a816-d5cf-5df8-8fed-83a4f46be562.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1643,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"8d5f370d-9c66-5d81-ba74-07a93233d89a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie <img src=\"ddd7f41c-0345-513c-9cd1-36684b255476.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"5a6c5c61-c12d-585e-9b29-26cb08e3457d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"d5da34c7-14c1-5f64-ae46-cbfd3f388ebb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"b1c56da0-a9b5-555e-9e9e-d85974f09e56.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"b603733f-641f-54a8-9b21-794e921e2343.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"ba98e41c-fb8a-5a6f-9e12-8f97c72f0ed5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"0b438582-2d1f-5794-80db-d945193561d5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"cbb73e0f-db5d-5caa-932f-0da9258a6fdc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1644,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"9cf6ce13-606e-553f-81d6-7c0533f79d7d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"0703ecb3-036b-5938-9b18-6b3c0ba27b00.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych drzewa <img src=\"8f9eca6f-da25-598c-93a2-0c1600afe5c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"c0e41dee-02b3-5999-8f06-28798ffe1248.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"f885b0d6-70d6-5a8b-ada8-6115af3a9755.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"7198ecab-cf7d-5ba7-9d7e-22f9869d1562.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej <img src=\"d5396070-df24-5d2a-a479-a5bb2e069a0e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1627,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"2f09211d-9a7f-58f1-b14d-ac251637cdb8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"e2f22921-8730-5b65-8847-f71d34fb0104.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Ciąg funkcji <img src=\"ea750706-09c6-5e96-aed5-7fcdd7c474f6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest ciągiem ściśle rosnącym względem ich rzędów",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"dc1e94cb-7f50-52f2-9b66-b37d9be1f367.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ,&nbsp;gdzie <img src=\"4d29489a-f90e-586f-984a-5e256af36ff2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Rozważmy algorytm <img src=\"0d30914d-f507-5c83-8837-40308c0a0423.gif\" border=\"0\\\" data-zdaj-se=\"true\"><br>int m:=3, wynik:=0;while (m &lt; n+1) do<br>&nbsp;&nbsp;&nbsp; m:=m*3;&nbsp;&nbsp;&nbsp; wynik:=wynik+1;<br>odreturn wynik;<br>Które z poniższych zdań jest prawdziwe?",
      "id": 1628,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Algorytm <img src=\"9ecdecb5-4c43-5c0c-84d6-4c3fa49d44d0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest częściowo poprawny względem specyfikacji <img src=\"5c9b54d9-8406-55d3-a97f-6f790904c7a0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po zakończeniu pętli w algorytmie <img src=\"58cce8d1-bcf2-5268-85e6-6fd9e0e172d4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> prawdą jest, że <img src=\"73f68e1d-4a7d-507b-9af9-067b59eb43a2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Algorytm <img src=\"9dfa094f-cf2d-5324-9c3a-58825315e980.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest&nbsp;całkowicie poprawny względem specyfikacji <img src=\"8041adf4-b9c4-522e-8aa2-43076fe6d15d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm <img src=\"af3ddfd7-97d0-5373-9cda-2813a9a9c8fd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"e621f669-9ce4-5994-a1e2-c207ef5ced57.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest typem danych reprezentującym podzbiory zbioru <img src=\"cc36bd28-52ea-5066-b370-5e585c93ba73.gif\" border=\"0\\\" data-zdaj-se=\"true\"><br>set A:= <img src=\"c9d4d734-cebf-5a2b-9d1b-79bae4664b7a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ;<br>int i:=0;while (i &lt; n) do<br>&nbsp;&nbsp; &nbsp;A:=A <img src=\"c8cf823d-05e3-5ed1-8eeb-f0a1c96be414.gif\" border=\"0\\\" data-zdaj-se=\"true\"> {i};&nbsp;&nbsp;&nbsp; i:=i+1;<br>od<br>return A;<br>Które z następujących zdań jest prawdziwe?",
      "id": 1629,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "#Niezmiennikiem pętli w algorytmie&nbsp; <img src=\"b4ad208a-7135-583b-9556-1524c12ffcad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest formuła <img src=\"e804c298-486e-543e-819e-902a6f4164d5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> 1Niezmiennikiem pętli w algorytmie <img src=\"b30a98ce-814e-5b6a-8bfd-cbba88dd7056.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest formuła <img src=\"fdb5c99c-f491-534f-a0d8-023a3ac1f4cf.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Algorytm <img src=\"b42dac58-ba09-5bac-bf09-dc6eb04e9ac6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest częściowo poprawny względem specyfikacji <img src=\"c75bbeb5-b4d2-5682-aa03-bc19627a4cfa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w strukturze liczb naturalnych, gdzie <img src=\"5fa56e33-2ea6-550d-822b-bda36b157077.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oraz <img src=\"e4202700-2f6f-55d6-8a21-84efc9a686bb.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"3eaae53e-464a-564d-bf05-7665803d9bc1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"9391f783-e419-56e2-989e-bb27c3d001b8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy rosnący ciąg różnych liczb naturalnych: <img src=\"aa9e13f8-18a7-5f8e-8e16-cebf4d9c38fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Dla owej tablicy i liczby naturalnej <img src=\"b05e24a6-61d1-5d22-8211-df386ab96f85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm wyszukiwania binarnego BinSearch. Które z poniższych zdań jest prawdziwe? Uwaga! Zakładamy, że tablica <img src=\"49602f8f-77bc-59d2-8701-5f094ddcdb61.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowana jest liczbami od <img src=\"bce48bc8-69c7-5183-a060-a1fdcdd06718.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"b1c6fec5-74ee-50b3-b3f6-e494186aa47f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1630,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejne wartości indeksów <img src=\"7c8d7372-471d-519c-a117-72647834fb26.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wyznaczane ze wzoru <img src=\"c0c50788-1cad-5745-9c07-3aabcfc4b1f9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania rozważanego algorytmu tworzą następujący ciąg liczb: <img src=\"bcb11214-a345-530b-9e7b-24dfeb27c9e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> 0Kolejne wartości indeksów <img src=\"b87d5552-6571-58e7-9e51-6404d26603f8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wyznaczane ze wzoru <img src=\"d5ff7bd7-4cc3-58be-a0b8-0a5f0148de09.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania rozważanego algorytmu tworzą następujący ciąg liczb: <img src=\"61af7ed7-7755-5607-a252-733911c01cdc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji porównań elementów tablicy <img src=\"87e3fdb7-6488-55f1-8937-298a18b70950.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wyszukiwanym elementem <img src=\"5fc91dd1-6571-5144-a07c-ea81836e6f69.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie liczbie analogicznych operacji w przypadku wyszukiwania indeksu elementu <img src=\"152eaa1c-5ea2-517f-bf65-04c48b0a081d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w tablicy <img src=\"43ead208-8bdc-5e7c-a1e4-4659b3e353a4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przy zastosowaniu tego samego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Dany jest <img src=\"03b675e9-830d-54cd-a24d-58f65d1774e1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementowy ciąg uporządkowany, gdzie <img src=\"33b189fb-b692-55b6-9a1f-45f11804f2e8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest podzielene przez <img src=\"504ff43d-1744-5b90-a35f-bd83d8be8960.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Który z algorytmów wyszukiwania ma mniejszy koszt w najgorszym przypadku:",
      "id": 1631,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Sekwencyjny ze skokami co <img src=\"5e60e2b9-d176-5b9e-bb4c-a06f1105228a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Rozważane algorytmy mają zawsze dokładnie taki sam koszt wykonania, nie zależnie od długości ciągu <img src=\"9d3fda1a-c3db-58d2-997a-a0338edf1b57.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "algorytm sekwencyjny ze skokami co <img src=\"5b75e651-9aa8-58e4-891d-a63a5ab787f3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , czy algorytm ze skokami co <img src=\"5ef396ab-0a09-5495-b29a-3cdf1bf73a5c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?Oba algorytmy wykonują asymptotycznie taką samą liczbę porównań&nbsp;w przypadku pesymistycznym",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"c4a3e607-9888-5803-8da3-741281c3f3fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"b98a5799-38a5-5647-aa6f-edfd0d41f505.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"5dded704-4c7e-5f3f-a18b-1bff91484968.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"6b0cff92-66cd-53b6-b38f-04f2ae6b4764.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1632,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest większa od liczby wykonań tego algorytmu, gdy zamiast indeksu elementu <img src=\"e683846e-e4f4-5f1f-8ece-3e8027190853.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości będziemy wyszukiwali indeksu elementu <img src=\"debf27bf-d879-513a-a30e-77f71326749d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        },
        {
          "answer": "Argumentem <img src=\"07e066e3-7071-56ae-9e66-b9e2b51bb241.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"a59509e8-9c45-5f64-be01-96003bede19b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"56936a92-8151-5b73-be05-7861199d55e4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        },
        {
          "answer": "Argumentem <img src=\"37c4d7eb-d5fe-5c6a-8c7c-7b15ecaa4da7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"50c882a3-3922-5a5a-9286-f1c484cd231d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"b7ca2d63-0b96-50a3-9654-2db4d0a20598.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"8332238b-6a24-5a05-b2c8-89ed876bd38f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"7423f41b-dd0a-588d-a027-9e23b502621b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"a00c5409-dcc1-5bf8-b113-c180b266f183.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"c23b012a-c38f-5c6a-9ceb-a8a858524805.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1633,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"a15267d6-4d2e-533b-89b3-7f048a478de5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"02aa8ead-0e89-58ad-b72d-84552b65ba47.gif\" border=\"0\\\" data-zdaj-se=\"true\"> prawy wskaźnik wykorzystywany w rozważanym algorytmie, wskazuje na element tablicy <img src=\"ddfc4193-9666-539e-8145-d9100b1fc14c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> o indeksie <img src=\"d79b5d70-de97-590c-9811-a5b64c2f0062.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"c712b335-d812-5e7e-af0e-c2d7e030e319.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"dd6ca8ca-c5c3-58bd-8df4-ee648d272588.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"352bfba6-23e3-53f4-849e-7a2584ea80b7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"b73697f5-cf27-58fb-bb7b-061b0db58721.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"8b5aeea7-78f1-5009-b8e2-2204ea088952.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"ba3dd4a8-a722-54ff-b328-0dd5a4f3ee76.gif\" border=\"0\\\" data-zdaj-se=\"true\"> prawy wskaźnik wykorzystywany w rozważanym algorytmie, wskazuje na element tablicy <img src=\"afb6f682-cbce-519f-9b51-a5a88d131e29.gif\" border=\"0\\\" data-zdaj-se=\"true\"> o indeksie <img src=\"c628106d-68ab-585c-80b7-1e25cd2a0e47.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"d57f53f8-552d-5d2e-996b-373733f898d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"b1503634-f185-5c5b-963e-37657f7d3150.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"fdef51ba-8f74-58b2-9e40-2e062f94a67c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1634,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"a815abd4-88c6-5675-8bb8-2ad3b1365540.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"3379263a-26ee-5e31-a78f-3716e1ee8ace.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"a4b4d1c6-ca7c-5f0b-bf51-4408535dd4d8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"37a00906-3987-5d73-9569-03f6462db51f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"04c701eb-3e4b-5498-9346-b844c367aa73.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"541b5052-2684-5c48-b0c2-94fa890ac51e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"deb2962e-7fb1-5005-bd12-73857ff04e78.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1635,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"2b95efd8-90f5-540a-a28a-b47f12072b94.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"d2b2f837-a0f2-57d7-82fc-99e2dca623a5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"3d1bf027-f5a6-509b-a28f-3effdd282d0f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"0a78c7ef-61c8-5e71-b3e1-52b379c9217e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"1e1edc23-86b8-5e0c-b95e-4db8a30894da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"08e2861e-ccb4-5c5c-96d4-14b59742a78c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"1c9bc034-3a7a-5cb6-8b94-08e08d08c574.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"0aeb1632-14d7-5ab3-9fea-b8edf23fe62f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"6265fb76-8928-5974-ba35-4b680a8dbcbf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"2d687d24-50a4-5f92-aa66-97ab6741b54f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"65dbe87e-2e8b-5b5c-bd55-a384529bf2d1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"f1462537-810e-5cc6-a262-6b75932f83fb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"85657c69-096c-5992-ae8c-81775710785c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"37a9c565-7bf1-5f6d-80cb-e632aeaecdea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1636,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"f12ba088-7b02-5830-91d7-4af536645f46.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"aac4ad06-1718-5074-972f-5094a533a646.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"9c859c52-7064-5e91-9d02-3474fd517159.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"2e42d7eb-ceca-5fec-8520-67c6c6b84f8d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"fc819280-3f23-55fa-a2ea-6d78ecf6a968.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"a1e69e36-5d7a-5bed-980b-d59d5c350da3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"cb33361b-a6c2-5063-8c81-1c4e54491283.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"403e0c36-c95f-5daf-ad2a-4d3c7ba4d761.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"3c2851b6-0493-5181-86d1-4c1c04ed90be.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"9ce668aa-ff25-5869-bde3-86d7ea94cf98.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wywołań rekurencyjnych algorytmu sortowania QuickSort, dla danych rozmiaru <img src=\"050efec3-11c5-5f2d-9a66-0a8090e408dc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"6a27074a-064a-5077-8104-2f059375fbe8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1637,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"296d9c55-f0ed-51a8-a232-6274ca4f4b6c.gif\" border=\"0\\\" data-zdaj-se=\"true\">, gdzie <img src=\"3be643d0-a878-5ede-b6d4-a85241ce78f6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest liczbą wierzchołków&nbsp;zewnętrznych w drzewie <img src=\"2bebd4cd-fe89-5104-9c94-085f373033e1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w przypadku pesymistycznym",
          "correct": false
        },
        {
          "answer": "<img src=\"40022edc-29ed-5bc5-b266-cda49bdabadc.gif\" border=\"0\\\" data-zdaj-se=\"true\">, gdzie <img src=\"e0c035ce-0319-5314-8df5-e16fc222d9d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest liczbą wierzchołków&nbsp;zewnętrznych w drzewie <img src=\"d3b7a0a8-538a-5810-b913-d3d8444b3be1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w przypadku oczekiwanym",
          "correct": false
        },
        {
          "answer": "<img src=\"3201fae3-c2ae-5261-ba6e-01d5df4adfa0.gif\" border=\"0\\\" data-zdaj-se=\"true\">, gdzie <img src=\"72d87909-bed1-5d59-bfbf-496024f3ff31.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest liczbą wierzchołków&nbsp;wewnętrznych w drzewie <img src=\"3a086ee3-1d14-5255-a892-c55c22ff9e72.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w przypadku pesymistycznym",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"43a56bc8-4652-5731-a27f-e79a3355af2d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"e2524b17-d335-56a6-8a0b-13b27ab44679.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg liczb naturalnych: <img src=\"c88259be-2b2d-5037-a54a-f7318d4ac446.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm CountingSort. Które z poniższych zdań jest prawdziwe?",
      "id": 1638,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po drugiej pętli iteracyjnej (sumowanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"ac360850-95d1-540f-9bfa-ac4821d0264c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po pierwszej pętli iteracyjnej (zliczanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"3382358d-59b2-506b-ba16-5b29413517e4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po trzeciej pętli iteracyjnej (wypisanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"499ee682-0b44-51f2-939a-52f90464847f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"d241a653-df1f-59d6-bcde-bbe4c1f44fba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"3ad4d523-00ed-54a0-829b-f2e7b192640d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"be432ac5-d491-58fa-b0aa-0c6e0b684a45.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm MergeSort w implementacji rekurencyjnej, z procedurą scalania zgodną z metodą Merge. Które z poniższych zdań jest prawdziwe?",
      "id": 1639,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu MergeSort jest równa dokładnie wysokości drzewa wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"7da475e3-ce90-525d-bc0b-7634e995541f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu MergeSort jest równa dokładnie <img src=\"32fcd57a-887c-5145-95f3-1a5d4bb0c15f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Merge jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"9693f06d-8747-51da-b5ee-04f573c50957.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Lepiej użyć algorytmu InsertionSort, zamiast MergeSort, kiedy…",
      "id": 1220,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "dane są prawie posortowane",
          "correct": true
        },
        {
          "answer": "mamy do czynienia z bardzo małymi danymi",
          "correct": true
        },
        {
          "answer": "mamy bardzo mało dodatkowej pamięci",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Który z podanych poniżej ciągów jest asymptotycznie rosnącym ciągiem funkcji zmiennej n w dziedzinie liczb naturalnych dodatnich:",
      "id": 1221,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "2n, (3!)n/2, (32)n/2, (n/2)!, n!-7n, nn/3",
          "correct": true
        },
        {
          "answer": "2n-1, lg(lg(n!)), lg(n)-3, n1/3, n3, 2n, 3n-2",
          "correct": false
        },
        {
          "answer": "lg(n), lg(n!), n2, n2-n, n3+100, lg(n)×n!, n!",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy pewien algorytm o złożoności obliczeniowej O(n2), zmierzyliśmy czas działania dla pewnych danych o dużej liczbie elementów, równej n i czas wyniósł t.",
      "id": 1213,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Szacunkowo, algorytm w ciągu 4t, jest w stanie przetworzyć dane o wielkości 2n",
          "correct": true
        },
        {
          "answer": "Szacunkowo, algorytm w ciągu 16t, jest w stanie przetworzyć dane o wielkości 8n",
          "correct": false
        },
        {
          "answer": "Szacunkowo, algorytm w ciągu 8t, jest w stanie przetworzyć dane o wielkości 2n",
          "correct": true
        },
        {
          "answer": "Szacunkowo, algorytm dla danych wielkości 4n, będzie działać 4t.",
          "correct": false
        },
        {
          "answer": "Szacunkowo, algorytm w ciągu 64t, jest w stanie przetworzyć dane o wielkości 8n",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Dana jest funkcja laszująca h(i)=i mod17 oraz rehaszująca r(i)=(i+3)mod17. Korzystając z tych funkcji wprowadzamy do początkowo pustej tablicy intA[16] kolejno wartości: 6,0,20,13,3,17. Po wprowadzeniu tych liczb:",
      "id": 1214,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "trzy liczby znajdują się pod indeksami im równymi",
          "correct": true
        },
        {
          "answer": "0 poprzedza wszystkie inne wprowadzone wartości",
          "correct": true
        },
        {
          "answer": "3 występuje przed 6",
          "correct": false
        },
        {
          "answer": "17 znajdzie się po wszystkich wprowadzonych wartościach",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wyznaczenie operacji(i) dominującej/ych jest potrzebne do określenia:",
      "id": 1215,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "złożoności optymistycznej pamięciowej",
          "correct": true
        },
        {
          "answer": "złożoności oczekiwanej pamięciowej",
          "correct": true
        },
        {
          "answer": "złożoności oczekiwanej obliczeniowej",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Analizujemy częściową poprawność algorytmu. Powinniśmy więc sprawdzić:",
      "id": 1216,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "własność stopu",
          "correct": true
        },
        {
          "answer": "krok indukcyjny",
          "correct": false
        },
        {
          "answer": "czy niezmiennik pętli jest prawdziwy po wejściu do pętli dla danych spełniających warunek początkowy",
          "correct": true
        },
        {
          "answer": "czy niezmiennik pętli jest prawdziwy po wejściu do pętli dla każdych danych wejściowych",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech f(n)=n 2 lg(n), wtedy prawdą jest, że:",
      "id": 1217,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "f(n) × f(n)=?(n3)",
          "correct": true
        },
        {
          "answer": "f(n) × f(n)= ?(n3)",
          "correct": false
        },
        {
          "answer": "f(n) =O(n3)",
          "correct": true
        },
        {
          "answer": "f(n) = ? (2n)",
          "correct": false
        },
        {
          "answer": "f(n)=? (n2)",
          "correct": true
        },
        {
          "answer": "f(n)+f(n)=?(n3)",
          "correct": false
        },
        {
          "answer": "f(n)+f(n)=O(n3)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Pesymistycznie operacja wyszukiwania elementu w n-elementowym drzewie AVL: Niech f(n)=n 2 lg(n), wtedy prawdą jest, że:",
      "id": 1218,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "wymaga ?(logn) pamięci",
          "correct": false
        },
        {
          "answer": "ma złożoność obliczeniową O(lg n)",
          "correct": true
        },
        {
          "answer": "wymaga ?(1) pamięci",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech Alg1 oraz Alg2 będą algorytmami takimi, że T(Alg1,n)=O(nlg(n)) oraz  A(Alg2,n)=O(lg(n!)) i W(Alg2,n)=?(n3). Rozważmy teraz algorytm Alg3 taki, że Alg3(n)= <br>{<br>int i=0; <br>while(i<n) do=\"\" <br=\"\">if((i MOD 2)= =0) <br>Alg1(i) <br>else Alg2(i); <br>i=i+1 <br>od<br>},<br>wtedy:\n          </n)>",
      "id": 1219,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "A(Alg3,n)=?(n3)",
          "correct": false
        },
        {
          "answer": "A(Alg3,n)=O(n2)",
          "correct": false
        },
        {
          "answer": "W(Alg3,n)=?(n3lg(n))",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm Alg(n)= <br>{<br>if(n= =0) <br>return 3 <br>else return Alg(n-1) + Alg(n-1) + Alg(n-1)) <br>},<br> wtedy dla n naturalnego:",
      "id": 1207,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "T(Alg, n)=?(3n)",
          "correct": true
        },
        {
          "answer": "Alg(n)=3n",
          "correct": false
        },
        {
          "answer": "W(Alg, n)? ?(A(Alg,n))",
          "correct": false
        },
        {
          "answer": "S(Alg, n)=O(n), jeżeli nie uwzględnimy stos wywołań rekurencyjnych",
          "correct": true
        },
        {
          "answer": "S(Alg, n)=?(n), jeżeli uwzględnimy stos wywołań rekurencyjnych",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozpatrujemy całkowitą poprawność algorytmu, poprzez metodę niezmienników pętli. Jesteśmy w miejscu, tuż po zakończeniu pętli. Wiemy, że:",
      "id": 1208,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "zachodzi zaprzeczenie dozoru pętli",
          "correct": true
        },
        {
          "answer": "zachodzi zaprzeczenie dozoru pętli oraz niezmiennik pętli z ostatniej iteracji",
          "correct": true
        },
        {
          "answer": "zachodzi dozór pętli oraz niezmiennik pętli z ostatniej iteracji",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Przy założeniu, że n&gt;0, a przy tym n jest liczbą parzystą, zaś k jest liczbą całkowitą nieparzystą, dla pętli <br>j=n; <br>x=k; <br>while(j!=0) <br>{<br>x+=j; <br>j--;<br>}<br>poprawnym niezmiennikiem jest:",
      "id": 1209,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "parzystość zmiennych j oraz x są zawsze różne",
          "correct": false
        },
        {
          "answer": "jeśli pętla wykonała co najmniej 4 obroty, to parzystość x oraz j są takie same, jak cztery obroty pętli wcześniej",
          "correct": true
        },
        {
          "answer": "x?0",
          "correct": false
        },
        {
          "answer": "j ?0",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo T typu AVL powstałe przez losowe wstawianie wierzchołków o etykietach 1,2,3,…., n-1,n do początkowo pustej struktury, wtedy:",
      "id": 1210,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "w drzewie #%T%# może istnieć ścieżka korzeń-liść, której długość jest rzędu #%on^(1/2)%#",
          "correct": true
        },
        {
          "answer": "wysokość drzewa T jest nie większa niż c×n, gdzie c jest pewną stałą",
          "correct": true
        },
        {
          "answer": "w drzewie T może istnieć ścieżka korzeń-liść, której długość jest rzędu lg(lg(n))",
          "correct": false
        },
        {
          "answer": "usunięcie pewnego wierzchołka z drzewa T może wymagać wykonania co najwyżej jednej podwójnej rotacji",
          "correct": true
        },
        {
          "answer": "usunięcie pewnego wierzchołka z drzewa T może wymagać wykonania ?(lg(n)) rotacji",
          "correct": true
        },
        {
          "answer": "wstawienie wierzchołka z etykietą n+1 do drzewa T wymaga wykonania co najwyżej jednej podwójnej rotacji",
          "correct": true
        },
        {
          "answer": "wstawienie wierzchołka z etykietą n+1 do drzewa T wymaga ?(n) rotacji",
          "correct": false
        },
        {
          "answer": "wysokość drzewa T jest nie większa niż c×lg(n), gdzie c jest pewną stałą",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Które z poniższych zdań jest zawsze prawdziwe w strukturze słowników:",
      "id": 1211,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "¬member(insert(delete(d,e),e),e)",
          "correct": false
        },
        {
          "answer": "empty(d)-empty(delete(insert(insert(d,e),e),e))",
          "correct": false
        },
        {
          "answer": "member(insert(delete(d,e),e),e)",
          "correct": true
        },
        {
          "answer": "¬empty(d) - empty(delete(insert(insert(d,e),e),e))",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Które z poniższych zdań jest zawsze prawdziwe w strukturze stosów:",
      "id": 1212,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "¬empty(s)›top(s)?top(push(pop(s),e))",
          "correct": false
        },
        {
          "answer": "¬empty(s)›top(s)(pop(push(s,top(s))))=top(s)",
          "correct": false
        },
        {
          "answer": "¬empty(s)›top(s)(pop(push(s,top(s))))=top(s)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm Alg(n)= <br>{<br>int k=1, x=1; <br>while(k<n) do=\"\" <br=\"\">k=k+1; <br>x=x*k <br>od<br>}. <br>Która z wymienionych poniżej formuł jest niezmiennikiem pętli iteracyjnej w algorytmie Alg?\n          </n)>",
      "id": 1204,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "x=1+2+3+…+(k-1)+k",
          "correct": false
        },
        {
          "answer": "x=x*k i k ?x",
          "correct": false
        },
        {
          "answer": "x=k!",
          "correct": false
        },
        {
          "answer": "x=k! i x?k",
          "correct": true
        },
        {
          "answer": "x=k! i s?k",
          "correct": false
        },
        {
          "answer": "k ?n",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm Alg(n)= <br>{<br>int s=0, k=1; <br>while(k&lt;=n) do <br>s=k*k; <br>k=k+1 <br>od<br>}.<br>Które z poniższych zdań jest prawdziwe:",
      "id": 1205,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "algorytm Alg zatrzymuje się dla dowolnej parzystej liczby naturalnej",
          "correct": true
        },
        {
          "answer": "algorytm Alg jest całkowicie poprawny dla warunku początkowego i końcowego odpowiednio WP=(n jest liczbą naturalną) oraz WK=(s=?ni=1 (i+k2))",
          "correct": false
        },
        {
          "answer": "algorytm Alg nie zatrzymuje się dla dowolnej liczby naturalnej n?210",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm Alg(n)={<br>int s=0, k=1; <br>while(k&lt;=n) do <br>s=s+k*k; <br>\tk=k+1 <br>od<br>}.<br>Które z poniższych zdań jest prawdziwe:",
      "id": 1206,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Algorytm Alg jest całkowicie poprawny dla warunku początkowego i końcowego odpowiednio WP=(n jest liczbą naturalną) oraz WK=(s=?ni=1(i-1)2)",
          "correct": false
        },
        {
          "answer": "Algorytm Alg jest całkowicie poprawny dla warunku początkowego i końcowego odpowiednio WP=(n jest liczbą naturalną) oraz WK=(s=?ni=1(i+k)2)",
          "correct": false
        },
        {
          "answer": "Algorytm Alg jest częściowo poprawny dla warunku początkowego i końcowego odpowiednio WP=(n jest liczbą naturalną) oraz WK=(s=?ni=1 i2)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech D będzie drzewem decyzyjnym dla pewnego algorytmu sortowania przez porównania zastosowanego do danych wejściowych rozmiaru n, wtedy:",
      "id": 1196,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "liczba liści w drzewie D jest co najwyżej rzędu n2",
          "correct": false
        },
        {
          "answer": "liczba liści w drzewie D jest co najmniej rzędu nn",
          "correct": true
        },
        {
          "answer": "wysokość drzewa D jest rzędu co najwyżej lg(n!)",
          "correct": false
        },
        {
          "answer": "wysokość drzewa D jest rzędu co najmniej lg(n!)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech T będzie drzewem BST powstałym przez losowe wstawianie wierzchołków o etykietach 8,2,4,7,6,1,3,0,5 do początkowo pustej struktury, wtedy:",
      "id": 1197,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "wysokość drzewa T jest równa co najmniej lg(n), gdzie n jest liczbą wierzchołków rozważanego drzewa",
          "correct": true
        },
        {
          "answer": "wysokość drzewa T jest równa co najwyżej 5",
          "correct": false
        },
        {
          "answer": "wysokość drzewa T jest zależna od kolejności wstawiania rozważanych wierzchołków i w przypadku pesymistycznym może być równa 8",
          "correct": true
        },
        {
          "answer": "wierzchołki drzewa T wypisane w kolejności InOrder tworzą ciąg nierosnący",
          "correct": false
        },
        {
          "answer": "wierzchołki drzewa T wypisane w kolejności InOrder mogą odpowiadać ciągowi wierzchołków w kolejności PostOrder",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech T będzie drzewem BST powstałym przez kolejne wstawianie wierzchołków o etykietach 8,2,4,7,6,1,3,0,5 do początkowo pustej struktury, wtedy:",
      "id": 1198,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "usunięcie wierzchołka z etykietą 2 w drzewie T prowadzi do drzewa, w którym w miejscu wierzchołka z etykietą 2 znajdzie się wierzchołek z etykietą 4",
          "correct": false
        },
        {
          "answer": "usunięcie wierzchołka z etykietą 8 w drzewie T prowadzi do drzewa, którego korzeniem będzie wierzchołek z etykietą 2",
          "correct": true
        },
        {
          "answer": "usunięcie wierzchołka z etykietą 2 w drzewie T prowadzi do drzewa, w którym w miejscu wierzchołka z etykietą 2 znajdzie się wierzchołek z etykietą 1 lub 3",
          "correct": true
        },
        {
          "answer": "wierzchołki drzewa T wypisane w kolejności InOrder tworzą ciąg 8,0,1,2,3,4,7,5,6",
          "correct": false
        },
        {
          "answer": "wysokość drzewa T jest równa co najwyżej lg(n), gdzie n jest liczbą wierzchołków rozważanego drzewa",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Załóżmy, że kolejka Q zawiera n elementów i że wykonujemy jedynie operacje zdefiniowane w strukturze kolejek, wtedy:",
      "id": 1199,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "wycięcie z kolejki Q elementu znajdującego się w odległości 1 względem początku kolejki wymaga wcześniejszego wyjęcia z kolejki n±1 elementów",
          "correct": false
        },
        {
          "answer": "używając tylko co najwyżej dwóch kolejek pomocniczych Q1 oraz Q2 i operacji kolejkowych można odwrócić kolejność elementów  w kolejce Q",
          "correct": true
        },
        {
          "answer": "wycięcie z kolejki Q elementu znajdującego się w odległości n/4 względem początku kolejki wymaga wcześniejszego wyjęcia z kolejki n/4±1 elementów",
          "correct": true
        },
        {
          "answer": "wycięcie z kolejki Q elementu znajdującego się w odległości n względem końca kolejki wymaga wcześniejszego wyjęcia z kolejki n±1 elementów",
          "correct": false
        },
        {
          "answer": "wycięcie z kolejki Q elementu znajdującego się w odległości n/4 względem początku kolejki wymaga wcześniejszego wyjęcia z kolejki 3n/4±1 elementów",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Załóżmy, że stos S zawiera n elementów i że wykonujemy jedynie operacje zdefiniowane w strukturze stosów, wtedy:",
      "id": 1200,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "zdjęcie ze stosu S elementu znajdującego się na wysokości 1 względem góry stosu wymaga wcześniejszego zdjęcia ze stosu n±1 elementów",
          "correct": false
        },
        {
          "answer": "używając tylko co najwyżej dwóch stosów pomocniczych S1 i S2 i operacji stosowanych można odwrócić kolejność elementów na stosie S",
          "correct": true
        },
        {
          "answer": "zdjęcie ze stosu S elementu znajdującego się na wysokości n/4 względem góry stosu wymaga wcześniejszego zdjęcia ze stosu n/4±1 elementów",
          "correct": true
        },
        {
          "answer": "zdjęcie ze stosu S elementu znajdującego się na wysokości n względem góry stosu wymaga wcześniejszego zdjęcia ze stosu n±1 elementów",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Nazwa struktury danych AVL i związany z nią algorytm pochodzi od:",
      "id": 1201,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "nazwy uniwersyteckiej ligi siatkówki, której pasjonatami byli jej twórcy",
          "correct": false
        },
        {
          "answer": "pierwszych liter angielskiego skrótu opisującego najważniejszą cechę tej struktury",
          "correct": false
        },
        {
          "answer": "pierwszych liter nazwisk trzech twórców tej metody",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Które z poniższych zdań jest zawsze prawdziwe w strukturze kolejek:",
      "id": 1202,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "out(in(in(q,e),e))=in(out(in(q,e)),e)",
          "correct": true
        },
        {
          "answer": "¬empty(q) ›first(q)?first(in(out(q),e))",
          "correct": false
        },
        {
          "answer": "¬empty(q) › empty(out(q))=true",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm Alg i korzeń drzewa binarnego root, gdzie Alg(root)= <br>{<br>if(root==NULL) <br>return 0 <br>else if(root.left==NULL AND root.right==NULL) <br>return 1 <br>else return Alg(root.left) + Alg(root.right) +1<br>}, <br>wtedy:",
      "id": 1203,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "rezultatem wywołania algorytmu Alg dla drzewa binarnego o korzeniu root jest liczba wierzchołków wewnętrzn. tego drzewa",
          "correct": false
        },
        {
          "answer": "rezultatem wywołania algorytmu Alg dla drzewa binarnego o korzeniu root jest liczba wierzchołków tego drzewa",
          "correct": true
        },
        {
          "answer": "rezultatem wywołania algorytmu Alg dla drzewa binarnego o korzeniu root jest liczba wierzchołków zewnętrznych tego drzewa",
          "correct": false
        },
        {
          "answer": "S(Alg, root)=?(n), gdzie n jest liczbą wierzchołków drzewa o korzeniu root i uwzględniamy stos wywołań rekurencyjnych",
          "correct": true
        },
        {
          "answer": "rezultatem wywołania algorytmu Alg dla drzewa binarnego o korzeniu root jest wysokość tego drzewa",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Jeżeli pewien algorytm działa w pesymistycznym czasie O(logn) dla danych wielkości n, to będzie działał w pesymistycznym czasie O(logn) również dla danych wielkości:",
      "id": 1191,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "2n",
          "correct": true
        },
        {
          "answer": "logn",
          "correct": true
        },
        {
          "answer": "n2",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy graf pełny z wagami G=(V,E), gdzie |V| =n, wtedy:",
      "id": 1192,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "rozmiar tablicy list incydencji grafu G jest rzędu ?(n2)",
          "correct": true
        },
        {
          "answer": "rozmiar macierzy sąsiedztwa grafu G jest rzędu ?(n2)",
          "correct": true
        },
        {
          "answer": "rozmiar macierzy sąsiedztwa grafu G jest rzędu ?(n)",
          "correct": false
        },
        {
          "answer": "rozmiar tablicy list incydencji grafu G jest rzędu ?(n)",
          "correct": true
        },
        {
          "answer": "rozmiar tablicy list incydencji grafu G jest rzędu ?(n)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zastosowanie algorytmu sortowania przez scalanie MS do uporządkowanych nierosnąco danych wejściowych X rozmiaru n, wtedy:",
      "id": 1193,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "T(MS(X),n)= ?(lg(n!))",
          "correct": true
        },
        {
          "answer": "w tym przypadku wysokość drzewa wywołań rekurencyjnych algorytmu MS będzie nie mniejsza niż n",
          "correct": false
        },
        {
          "answer": "T(MS(X),n)= O(n)",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech Alg będzie optymalnym algorytmem dla problemu wyszukania pewnego elementu(zakładamy, że takowy istnieje) w n-elementowym nieuporządkowanym uniwersum, wtedy:",
      "id": 1194,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "A(Alg, n)= ?(nxlg(n))",
          "correct": false
        },
        {
          "answer": "W(Alg, n)=O(n1/2)",
          "correct": false
        },
        {
          "answer": "A(Alg, n)=O(W(Alg,n))",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy graf  G=(V,E), gdzie |V|=n i n&gt;10, w którym algorytmy DFS oraz BFS generują ten sam ciąg etykiet odwiedzanych wierzchołków z pewnego wierzchołka źródłowego, wtedy graf G może być:",
      "id": 1195,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "grafem-drzewem binarnym wysokości ?(lg(n))",
          "correct": false
        },
        {
          "answer": "grafem pustym",
          "correct": true
        },
        {
          "answer": "grafem-gwiazdą, tj. grafem spójnym takim, że każdy wierzchołek tego grafu ma rząd równy 1 za wyjątkiem wierzchołka centralnego, którego rząd jest równy n-1",
          "correct": true
        },
        {
          "answer": "grafem-drzewem binarnym wysokości n-1",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Szybkiej transformaty Fouriera używamy do:",
      "id": 1183,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "analizy i obróbki sygnałów dźwiękowych",
          "correct": true
        },
        {
          "answer": "znajdowania najkrótszej ścieżki w grafie",
          "correct": false
        },
        {
          "answer": "mnożenia wielomianów",
          "correct": true
        },
        {
          "answer": "mnożenia liczb",
          "correct": true
        },
        {
          "answer": "sortowania",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Jakie jest najlepsze oszacowanie na złożoność problemu znajdowania największego elementu w posortowanej tablicy rozmiaru n:",
      "id": 1184,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "O(n)",
          "correct": false
        },
        {
          "answer": "O(lgn)",
          "correct": false
        },
        {
          "answer": "O(1)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Dla posortowanej niemalejąco tablicy A następujący algorytm:<br>I=0; p=n-1; <br>while(I<p){ <br=\"\"> s=(I+p+1)/2; <br>if(x<a[s]) <br=\"\">p=s-1; <br>else I=s; <br>}<br> return I: <br>\n          </a[s])></p){>",
      "id": 1185,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "oblicza indeks ostatniego wystąpienia największej liczby nieprzekraczającej x",
          "correct": true
        },
        {
          "answer": "oblicza indeks ostatniego wystąpienia najmniejszej liczby nieprzekraczającej x",
          "correct": false
        },
        {
          "answer": "oblicza indeks pierwszego wystąpienia najmniejszej liczby co najmniej równej x",
          "correct": false
        },
        {
          "answer": "oblicza indeks ostatniego wystąpienia x w A",
          "correct": false
        },
        {
          "answer": "oblicza indeks pierwszego wystąpienia x w A",
          "correct": false
        },
        {
          "answer": "oblicza indeks pierwszego wystąpienia największej liczby nieprzekraczającej x",
          "correct": false
        },
        {
          "answer": "zawsze działa w czasie O(logn)",
          "correct": true
        },
        {
          "answer": "może się zapętlić",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Stabilne są algorytmy sortowania:",
      "id": 1186,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Insertionsort",
          "correct": true
        },
        {
          "answer": "Selectionsort",
          "correct": false
        },
        {
          "answer": "QuickSort",
          "correct": false
        },
        {
          "answer": "HeapSort",
          "correct": false
        },
        {
          "answer": "MergeSort",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Spośród następujących rzędów złożoności minimalne są:",
      "id": 1187,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "O(2log n)",
          "correct": true
        },
        {
          "answer": "O(n log n)",
          "correct": false
        },
        {
          "answer": "O(ln 2n)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Spośród następujących rzędów złożoności minimalne są:",
      "id": 1188,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "O(ln 2n)",
          "correct": true
        },
        {
          "answer": "O(log102n)",
          "correct": true
        },
        {
          "answer": "O(nlogn)",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Jeżeli pewien  algorytm działa w pesymistycznym czasie O(n) dla danych wielkości n, to będzie działał w pesymistycznym czasie O(n) również dla danych wielkości:",
      "id": 1189,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "n+1",
          "correct": true
        },
        {
          "answer": "2n",
          "correct": true
        },
        {
          "answer": "2n + 2ln n",
          "correct": true
        },
        {
          "answer": "logn",
          "correct": true
        },
        {
          "answer": "nlogn",
          "correct": false
        },
        {
          "answer": "2n + 2ln n",
          "correct": true
        },
        {
          "answer": "n2",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Jeżeli pewien  algorytm działa w pesymistycznym czasie O(nlogn) dla danych wielkości n, to będzie działał w pesymistycznym czasie O(nlogn) również dla danych wielkości:",
      "id": 1190,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "n+1",
          "correct": true
        },
        {
          "answer": "2n + 2ln n",
          "correct": true
        },
        {
          "answer": "nlogn",
          "correct": false
        },
        {
          "answer": "2n",
          "correct": true
        },
        {
          "answer": "n2",
          "correct": false
        },
        {
          "answer": "logn",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność pesymistyczną obliczeniową z oczekiwaną pamięciową:",
      "id": 1178,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pierwsza jest (zawsze) gorsza od drugiej",
          "correct": false
        },
        {
          "answer": "pierwsza jest (zawsze) nie lepsza od drugiej",
          "correct": true
        },
        {
          "answer": "mogą być sobie równe",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność pesymistyczną obliczeniową z optymistyczną obliczeniową:",
      "id": 1179,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pierwsza może być lepsza od drugiej",
          "correct": false
        },
        {
          "answer": "pierwsza jest (zawsze)gorsza od drugiej",
          "correct": false
        },
        {
          "answer": "mogą być sobie równe",
          "correct": true
        },
        {
          "answer": "pierwsza jest (zawsze) nie lepsza od drugiej",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność pesymistyczną obliczeniową z oczekiwaną obliczeniową:",
      "id": 1180,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pierwsza jest (zawsze)gorsza od drugiej",
          "correct": false
        },
        {
          "answer": "mogą być sobie równe",
          "correct": true
        },
        {
          "answer": "pierwsza może być lepsza od drugiej",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność oczekiwaną obliczeniową z oczekiwaną pamięciową:",
      "id": 1181,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pierwsza jest (zawsze) gorsza od drugiej",
          "correct": false
        },
        {
          "answer": "pierwsza jest (zawsze) nie lepsza od drugiej",
          "correct": false
        },
        {
          "answer": "mogą być sobie równe",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność oczekiwaną obliczeniową z optymistyczną pamięciową:",
      "id": 1182,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "mogą być sobie równe",
          "correct": true
        },
        {
          "answer": "pierwsza jest (zawsze) nie lepsza od drugiej",
          "correct": true
        },
        {
          "answer": "pierwsza jest (zawsze) gorsza od drugiej",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a} i krawędzi a-&gt;a. Jest on:",
      "id": 1170,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "acykliczny",
          "correct": false
        },
        {
          "answer": "drzewem",
          "correct": false
        },
        {
          "answer": "spójny",
          "correct": true
        },
        {
          "answer": "pełny",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a,b,c,d} i krawędzi a-&gt;b, c-&gt;d. Jest on:",
      "id": 1171,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pełny",
          "correct": false
        },
        {
          "answer": "acykliczny",
          "correct": true
        },
        {
          "answer": "spójny",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a,b,c,d} i krawędzi a-&gt;b, b-&gt;a, c-&gt;d, d-&gt;c. Jest on:",
      "id": 1172,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pełny",
          "correct": false
        },
        {
          "answer": "acykliczny",
          "correct": false
        },
        {
          "answer": "spójny",
          "correct": false
        },
        {
          "answer": "drzewem",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Listę, ze zmodyfikowaną operacją get, który przesuwa żądany element na początek listy:",
      "id": 1173,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "warto używać dla losowych danych",
          "correct": false
        },
        {
          "answer": "zawsze warto używać, kiedy większość operacji, to operacje get",
          "correct": false
        },
        {
          "answer": "warto używać, kiedy większość operacji tyczy się jednego elementu",
          "correct": true
        },
        {
          "answer": "warto używać, kiedy większość operacji get tyczy się różnych elementów tej listy",
          "correct": false
        },
        {
          "answer": "warto używać, kiedy większość operacji get tyczy się małego podzbioru elementów tej listy",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Listę, ze zmodyfikowaną operacją get, który przesuwa żądany element na koniec listy:",
      "id": 1174,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "warto używać, dla losowych danych",
          "correct": false
        },
        {
          "answer": "warto używać, kiedy większość operacji get tyczy się małego podzbioru elementów tej listy",
          "correct": false
        },
        {
          "answer": "warto używać, kiedy większość operacji tyczy się jednego elementu",
          "correct": false
        },
        {
          "answer": "zawsze warto używać, kiedy większość operacji, to operacje get",
          "correct": false
        },
        {
          "answer": "warto używać, kiedy większość operacji get tyczy się różnych elementów tej listy",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Które z niżej wymienionych wymagają co najmniej O(n) dodatkowej pamięci:",
      "id": 1175,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "SelectionSort",
          "correct": false
        },
        {
          "answer": "CountSort",
          "correct": true
        },
        {
          "answer": "Sortowanie bąbelkowe",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność pesymistyczną pamięciową z oczekiwaną obliczeniową:",
      "id": 1176,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "mogą być sobie równe",
          "correct": true
        },
        {
          "answer": "pierwsza jest (zawsze) nie lepsza od drugiej",
          "correct": true
        },
        {
          "answer": "pierwsza jest (zawsze) gorsza od drugiej",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Porównując (dla danego algorytmu)  złożoność pesymistyczną pamięciową z oczekiwaną pamięciową:",
      "id": 1177,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pierwsza jest (zawsze) gorsza od drugiej",
          "correct": false
        },
        {
          "answer": "pierwsza jest (zawsze) nie lepsza od drugiej",
          "correct": true
        },
        {
          "answer": "pierwsza może być lepsza od drugiej",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf niekierowany: a--b, b--c, c --a. Wykonujemy na nim DFS z punktu ”a” i oznaczamy czasy rozpoczęcia i zakończenia. Notując x (p/f), gdzie x-wierzchołek, p-czas rozpoczęcia, f-czas zakończenia przetwarzania, możemy otrzymać:",
      "id": 1165,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "a(0/5), b(1/2), c(3/4)",
          "correct": true
        },
        {
          "answer": "a(0/5), b(1/3), c(2/4)",
          "correct": false
        },
        {
          "answer": "a(0/3), b(1/4), c(2/5)",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a,b,c,d} i krawędzi a-&gt;b, b-&gt;c, c-&gt;d, d-&gt;a. Jest on:",
      "id": 1166,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "drzewem",
          "correct": false
        },
        {
          "answer": "pełny",
          "correct": false
        },
        {
          "answer": "acykliczny",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a,b,c,d} i krawędzi a-&gt;b, a-&gt;c, b-&gt;a, b-&gt;c, c-&gt;a, c-&gt;b. Jest on:",
      "id": 1167,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "acykliczny",
          "correct": true
        },
        {
          "answer": "drzewem",
          "correct": false
        },
        {
          "answer": "pełny",
          "correct": false
        },
        {
          "answer": "spójny",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a,b} i krawędzi a-&gt;b,  b-&gt;a. Jest on:",
      "id": 1168,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "spójny",
          "correct": true
        },
        {
          "answer": "pełny",
          "correct": true
        },
        {
          "answer": "acykliczny",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Mamy graf skierowany złożony z wierzchołków {a,b,c,d} i krawędzi a-&gt;b. Jest on:",
      "id": 1169,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "spójny",
          "correct": false
        },
        {
          "answer": "pełny",
          "correct": false
        },
        {
          "answer": "acykliczny",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 1 4 3 2 5 0 6.  Wypisując wartości węzłów przy przejściu drzewa w porządku postorder, otrzymamy:",
      "id": 1163,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        },
        {
          "answer": "0 2 3 6 5 4 1",
          "correct": true
        },
        {
          "answer": "0 2 3 6 5 4 1",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 1 5 3 2 0 6 4. Wypisując wartości węzłów przy przejściu drzewa w porządku postorder, otrzymamy:",
      "id": 1164,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 2 4 3 6 5 1",
          "correct": true
        },
        {
          "answer": "0 2 4 3 6 5 1",
          "correct": true
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 1 5 3 2 0 6 4. Wypisując wartości węzłów przy przejściu drzewa w porządku postorder, otrzymamy:",
      "id": 1160,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 2 4 3 6 5 1",
          "correct": true
        },
        {
          "answer": "0 2 4 3 6 5 1",
          "correct": true
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 3 0 6 2 4 1 5. Wypisując wartości węzłów przy przejściu tego drzewa w porządku postorder, otrzymamy:",
      "id": 1161,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        },
        {
          "answer": "1 2 0 5 4 6 3",
          "correct": true
        },
        {
          "answer": "1 2 0 5 4 6 3",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 2 6 0 3 5 4 1. Wypisując wartości węzłów przy przejściu tego drzewa w porządku postorder, otrzymamy:",
      "id": 1162,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        },
        {
          "answer": "1 0 4 5 3 6 2",
          "correct": true
        },
        {
          "answer": "1 0 4 5 3 6 2",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 5 1 0 3 6 2 4. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1157,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        },
        {
          "answer": "0 2 4 3 1 6 5",
          "correct": false
        },
        {
          "answer": "0 2 4 3 1 6 5",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 6 0 5 3 1 4 2. Wypisując wartości węzłów przy przejściu drzewa w porządku postorder, otrzymamy:",
      "id": 1158,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "2 1 4 3 5 0 6",
          "correct": true
        },
        {
          "answer": "2 1 4 3 5 0 6",
          "correct": true
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 2 6 0 3 5 4 1. Wypisując wartości węzłów przy przejściu drzewa w porządku postorder, otrzymamy:",
      "id": 1159,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "1 0 4 5 3 6 2",
          "correct": true
        },
        {
          "answer": "1 0 4 5 3 6 2",
          "correct": true
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 6 4 5 1 0 2 3. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1156,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 3 2 1 5 4 6",
          "correct": false
        },
        {
          "answer": "0 3 2 1 5 4 6",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 3 2 5 4 0 6 1 .Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1154,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "1 0 2 4 6 5 3",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        },
        {
          "answer": "1 0 2 4 6 5 3",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 3 0 6 2 4 1 5. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1155,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "1 2 0 5 4 6 3",
          "correct": false
        },
        {
          "answer": "1 2 0 5 4 6 3",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 2 0 6 4 3 1 5.Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1152,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "1 0 3 5 4 6 2",
          "correct": false
        },
        {
          "answer": "1 0 3 5 4 6 2",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 2 5 3 6 1 0 4 .Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1153,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        },
        {
          "answer": "0 1 4 3 6 5 2",
          "correct": false
        },
        {
          "answer": "0 1 4 3 6 5 2",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 1 0 3 4 6 2 5. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1148,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 2 5 6 4 3 1",
          "correct": false
        },
        {
          "answer": "0 2 5 6 4 3 1",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 6 4 3 5 2 0 1. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1149,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "1 0 2 3 5 4 6",
          "correct": false
        },
        {
          "answer": "1 0 2 3 5 4 6",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 0 4 1 2 3 6 5. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1150,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        },
        {
          "answer": "3 2 1 5 6 4 0",
          "correct": false
        },
        {
          "answer": "3 2 1 5 6 4 0",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wstawiamy do pustego drzewa BST kolejno: 4 0 6 1 3 5 2. Wypisując wartości węzłów przy przejściu drzewa w porządku inorder, otrzymamy:",
      "id": 1151,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "2 3 1 0 5 6 4",
          "correct": false
        },
        {
          "answer": "2 3 1 0 5 6 4",
          "correct": false
        },
        {
          "answer": "0 1 2 3 4 5 6",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "B-drzewo:",
      "id": 1146,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "jest drzewem zrównoważonym",
          "correct": true
        },
        {
          "answer": "jest drzewem binarnym",
          "correct": false
        },
        {
          "answer": "jest drzewem binarnym pełnym",
          "correct": false
        },
        {
          "answer": "jest drzewem AVL",
          "correct": false
        },
        {
          "answer": "ma operację sumowania elementów w czasie",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Drzewo AVL:",
      "id": 1147,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "koszt pesymistyczny wyszukiwania elementu wynosi O(logn)",
          "correct": true
        },
        {
          "answer": "jest drzewem BST",
          "correct": true
        },
        {
          "answer": "jest drzewem binarnym",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "W którym z podanych przypadków poprawnie wyliczono liczbę porównań wykonanych przez algorytm SelectionSort?",
      "id": 1640,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Dla ciągu <img src=\"b4bb6748-f44a-5fd2-b0ad-8d6530cdd3e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań wynosi <img src=\"ce912a92-ce28-5f06-9d57-0f1c7f9382bf.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Dla ciągu <img src=\"305ecf0f-7132-5ea6-807e-774112e3b2e0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań jest równa liczbie porównań wykonanych przez algorytm InsertionSort i wynosi <img src=\"dacc904f-50c3-5fe8-ba7f-a415b1d7c8d2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Dla ciągu <img src=\"22f11042-7bbe-5430-8895-79de4b27cc25.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań wynosi <img src=\"cf6e931e-3061-57d0-84c5-cd4f9b2b30dc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Które z wymienionych zdań&nbsp;jest prawdziwe?",
      "id": 1641,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Algorytm QuickSort wykonuje dla danych&nbsp;uporządkowanych&nbsp;co najwyżej tyle&nbsp;porównań&nbsp;co algorytm&nbsp;InsertionSort",
          "correct": false
        },
        {
          "answer": "Wysokość drzewa rekurencyjnych wywołań algorytmu MergeSort, zastosowanego do ciągu o <img src=\"27515a1a-dc28-54cc-a5d7-158693197e0d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementach, jest rzędu <img src=\"9ca15406-551d-5943-9a6a-5253390259c2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Algorytm InsertionSort wykonuje dla ciągu odwrotnie uporządkowanego asymptotycznie mniej porównań niż algorytm SelectionSort",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"4174ad09-2c78-5db8-ab9a-35d1c9ffd160.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"6a4e1873-9c80-5d9d-ba97-b580b7e5b29a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"0ecdd1d6-b461-5eac-b81c-667985cfea80.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"9548612e-e9f2-5d77-9c4b-c6965e236f97.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1642,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"d2774e4d-87e1-5562-b2ae-65cbb4b97446.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"022736eb-2b6f-5d5e-a741-49cfefa1540d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"d53136ca-b49c-5703-a7d6-16bfd208599c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"52028c64-16d1-540a-a1c1-d98c988d033d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"8a2f9fb2-d32a-53dd-b563-b02c2c2ccc03.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"684e409b-22f5-5032-9174-4205c4cb5d3d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"b4d8a52b-0f00-5542-8217-da16924eeb06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"4604db92-3aac-52a3-bfd5-2abe73b71db5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"2955a08d-02e8-54f9-bc7c-0b221305e24a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"85dbee41-86e3-5eb6-b296-2fcbe1dfb0ef.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Ile czasu potrzeba na zrealizowanie zadania o rozmiarze <img src=\"3f4d6e19-15a3-57e6-94dd-13a2d8ca8877.gif\" border=\"0\\\" data-zdaj-se=\"true\"> na ustalonym komputerze, jeśli złożoność użytego algorytmu jest określona funkcją <img src=\"dd601a03-32e7-53fb-952d-ff94e5b6a683.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"903ef3f2-477b-5704-9b6c-294f187048fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest rozmiarem danych wejściowych,&nbsp;a zadanie o rozmiarze <img src=\"e86855d1-247a-55d2-b47a-edc3efd3d3a6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonuje się w czasie <img src=\"1dcf1654-d09a-595d-a11a-df0bb65092ea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.?",
      "id": 1624,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeśli <img src=\"57d720cf-4c31-5abf-a5dc-0f5f85bf901b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"0e2f4342-cd9c-579d-8d59-af1cfda6c684.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": false
        },
        {
          "answer": "Jeśli <img src=\"c62551b7-23bd-5a5c-bf8b-2382a8238dbd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"0e9b1b74-7587-5ab9-b021-375af99927fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": true
        },
        {
          "answer": "Jeśli <img src=\"2414125f-ce52-5a2a-b0d9-0f4b7142a998.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"fd9d752f-da6e-56eb-92a3-95d6005f8659.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Ile czasu potrzeba na zrealizowanie zadania o rozmiarze <img src=\"365dbed5-ac41-52db-8c98-ce8c0880988f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> na ustalonym komputerze, jeśli złożoność algorytmu jest określona funkcją <img src=\"b162cf6f-4708-58aa-8e5f-d4ea1e91647a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"959d1238-a7ed-53c1-9a81-6f426d7b86d3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest rozmiarem danych wejściowych,&nbsp;a zadanie o rozmiarze <img src=\"4e19b589-9b7a-582d-a985-45a22bc20449.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonuje się w czasie <img src=\"055a3ca6-b569-52c1-ae1e-46260676a471.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.?",
      "id": 1625,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeśli <img src=\"297a6ebd-789f-59eb-8174-addc6fbea488.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"0db56f9a-2a94-5c70-aa16-29c8a5ba469c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": false
        },
        {
          "answer": "Jeśli <img src=\"2098d52a-60ca-5462-b74b-a9eb335f27f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"6c4261a8-7284-51f3-9698-2418295f9730.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": false
        },
        {
          "answer": "Jeśli <img src=\"d11d1875-fc85-50df-99d2-cab0500327f2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi&nbsp; <img src=\"52859e71-add9-55e5-9027-059c6dde9800.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej <img src=\"7f27eb92-d2fe-5963-b582-1ceb6d9c14d0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1626,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"d5a70a64-f116-5681-b8df-7b97e9980aa8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"dad77181-af86-5304-96ab-9a52782bf6b2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"fa9d87c2-b823-5263-9c2d-692021beacfc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wskaż poprawne oszacowania.",
      "id": 1622,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"44f45252-d901-5594-8962-e2061e0d2fd1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"c55b6ec9-6d8c-5dc8-aebc-caf653551a3f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"668fc13c-4fcd-5b05-9add-690752b19208.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"eb4a24cc-96a0-53db-a980-3b9f7f4ae986.gif\" border=\"0\\\" data-zdaj-se=\"true\"> będzie następującym algorytmem<br>int i:=1;<br>while (i &lt; n) do&nbsp;&nbsp;&nbsp; P(i);<br>&nbsp;&nbsp;&nbsp; i:=i+1;od<br>gdzie <img src=\"9ceee7a1-7e4e-50e3-8022-5d15bf26659f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest algorytmem o złożoności liniowej względem <img src=\"77464338-20b3-54d4-95d9-4b478c124f95.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Jaka jest złożoność algorytmu <img src=\"a53a96f4-96ab-52ba-aae9-4e6e59966e16.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?",
      "id": 1623,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"d2d77166-7d7a-5cc4-a6cc-230027706607.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"94ba4834-3cb6-5c2c-9747-480976fa5b89.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"e9ef32a8-417a-5622-aa7f-8b80fe3e42ce.gif\" border=\"0\\\" data-zdaj-se=\"true\">, jeżeli za operację dominującą w algorytmie <img src=\"5109c8aa-9886-5825-ad4b-1c88eea7c830.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przyjmiemy wywołanie funkcji <img src=\"122d764f-94c9-5166-a403-8cb9a18fc0b7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"ec341926-2006-51f6-933c-a0b7eae28bab.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"a9a6eb71-f67b-5160-8736-836397cece00.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"8c3f58eb-7997-5b3c-a5f4-8ed88b657e0d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"5d118a54-e1c8-5bfe-9e26-4b25e44559f7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"9f4f02c0-882a-54fe-b042-d79a6b1a58a8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1621,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"202de2b5-686d-5ce6-949b-2c216640caaa.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, jeszcze przed ustaleniem finalnej postaci owego drzewa, jest równa dokładnie <img src=\"94c622e1-8ace-5d95-8bd1-8997767d1548.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"78090e84-e36b-5b4c-ac2d-178301828c18.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"ba3a0701-03f4-5505-a6c9-ffaceaf1777b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"9bcc8d05-b81b-5373-8c87-8ba8fdfc39b5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"e443512a-ae19-5604-a657-f242e3bb1d93.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"a66476b6-20b8-5766-a16e-718c7603a25e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8da8e857-53a3-5f12-a6e4-6a924d2a5270.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f0afc2f8-3bc9-5f3a-be62-5b379eefe29b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"37469aa3-c83d-5e94-8723-62d17e9f25b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b9bd6046-e535-54f6-88db-2dc5e3fb6374.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"bb194c03-e729-5677-be31-d2e3a1a63776.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3d9da6f0-00b7-5d89-8710-f22eb520d261.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9a9528e5-5337-515f-bede-3110e7f20128.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"5e7875b7-786c-5706-b248-469f446c40bd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"e8a9da1f-e116-5d83-9738-bb16451682e1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1620,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"4b63d9ee-babc-5bce-b2b2-3d6066053d58.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"9dfdc2d8-d698-5429-bc48-583bba2090c0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"47b5403a-bd6c-5d5f-8347-9e637761f3d3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa co najwyżej <img src=\"ec30839a-3027-540e-8928-a5e5328e3fb1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"a48806c0-8df9-52ba-85cb-21d5c55062a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"b8fa8efe-2fde-52b6-bc9f-052539ff6498.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"ac39a4fd-8718-5ea4-9fd6-2d1a6ba44691.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"af7b6907-4b77-564e-8d66-344ef45290dd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"6ac5d016-c8a3-5849-9f8f-b905feb432ce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"2785d1a5-360e-55bb-baca-04b40759f6a4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1619,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność przyłączania wierzchołków do konstruowanego cyklu Hamiltona w trakcie wykonania algorytmu PrimTSP jest następująca: <img src=\"1923e559-0ead-54be-9156-dec22b6f699f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"fa308c49-246a-59e9-b97a-8055a718e39f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"7f3220c3-f478-533d-a8c0-d55736fd6a8e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"3d75f4d6-c29a-518e-ac4a-bd344e305ff6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"b2204b4c-5f6b-5725-ada5-28b6d6c81d4c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"5dd819e6-5887-57ca-8ffa-3c6b1a50bc90.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"5c6b2ebc-da88-5db4-89f4-e9d16826ee4f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"826c6d77-d91b-5bb8-bf92-095b6b11e3ba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"7918a242-b5bc-533c-af1f-4d65693e377d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"da6a23a8-b7bb-501e-8c90-7f187bf823f3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c212586c-8e68-5378-bebe-94f7173ec801.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"260e4196-ddc9-5a7f-9782-4e6f86985728.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3195b39e-e5cf-5d5a-bd0e-ed39e312e749.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d2ed0289-9b28-5b70-bad1-5c0b1782d48e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"90896dfd-55f5-5649-b721-721888655486.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"62f9f395-d1ac-5169-ab1b-3e3620469e03.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"c7487645-b78e-51be-a7a6-0b24ee4c8b11.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"5ad8d404-93da-5d52-a57b-0bc83d4274e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"563f36ce-13f5-5b7a-8b31-57d6c62bf124.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1618,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"f6afcbea-86ae-5478-bc0b-407bac766bf8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych w minimalym drzewie rozpinającym będącym rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"92b0ab9e-f768-5b7e-b0e6-caac5aeb43d4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych w minimalym drzewie rozpinającym będącym rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"9a482cf0-617e-52b6-91c6-dc05255de5ce.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"bc88a4e1-d309-5cbc-8834-210ea73d1a82.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"15920b1f-21fe-51bc-98d8-4adc6af3a495.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"660581eb-31df-5ea5-a107-3ed382f95ff1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"65204cba-aaa2-5320-b8ce-554cd4427bed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a65892b8-5bdf-50a4-b599-e6c7f4d5c93f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a510c537-67a3-52cf-8736-7a6227a0eac4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0a26d54c-5297-5d28-ac16-08e5e92b34f8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b537aaea-2818-5f99-a445-4bd889cce25e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"13cf03f3-193b-51ef-8e32-4c4ec202e675.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"35382399-9082-549d-a1e2-62ff8619a1fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"289a0679-0db8-5038-90a4-aa2b29e1caf8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"b33414a5-2338-563d-a272-6e9bb5ad58e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"6602485b-a9c6-5f76-a78c-f63ab148c289.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"3405334c-2a2e-5a66-ab09-89322e93577e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1617,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Suma wag krawędzi tworzących drzewo najkrótszych ścieżek będące rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"3aaf533e-8a67-5405-9935-18dfd43a62a3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Najkrótsza ścieżka z wierzchołka <img src=\"cffdebf8-7311-58e0-809b-46e6dfa3f175.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"1272d102-c3b7-5b42-98f9-9a8432527b05.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w rozważanym grafie jest długości dokładnie <img src=\"d24cc8da-d154-5417-b1dc-923bc0d36073.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Suma wag krawędzi tworzących drzewo najkrótszych ścieżek będące rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"7ba8929c-67b6-55cc-b7b0-c12c94226376.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"337b95ab-63f6-54d4-a9f4-cd2e100d8f8d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"5320628e-c183-5e60-ab25-30d81d38f1ad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"fc74efbe-c2d3-58dc-9897-1d64a97af3c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"34273cba-9298-5734-9528-ac3a5f85d3f7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"f9c72c47-abd5-5408-afb8-c55b364426e2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1615,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, jeszcze przed ustaleniem finalnej postaci owego drzewa, jest równa dokładnie <img src=\"6d2f278a-7aae-520a-9be7-1630bd88dd26.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Krawędź <img src=\"91c0e043-ef62-55d3-912f-4bb412ad0ddb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"489ecca5-3410-55b3-8308-1c04b46f1573.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, jeszcze przed ustaleniem finalnej postaci owego drzewa, jest równa dokładnie <img src=\"48b49731-5267-55d4-83f2-cf86ee4f7898.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"cdbeb3e9-36ba-5b06-aa15-d25c8f13e1ce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"e90f9959-122e-581f-905e-62b947d01486.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"cf963e02-f8f8-595f-868b-f2dd68f9dfba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"66833a62-96c8-502a-b908-ac657bced2d0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"35483a5b-8c67-5518-b917-b3ff47e15d48.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0e3c879a-0e09-5148-8ba7-77f042be4499.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"736eee14-26f6-5b0c-b610-980f6462b751.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"678dc422-8e99-5d57-894c-1078df9e71b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b3d8759f-59ba-58c8-ab75-c2b9a22654a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"189dbbc2-f378-5c22-9c4b-2d80d1570765.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"adff8337-60ce-5653-84e6-b03c7d417373.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5bac7a1e-a78f-5e08-b492-7dfff6f44776.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"15bd38c7-040f-5a2e-87db-7ae5ba67a3b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"f2f465e5-cc2d-58a6-8ab3-19f3fb2362dd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"04698ab4-cf2e-5895-ba04-01501edacdeb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"7a5bf230-b9bd-56e0-8679-400be79bf695.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1616,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"48b612c4-6560-53cd-895a-b23c2d6e1293.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"3cb5eca8-01e1-5cf8-badc-0ef35a214483.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność kolorowania wierzchołków grafu <img src=\"83c6f167-77cc-509d-af5d-947ac32e10c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu LF jest następująca: <img src=\"729fcb89-4037-5815-8360-a59109cd6323.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"8a56134f-64f9-5630-ac1f-a4bca73d9bb6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"fda257a1-6714-5139-ac81-e7740b438672.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"050373ef-ef37-5fef-ab3f-316a6b8e74c7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"6498c7f0-8f42-5742-8d0b-2a1ff29b6d3d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"b464fdbf-9063-5643-9f65-8a286f8fb2b3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"f1bfedc9-c6d0-54ad-868c-69abe45d35c7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"22354f3a-9f8f-5e22-abfa-703e8f818076.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"90e7b9a5-dcfb-51c1-b05b-f71f14a80f21.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f31f4eab-ffbd-51f5-a29c-ed63bb6c4d26.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0e540147-fb50-50a2-9ccc-5f00cec6b0e2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"46daaf6b-fcfa-5343-a192-470e9cb8663a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c95cd0ee-cfb2-5d83-b8ce-de932d80895b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ab694f39-cc78-5d49-a5e4-08100a6faf14.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"c19d6e70-5512-5618-9aba-95c5cb4f3976.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"1a1469a2-866f-5aa2-9b21-06f460b3abf2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1614,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"e8df4754-74da-5e96-bd5b-cea29576683d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"7b0a41dd-e4e6-56fb-9e1c-a8e77a899928.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"0ae3e2b4-152b-5178-861f-9cabc66724ef.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa co najwyżej <img src=\"a696aa5f-fe9f-5e3f-8fe0-b64ae9b47217.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"397c7e08-452c-57f8-b407-7895f9be6ecc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa co najwyżej <img src=\"d80ff439-3ac6-5b27-b9c5-daef67fad64c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"33e20037-7f84-5da8-9086-aaf86c6fcf46.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"485a04f8-1068-53f5-b1ac-ec0e6a88ce5b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"c3f68fed-77ba-5ed1-bf03-feed88ee6e13.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"a747ad84-361d-5e8b-8b34-7340a1e1d592.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d8d1fb0f-8dd3-5bb9-ad0b-884e8fc8813a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"fb9b927d-315b-55ab-9864-82982d8268b9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d49d678c-a755-504a-9502-faef9cdf2df0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"dba292c8-86d5-5df5-8157-ec2474b4b46f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"efeb1419-9a41-50dc-bb69-23322fe601a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ca9de7ca-6653-52b1-8756-46a54c1c1fb5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d7686287-6a05-5267-bdb8-8a549523a20f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"3679ab65-4560-5656-908c-e181469004a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"bc2959f2-d6dd-5583-a19f-de26f8d110bb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"ab364f73-9c42-51a8-a32d-c381f0f01c88.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1613,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność przyłączania wierzchołków do minimalnego drzewa rozpinającego grafu <img src=\"5329c690-2cb7-59c6-ba45-6ee5eec658e8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu Prima jest następująca: <img src=\"4c7583ea-627e-59fc-bec7-48ec0701d2d3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych w minimalym drzewie rozpinającym będącym rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"2abd88b2-bb96-5762-bbd8-4bca13de65c5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wysokość minimalego drzewa rozpinającego będącego rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"b94e5237-9cf2-53b4-b443-294887214ce4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"eecfaa1c-3f5d-51a6-940c-447d45db819c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"f85bad7c-0a36-586f-9d68-7218ce52508c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"8a1ff7cd-ef69-504c-a7c4-cce0c1da2928.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"27d20704-b830-50be-8996-7f1bd87dc6be.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"ab8cc75a-fdd8-541f-b677-a2258354e455.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"8d0bec6a-f575-537a-bfe2-231f9768030c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1612,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność przyłączania wierzchołków do konstruowanego cyklu Hamiltona w trakcie wykonania algorytmu PrimTSP jest następująca: <img src=\"8df39bcd-0945-5217-a07f-45a3475f10d2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"b3dc42f4-beee-504a-bd9f-cb954fe6213b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"818e6969-8b4f-5668-b77f-3b711c77a685.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"c6a2573b-4a04-55aa-9ca1-de61501412ed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"a8248851-0d4b-5af5-be52-738060882918.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"129489d1-05eb-5b45-8b9e-8b8500257ffc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"2fe8fcba-23ef-5d41-bbb4-90ad5fa3497f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"db596ac7-9c30-5cae-aa58-e2cbb031bcba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"37ec4056-d2d9-51bf-baab-052618b202a5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b7c2bfa8-b67b-55d0-82c0-870a0e2a6dba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"47b4c28e-fd7c-536f-90c0-70b09cd805d3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"444d7ade-dd9d-5e76-9560-28b97ddb9576.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9ac7ddad-cac8-5f56-8e2f-68eaa7182efc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"87be2dfa-fc59-55b2-bbc9-ac7806e6031b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5b8a291e-9de4-519e-8192-815881b67bdc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"13be86eb-4fe8-5eca-bc91-119e7c6bda0c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"c6ae34df-e898-53b5-9927-32ea16e11373.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"3c7418b9-bc9e-526d-bde1-4f51c66275fa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"fbbd9e70-1d6a-5284-b89c-461cee3dddee.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1611,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Najkrótsza ścieżka z wierzchołka <img src=\"1d8ae71d-fb0d-579e-92f8-262e057d9953.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"fa070145-fed0-5ca2-bf90-3458a10dfbed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w rozważanym grafie jest długości dokładnie <img src=\"fe7e6838-4154-5357-a2d4-e04a5eba4505.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wysokość drzewa najkrótszych ścieżek będącego rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"11be0609-a3cb-5e24-808f-195662d13eec.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Najkrótsza ścieżka z wierzchołka <img src=\"81431653-4807-59e1-ad3e-33f950ac27f1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"246245ef-fd6b-588b-b76c-a263e1508fb0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w rozważanym grafie jest długości dokładnie <img src=\"d06ffb01-cc2e-5468-b3de-8e91d72e43ee.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"4f25214a-6870-54c1-8542-b7e9ce9fd206.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"95106146-c858-5f53-80a9-672df7d43f66.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"e5410af6-871a-508d-b2c1-6901c0a8453d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"c5d36b2f-a293-50b0-8bc3-0edb9f77d6c3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c97fe729-f73a-5384-8ea5-4557d92c47b8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4a9da2fe-0f64-572c-a412-04903c274dd3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5f70f427-3fec-5770-84d3-79f5128c76bb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b0b211a1-97e5-5351-bcb1-df602faa04b5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ddee3288-be0f-5e8d-9650-81ffcf21039e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"045a3c37-81a7-5fdc-8cc8-36a5d8970a6d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e47030c9-e001-5881-8519-82cd5fff2bc7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d8f2eb37-42f1-58ed-9e8f-d348fb0b563b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1a49a60d-2195-5d17-a9d9-bb38623882bc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"e4b9be39-dd4a-5998-a31e-85bf6969f19e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"6c2f66d9-a7bd-58e3-ad67-7cc2e40b6f60.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"760dd69a-6402-5bce-aee8-a57c6ce880e9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1610,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"af48d415-1a12-5a28-b174-4e09f67c5481.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"186ca71a-c3d9-56fb-9ba1-aa2c3316745b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"e20879ad-525a-5c62-9a4a-9cd85d905401.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"daba7cfe-b78f-592d-b491-78efb0f3a903.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"944b59bb-60ce-5243-9820-18b69fa8c4bb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"f2246547-2218-536e-a1c4-86890ae63c40.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"9e7f9149-d2b0-5d51-8228-d942c69590c8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"de81778d-31a2-50da-b831-7d2f0c8e5eca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"34a237d0-c62c-521f-8845-ea8bc2d8ce17.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Które z poniższych zdań jest prawdziwe?",
      "id": 1607,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"f4b7cd1b-f040-5b2b-9080-b598c7d9da3a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"c4b085da-825e-5ad9-a221-7528f0f9e2be.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"6a903da6-6289-52e9-b328-ead4fcd83ca3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"779bba9a-a4bf-5598-b9ed-38708f6f2065.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa-kopca <img src=\"59389dfb-e438-591e-af88-b76b5ab44d43.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"e4ddb673-f4ed-5fb4-9da9-897d50bb2c10.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Które z wymienionych własności są prawdziwe dla kopców-drzew?",
      "id": 1608,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kształt&nbsp;kopca nie zależy od kolejności wstawiania elementów",
          "correct": true
        },
        {
          "answer": "Jeżeli wierzchołek kopca nie ma lewego następnika, to nie ma także prawego następnika",
          "correct": true
        },
        {
          "answer": "Jeżeli wierzchołek kopca nie ma prawego następnika, to iest liściem",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"488db2f2-db75-5c29-976d-2bf9871dc670.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"36a3251c-eb6d-5966-9a7d-029ddbd835a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"9f7b65e3-fdef-5815-a791-d1f175dcb85b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Następnie w kopcu <img src=\"e09f7294-6df2-5f26-9a1d-7d87b86cb511.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonujem <img src=\"7778ed12-cb77-54b5-81f1-91a3f9257e0a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -krotnie operaję DELMIN. Które z poniższych zdań jest prawdziwe?",
      "id": 1609,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"cb59c4fe-7637-5059-8957-dc1e9edb6c61.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"8693c3c4-052b-5da3-a8c6-b5cc2fdcdaab.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa-kopca <img src=\"df99748f-8ec2-582c-8905-e10c55f0e3ca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"880d2050-10ec-56ee-b381-a05e16f68759.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wysokość drzewa-kopca <img src=\"4ab23a47-f3de-531d-b885-eeea321222f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"eae26774-83ad-50a1-aad2-a1ae3f9d3e11.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Ile rotacji trzeba wykonać przy usuwaniu jednego elementu z drzewa AVL o wysokości <img src=\"c73b689c-4543-5202-88e1-833f4f98d418.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i <img src=\"72a8ba45-a2e8-5deb-9f83-facbbf27e53e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wierzchołkach?<img src=\"501b847a-1c48-5ade-963c-08b6751e067c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1606,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "rotacji",
          "correct": true
        },
        {
          "answer": "W każdym przypadku dokładnie jedną rotację <img src=\"49bec4b7-77f3-52f9-81e0-c3b6b1b18a1e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "rotacji",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę kolejki <img src=\"492c5f1f-247a-57f5-89d5-b64be1a96d94.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"5815c426-21b2-5d49-a74d-1ca793b976a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"7cf67a4b-e088-5636-806b-cd21824565bc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"c6732ba0-da3d-547a-a618-5b8596a91fed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"be225d24-2537-5a2a-b62b-b3de4a2dad30.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f88d5035-e162-5e52-a02a-bd3243fbcd28.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8ab391f3-e602-51cc-9b69-7b1dd3a1a188.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1fca7c0d-ed2b-566c-9368-70e386a5c393.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"aa0d7c7d-2f08-578f-b102-c780e31f7bfa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3fe0b7ab-f9f1-5ffb-9db0-336744c803a1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8297080f-dced-5399-82bf-82841d818811.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1600,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"e0fbe374-3ba6-532c-a436-ac12e36a3a67.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Ostateczna długość kolejki <img src=\"7f389c50-4604-50f7-9e8f-b4de33eade0b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tuż po wykonaniu przedstawionego ciągu operacji jest równa dokładnie <img src=\"2bfecdd6-8c0f-5a89-afca-0cb3f686e186.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna długość kolejki <img src=\"57df79ab-2083-5608-8707-e36ae833d558.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"5b0ed154-04fc-5cc1-9ff9-fb6c4e86fd19.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b032f0dc-020c-578d-aed4-c70b9055e0a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"176330f3-2ad1-5b2c-9312-ca57e8e3105f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"cf96a71f-f5e9-5dca-9e58-4411aaee8a93.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d753da36-2b87-5f81-a099-0fe296e530a8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f56e74bc-051c-59b7-b162-ea0402fd87c2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d00c9fbd-befa-5d71-aa8e-2b58c3061dea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"aeb95d3f-cf2a-5a95-bd16-6cd7e71996ae.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"068fdd12-dc97-51e3-be4a-237bb33ac5c8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"dffdad0c-57df-5cca-a616-0e24e4742cee.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"20f339d5-cdfa-537f-a7ea-ef9df0f1312c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"8d0dc6e1-90cd-5cb8-a59a-03c46ebd841f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?Tuż po sortowaniu liczb względem cyfr na <img src=\"2827aa9c-afc7-57b1-ba0f-75def8450088.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"9ba7b49c-6859-5631-b9ab-20933621af44.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca:",
      "id": 1601,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba operacji FIRST we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"3917fb8e-938e-570a-99b4-0be5c319ce81.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"05c4cd9b-e4a7-5615-b66a-38be633db52b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> 0Łączna liczba operacji FIRST we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"13e0643d-0995-5d89-9b34-2c5c9b715afa.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"0ab46f96-027b-5daf-9a34-fbb048476f31.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"25d07453-7946-5de8-82a1-6d86ca01a48d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?Jeżeli wierzchołki drzewa <img src=\"22a8d7e1-2d7e-5857-aea5-3c35c643cd56.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"8e097eb0-273a-5fcd-b520-eaf4c9b43f8f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg:",
      "id": 1602,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"77abe1c7-f38f-5b80-b592-c0ce5892eeb9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"e4793394-79b8-50d1-81cc-c728003fac0f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"01a41e04-91e4-5490-b278-0196bb5cc42a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"1643dc8b-09fb-5feb-aefb-a333def42f8f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"f5b20d04-9d62-5fbf-87eb-77e27ab5d516.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"26de78df-a2ad-5435-a8c5-2e2b17a01fba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg: <img src=\"7b454711-ed26-5c2c-be1c-f5b4bcc1345f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"325b2d11-0c6b-53e8-9d84-68a58f1c860b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"70bc61d9-7ae0-5f9e-b567-6758ef584c9a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"2acfa676-7f0d-526d-8ddf-53c395ea7d6a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"53f457ba-58fd-5699-be09-700f6e7a605e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c448ca05-dc0a-5b36-836e-2a354593f71d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e8b96741-cb26-5f64-a043-19b49fa0fc9f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e3e9588f-9234-58c3-9fd1-633b3854fd7d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"01d1d115-0895-5b39-b06d-680a98c3c3c4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"06075504-73e7-5d91-bba0-bb52f159c651.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f0a0c251-cea7-59de-b575-9506e6ca308d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"b13bc75c-9c52-59cb-a304-dad981415499.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności DFS z wierzchołka startowego <img src=\"219a079a-efb8-549e-934f-8596c9224f64.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie DFS wierzchołki grafu umieszczamy na stosie pomocniczym w kolejności malejących wartości etykiet.<img src=\"151b2ede-bc9e-5be1-a2e6-5f718b0c3cac.gif\" border=\"0\\\" data-zdaj-se=\"true\">Kolejność odwiedzenia wierzchołków jest następująca:",
      "id": 1603,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność odwiedzenia wierzchołków jest następująca: <img src=\"dcee757f-8136-585f-8031-35e1b53dd49b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu pomocniczego, w trakacie wykonania rozważnego algorytmu dla grafu <img src=\"b9a79c7f-29de-57f4-86fa-1e403f21d9dd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"5f9467be-d85d-5a3b-b8b6-376113d498f3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"9d1a34b2-8640-55cb-8aa8-cc1a3c94fea5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"fdb89786-b2a1-5b79-88e5-b7ab860c203f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"5a5ad607-3bae-53b6-b904-2cc671299bcf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Które z poniższych zdań jest prawdziwe?",
      "id": 1604,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa <img src=\"c0ceb3db-3914-5510-ba44-31969349016f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"e2156c8b-b920-55a7-8c89-bb3f309e404e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"23eda3be-ba94-5ab6-a219-70fcd2d4b02f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"eef5174b-7f58-5b8a-a5ce-df06ba976b36.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba rotacji pojedynczych w lewo wykonanych w trakcie budowy drzewa <img src=\"6c53d638-4674-5687-8bc0-6332a6996750.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"a365577c-dd5a-5d0f-90a7-9a888f98afbe.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"3148e8de-59b0-50af-a7b7-2c34a5d2dbc4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"0ef666fa-bad1-5d78-a48a-53b5f05153e6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"77c1a1cb-0e3b-5b88-8929-e0b62ff16056.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"bbdecc37-a79b-5c69-918e-a3a0335e5451.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"e374d181-422c-5153-a1b5-d036b6cc4ccb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"fa7a6e6b-b85c-50e8-8618-86a28bca0e71.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1605,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków zewnętrznych drzewa <img src=\"a3feee87-e70b-5a11-8962-dade4da6d48b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"8dfbb4f7-ec0c-5e43-8d7e-307ae6cef9e4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"f5d16863-309f-58d0-af32-37362c09069a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"63092c9a-9460-5078-967c-681120c0df99.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wysokość drzewa <img src=\"82c1a9f3-683c-551f-ab66-d9012fe53358.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"b1d56b05-97fd-5d0b-a46d-300ff7a9f53b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"abbe3e5e-a587-5f12-a9b5-e35c46e8f554.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1599,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji PUSH na stosie argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"48d98997-0fac-5996-9a75-70e0e6ae983d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"f29146a8-bcf5-5bcf-a70e-265581435f56.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu operatorów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu operatorów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"a93f5dbb-8128-57d7-bca2-88b554b403b0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"da0e6453-76a5-5e69-85e3-d6a1cfaa5d2e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"177c3212-da5c-5590-96fb-d154b6fbd251.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"e935eeea-075a-531e-ba8d-41c356b1475d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"24ceb5d6-4dfc-57c0-b072-614fe382d456.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"edc07fda-8938-5940-812e-96b6ab0bd9fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"fd968618-5543-5d71-9b74-a5fc139e8a4d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1598,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"a82e29cb-3694-5129-a75b-399fec2be43c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"2ccb616a-2e1c-5b7f-b98e-100896fa09c0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"c109ed96-648b-5497-9074-cd2ae0fe21f5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"f506b4ce-67c9-55fd-82b3-78aa656b6564.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"e62f7d9c-fbf7-5045-93c1-2816e165fd49.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"c1675653-a25b-51b6-a6f3-308602db230d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"c99cd4dc-b9dc-512f-9481-cb3f2c868221.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1595,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"08dd06fb-fe65-5ac8-a96e-f8893c8f484b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu operatorów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"fa74af10-fc8b-5aa1-a87d-090816bc3d66.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu operatorów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu operatorów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"3b74cbba-9a0e-5e12-a22d-4827b45841c0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"4c456cf2-0fe5-5307-9b53-9e54389e6f9c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"e2d271ee-9ba6-5a38-b64b-73e5aa65bff6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"1607f4da-2323-5d54-905c-73cceff5e478.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"10c5b579-31ee-5fae-8bc5-4d0624ef400c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?",
      "id": 1596,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna długość dowolnej kolejki (tj. maksymalna liczba jednocześnie przechowywanych elementów) w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"69ac495c-8a30-5f88-a869-ed8ad22b3247.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji IN we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"4d06f708-07ff-5afb-86e9-ee0a815932c3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji IN we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"f15ac015-f824-5ef0-9228-2b7d3d01659d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"992ce140-edf4-5652-acd7-6459ebd80abf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"0daec850-8bc2-5556-af89-af6c21c7dea3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"8600e58f-dbb1-5ed8-8d02-e458f1773017.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"75e64c0e-5a55-52a4-bf8f-09054fc9637e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"36b40024-2409-5e56-9088-1acb647373a1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d336a831-4788-5f4f-bc29-ed67ed2f33a6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e3adfbba-5c8e-5c7c-a832-1cbae2a1ccb3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"7474b16f-3ec9-5a20-8871-f5ffb0d8a415.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"440033c0-a7e7-57f6-8612-f705591327ae.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2351116f-e938-5445-8e97-f755dbd552e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"7d3ee562-5c52-5cfa-b845-b5d6e20b9517.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności BFS z wierzchołka startowego <img src=\"529e0d4a-b4b7-5bbd-a0ab-b6b48057fe4d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie BFS wierzchołki grafu umieszczamy w kolejce pomocniczej w kolejności rosnących wartości etykiet.<img src=\"37d35aed-1803-5c25-9229-aab838665393.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1597,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna długość kolejki pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"3eb039d4-1e3b-5447-879c-6533e34e0061.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba operacji IN w kolejce pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"4d2be2f4-fbcf-50c1-bf89-0455c330ed48.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna długość kolejki pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"8147e62d-ad00-5ace-8788-9291504992e6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"fbcbef7a-76ea-5de2-a16d-0ebee61b8f7f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"79d12055-20ef-5ff2-9a16-7d726522915d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1594,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"a5028665-ad79-51c0-b191-614ec7e47ff1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności InOrder tworzą ciąg <img src=\"31b9ab07-a4d0-552c-8239-a2c029b81024.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg: <img src=\"f57a325b-3596-5218-8d68-ed70e6c95a9f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"c858f30c-e0c6-560e-88a0-db814c299160.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PreOrder tworzą ciąg <img src=\"31f53b28-6a1f-59de-ae52-166ee9063a30.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"400ed905-ae8e-5393-98c4-f10d92c85ea7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"7e7e6329-0a98-51a8-883d-7cfd1ada8fce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"354871dd-a4c5-58da-b8e8-fdc83a628faa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg: <img src=\"3a3331e6-c3e6-5a66-aec8-23ae0572af16.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę stosu <img src=\"21b21e8d-8062-516a-b5cf-8236deded83a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"903cc171-7b41-5807-8b4f-2df524157da6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"95d51422-ad85-5df8-ad71-16506878bbc1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"faf46077-cefd-540d-9a57-e3e5104d4161.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2ffa66ee-c423-5003-a728-85d416ea6bb3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"35965814-f533-53aa-bb0c-865510d20584.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"935d185f-5a81-52ea-82b8-9e3bd47c720c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"db1c83e5-444d-5763-a7c1-90f0a5139d4e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4f16f0e0-ff46-591e-8c5d-3e7eec589446.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e8eb607b-2c08-54d2-a3c8-b7f268471046.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"15eaca20-c0a7-5126-9cdc-589a66f7c09c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1593,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"96a30255-f9d7-514b-8c5f-2d3f71b60a4d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu <img src=\"e5e3b004-c66b-51ac-8033-3e9e84927f0f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"6531e870-97bb-50f6-96ab-ad1304d54f87.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"06aae38a-d0a1-5518-9673-cafb36a3c425.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c5ca59c0-dc2e-58e0-9ef2-dee12e42569d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b00c3ce2-9cae-5ce3-8235-9329b46b132b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"7c33d6a7-c048-5d60-ae1f-477eead875f6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5a40a87b-3c82-5e69-9400-45b38cd9aa2b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"198b869d-f527-5eb5-94e8-272dc5ba881e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b2631ea3-8aeb-5b3d-a77e-e97bcd0385a3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"4f64073f-979d-563d-af47-081403c1d0e7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"3d8ef403-3801-5202-b81b-b541be409d2d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"5abb7378-74df-5338-b717-6aa48a11a380.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"bdee3c57-a3aa-51ba-a26a-b9aeabd7fb31.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1591,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"9970584f-c8e9-5d15-9848-edbf58fa3a01.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"2cc2ba7f-b8ef-5765-b77b-59830bab7570.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Argumentem <img src=\"507796ce-2245-5b26-87dc-3ddd78967b72.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu QuickSort jest tablica postaci: <img src=\"fe52db25-70b5-5afb-ab36-5d84dd0bea7d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"73c5e5e0-e5a0-5a7d-b0e1-43a2ef56456b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"aa789877-60b2-507a-8454-f22624315625.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"c355148b-ca1c-5c28-9d0e-2ac091a78fad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"b2d51b6c-c7ad-5bc7-8a38-c4beda9dbf5d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"3c494e2d-b06a-5236-9aa0-25ec031fcef9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"d42934d8-8bbf-5a61-83cb-5fac37524917.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1592,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"95a6729c-b0e3-590e-8aec-10bdd4b2bda8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"4814de3e-6dcc-57e7-89c2-e17b3b314ab0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"f850c8a1-a52d-5be6-a219-67af7a8beb64.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"115c67eb-12bb-543e-9b29-0fb1ad208b48.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"6ace0db3-b85f-5088-8a9a-d9c97785bce1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"92634f7e-76de-58d2-b50a-63f649c565c4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"0c8593c2-a13b-5743-a9d9-275a575ea09d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"9904859f-1898-5eaa-a639-320714d26a24.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"29910da8-7082-592b-bdb4-222a42d9c0d2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"5c0a7da0-b2de-501f-929f-1fe1340c72e0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1590,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"d95d555a-0762-55f5-a6e1-f5df2fe94b1f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"dfbafe41-c499-5288-86b0-112873fae31c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"752a420f-c535-53e5-9db0-934427e8e4c7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"75bb237c-f874-53df-be3f-3818fa275b14.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"b1092fdc-7b25-5987-a07b-f5364baaddca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"5586b1ec-298f-5702-beff-e4d1015c22d9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"78b77575-f739-5575-babb-a0a7b39c1738.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"5e86a168-6cf6-5f51-9ff6-70e91063598a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"913c1d29-5781-54a8-b11a-09d06362e862.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"f44f0933-f235-518b-b0df-589406e63d58.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"797d55a3-fa42-5de7-8d44-7ae267ee4344.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"936d18f2-a1fd-56d2-98f6-50f2223d9a8c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"48d4b4ca-e0a1-5d98-9fe3-f5fc00a01148.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"6753e14c-3c6d-55e2-86ce-d10b04b705fb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm MergeSort w implementacji rekurencyjnej, z procedurą scalania zgodną z metodą Merge. Które z poniższych zdań jest prawdziwe?",
      "id": 1587,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Merge jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"b2283bee-cee1-5da5-bcc0-b758eeb4e04d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu MergeSort jest równa dokładnie <img src=\"f3793221-e78b-51e6-8da4-e2a51401e1c5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Merge jest równa dokładnie <img src=\"83ef23f0-5a71-5e74-96a3-8d8b64c49b78.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Który z ciągów jest możliwym stanem tablicy po wykonaniu algorytmu Partition, przyjmując, że medianą był element <img src=\"bcf5edcf-6ccf-5a2b-8cb5-608ac31b57ae.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?",
      "id": 1588,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"4c3313ba-7447-5cad-b14f-4571af13de42.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Dowolny ciąg <img src=\"19f495ca-16a7-5f14-a5cd-98ed6aa62cd6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy, gdzie <img src=\"05ff78ae-d49d-5ca3-9467-cf8545e657b4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w którym liczba <img src=\"6dce0c01-ef2c-5c42-bdba-1eb00106d149.gif\" border=\"0\\\" data-zdaj-se=\"true\"> znajduje się na ostatniej pozycji",
          "correct": false
        },
        {
          "answer": "<img src=\"9cd35677-aae0-5773-af19-70af21018feb.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "W pewnym <img src=\"2c22c856-c7dc-503d-83b0-5a3bdf64bd63.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementowym ciągu, liczba <img src=\"1287b2ab-f5bf-580e-a4b4-ea3690884c62.gif\" border=\"0\\\" data-zdaj-se=\"true\"> występuje <img src=\"fca1f16a-dafa-5186-82f7-b2437b8a9d74.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy, <img src=\"abd9cc19-a41c-5109-a0d0-4a171ff9a683.gif\" border=\"0\\\" data-zdaj-se=\"true\"> - <img src=\"77727cbe-6962-5191-bd5a-56aeca9e3257.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy, <img src=\"5fb64871-dc54-5349-92f8-2c2892ff2640.gif\" border=\"0\\\" data-zdaj-se=\"true\"> - <img src=\"e522fad1-5880-56c1-aec7-d3307458a327.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy, <img src=\"67044aec-c2cd-5274-92ea-696a629018fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i <img src=\"d0e48df3-abc9-5e3e-a55d-79e7b846e775.gif\" border=\"0\\\" data-zdaj-se=\"true\"> występują po <img src=\"020411dd-51d8-5a7f-88d2-ecee4e8a837b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy. Do uporządkowania tego ciągu w porządku niemalejącym zastosowano algorytm CountingSort. Na jakiej pozycji (pozycje numerowane są od <img src=\"271e4d50-b7ac-5885-9fa5-bc293e445047.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) w tablicy wynikowej znajdzie się liczba <img src=\"c58aea52-0570-5f6a-82a4-e43ab21cfb8c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , która w ciągu wejściowym znajduje się na pozycji <img src=\"15f723e5-50ea-5ea8-be5e-4c78c7a0a86c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , a na dalszych pozycjach nie ma już siódemek?",
      "id": 1589,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"2a406fbd-1870-5912-bf5c-d0856fe6fcb3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"d9aab0fa-35ac-5c99-b80c-32f827259699.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Pozycja nie jest jednoznacznie określona",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"0e96b666-ec74-54dc-b6b8-c267142e434e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"22c1b949-0b14-52c4-855f-6677060ab62b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"d0227a7d-fc4c-5cc1-bfc6-a95de38387a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"13f42ebd-eab6-562a-80c5-183e46080ecf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1584,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"b7b2683b-3190-5bff-99d8-0b8ca0478694.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"a5c3b417-250b-595f-ab32-b08a893d094c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"640ed873-e214-5cff-8ba6-88bd30f935d5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"9206eab6-a185-547c-bd8c-a4f045557ad0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"ab2557a3-c77a-55a1-9b68-82c4c97880cb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"c781aa39-f155-5551-93c8-d0a7dfb4c729.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"be128ca0-c1ed-56ed-aa2e-d8fdb5d64260.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"1279ea9b-a3c2-509f-a891-7f758fb4ab85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"6dc2db05-7449-578c-8251-39f0382eb663.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"eb346372-711c-51b7-b50d-26e9d5aa253a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Ile porównań elementów wykona algorytm InsertionSort dla podanego ciągu?",
      "id": 1585,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Dla ciągu uporządkowanego&nbsp;malejąco algorytm wykona pesymistycznie dużo porównań",
          "correct": true
        },
        {
          "answer": "Dla ciągu <img src=\"bb5952ef-09ea-54b9-989a-0e23e42747bc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań wynosi <img src=\"99b1a0be-05cc-5772-9ec8-4c977310a3e4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Dla ciągu <img src=\"96493ff5-d926-5036-8959-2de16033324d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczba porównań jest równa liczbie porównań wykonanych przez algorytm SelectionSort",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"27b9e991-89f1-58a5-be53-40096d4217a6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"9758a43d-73f1-5653-b896-37a189100a18.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg liczb naturalnych: <img src=\"0d3ff605-c10a-5929-929b-11d3238689a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm CountingSort. Które z poniższych zdań jest prawdziwe?",
      "id": 1586,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po drugiej pętli iteracyjnej (sumowanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"e4159522-b34d-525e-96a6-f97826fcf6e5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po pierwszej pętli iteracyjnej (zliczanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"57a24b4e-ca8d-52c2-b524-6ec3efd718e4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po trzeciej pętli iteracyjnej (wypisanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"09b7907b-7c82-50e5-af6e-627fcd0c5359.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"b9079c0a-0e51-519e-8aa4-344a98863d6c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"b86c55f5-9341-5307-8648-cd9705a01aa8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"82a284e8-c401-5aef-939d-5be1d101cbb7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1582,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"108cb963-d068-53a9-8c49-4a14dde46589.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie wysokości drzewa wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"effe3ba5-9b90-5171-88dd-90f3a7cafd39.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"66b589e1-d5b9-516b-862c-247d28805d8f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"1be211a4-7787-55b8-8f68-435fd1517e43.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"adcdc155-57ea-57da-ab35-99af1374cb8b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"6e6658a7-8a1e-5d4b-8b44-6a7a5e6a38b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"1c038839-a608-5906-9f8e-105070f03eb7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1583,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"e29cac75-5917-5b0e-9c3a-7035e91632d2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"305fe52c-b224-5dcd-8c90-df4784f88270.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"fd797850-fbbc-5f4d-9c39-2b54d0b878d9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"296f24c5-d8a9-5f05-b0b2-18349ecdb907.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"757226a3-ba5a-5d34-a9f5-77a92e2b230d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"33e54c0f-65b0-5eb8-8c6e-ec42bc14371b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"1ce82b24-0e5d-5f9a-b459-d038f59a26bc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"0c085b87-cac4-5110-959d-a8e34ed5277b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"e6c8c8b8-3fb8-5665-8491-c39797fe940c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"80dfa85c-367c-58f5-bb05-14efba2097c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"2a740b30-89a0-5337-8667-b73879c42d2d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"256cc2dc-d37b-57ac-9b24-2dfc9a5a4b31.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"be5a1b4a-130b-5b4e-8210-28cedcd96f87.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"a2077d9c-e2aa-557d-9fca-76da7b2b151d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"32d087cb-f087-5f6d-a0d2-78b3cdcf29d0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1580,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie <img src=\"d1f77576-fd7e-5e51-88a1-d2775ed8303c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Argumentem <img src=\"34a415da-3c78-5ae4-86b3-27408e5637a8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"0481c8aa-f4fd-5842-a521-3cb39b180159.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"0d885566-d7a6-5475-a7fb-4e7c868bf290.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest większa od liczby wykonań tego algorytmu, gdy zamiast indeksu elementu <img src=\"0278e0c8-d6a8-568f-ba88-2140225d9f61.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości będziemy wyszukiwali indeksu elementu <img src=\"7f7922fa-f143-59ea-85a7-026cb535281a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"28e5c91c-d51e-54b9-bc46-0d8af4169f6a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"e73e4661-5264-58ae-b090-a310ab6eeaf3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"7df40dc4-e36b-5b55-abfd-a7d7311917db.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"c7baac38-15ed-574f-9f37-bc486aa3ff07.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1581,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"332cdf8a-5720-5156-baa4-f1fff0d064ed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"ff9b962b-a3ed-5e94-bc1b-439c5f7ec69c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jej postać jest następująca: <img src=\"cf838d40-b28a-5f2e-bb3b-8b6259d8d642.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"52330568-9bf1-526c-8ef0-55fe612dc321.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"7a28b582-3aae-5a67-9248-2e62919e28e7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"69d132ec-fbd5-5e47-b9f7-a853fac4fb66.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"c47b3348-c8fc-585c-8739-bc87c3077561.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"5d2682e9-7885-5346-ab04-a049477e493e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"339a41a8-7254-54f4-a020-4bdf0fc04333.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jej postać jest następująca: <img src=\"b6c1b229-9d8c-5b64-b4bb-4dc6261f74e4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"5ecbaab8-61fd-508f-b46d-81fd470c7143.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"774fb323-b645-5ae4-87ec-69ec1918236a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"59125bd8-ea09-550d-9f76-2a3755049ed3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"9f52b209-996b-5c7e-ba6f-28aceae588f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1578,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"2fef26e8-bc95-5b1c-abf9-f45e49d3badc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"a772e1f8-ee3e-5807-9bc7-5116c1d871fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"adc47601-f050-5e60-866b-3b3cda8d3b9c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"8943a88a-a47c-54ee-a486-bd5df64c3d56.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Po pierwszych <img src=\"8231065f-5a73-5d68-bcec-50379bb9d959.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"f2ac6684-d6b0-522d-8573-ed5527190033.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"adcc746c-dcfa-5d53-bcf3-2f059d060558.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"14d7e003-af41-5704-b564-d96cf4b49eac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"2aaaa1e0-cae8-5b2e-8abf-7a5dcd6e91cb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"853ef2dd-1c24-5e64-a801-00d02c25e6d7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"fb7bfad2-2207-533c-94b2-fff55b56b46b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oznacza liczbę wywołań procedury scalania w algorytmie MergeSort zastosowanym do posortowania ciągu o <img src=\"90397046-143d-524f-bd5e-ff37f3b74306.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementach, gdzie <img src=\"4b0bbeb9-d344-596e-9d81-f9500b9a1df8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest potęgą <img src=\"4e22d267-a1a5-5349-8209-ba4e8a1ac4d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Która z zależności jest poprawna?",
      "id": 1579,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"a1d2b04b-f195-536b-8ca7-2aa495b8adb2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli <img src=\"ca123679-8121-52a5-b6b9-bf00958deb82.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to <img src=\"40a089cd-c4ec-5e37-a8e5-7f85ebe9c31b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Jeżeli <img src=\"6e9d0ebf-5483-5817-bae2-8a3c7084b053.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to <img src=\"3a5fa301-03f1-567a-b5a3-947519d331a9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"166552cd-0aa1-5b69-915a-1738aeb314ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"2987f849-9ec0-5afe-8417-de45959c8a60.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"5a0f8fb5-64da-5f17-b714-b5d35c004bbf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1576,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"3a652310-8fe3-5af5-b58a-a781859f4d0d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"980b5669-d70c-59b3-aa24-bc0d355a5716.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie wysokości drzewa wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"0a4dd5e0-b1b0-558d-87ee-8281b8f75b0d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"dc8312a6-cc3d-5c2f-9b47-c07745cbe1dd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"d20ad640-fad3-5274-9b3e-6796c715643b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"238f0e1b-cd34-5257-b805-6ac0d0c54d6a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"edc3096f-6334-5e0c-98f0-55f9041f9fb9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1577,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"d110d417-e1f6-5c61-b65a-1977dc46b8b3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"b99e4041-5bd8-54d8-ad58-675b3749065c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"65ae7198-2d62-5a5d-9405-e81676fedf38.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"8fb3a538-f789-5092-9c70-daa8a2b90cdf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"5b51218c-ebae-514f-a29a-4725b7b116c9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"1aca487b-7c1b-5b4a-91cd-6c41ff030d36.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"39657d1a-8a6e-5ab0-9a06-aecf6ba3dc49.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"325f4e29-8d83-5434-ae01-d5c2f99b4282.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"ac977b53-26b7-5394-84a8-830228530af1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"db7c4cff-514a-5084-acad-a78cc1ec28ce.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Oszacuj koszt algorytmu&nbsp;skoki&nbsp;co <img src=\"bd7d50b5-9b46-5ab4-ad4d-391c150e9454.gif\" border=\"0\\\" data-zdaj-se=\"true\"> &nbsp;zastosowanego do uporządkowanego ciągu <img src=\"031c5734-557b-50e2-8d8b-40d285db98d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementowego.",
      "id": 1573,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"15575fae-7086-506b-a9c6-64164d75c750.gif\" border=\"0\\\" data-zdaj-se=\"true\">porównań",
          "correct": true
        },
        {
          "answer": "Co najmniej&nbsp; <img src=\"0800b115-b6c4-5aac-b8e3-4e026d4918d5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównania, gdy <img src=\"64c57ada-69fe-5913-b577-1ab67a23b5be.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , niezależnie od długości skoku <img src=\"44bb5716-00d6-5dbc-9162-9e8428043d41.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"32bc1cf2-69f3-5f8c-90f5-9fe5012d5dfe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"390037f1-3d97-56ff-a9ee-03a7082ef6a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"36e18a05-fd1a-56d6-9f82-90229662c0c7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"af85fe4d-999c-5b7f-91a9-0b8e8bb50fcb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"a2d7e513-cf9b-57c8-a226-3cb5679eee9d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1574,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Argumentem <img src=\"a0b33a8e-2022-5414-b4af-e050287170e6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"7de97ee4-29e3-5677-8241-dd2c7e7dab9c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"d2422365-f522-5049-bb20-462966fda45c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest większa od liczby wykonań tego algorytmu, gdy zamiast indeksu elementu <img src=\"74100720-a4c4-5c8b-b742-0c993490600a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości będziemy wyszukiwali indeksu elementu <img src=\"47c944b7-fd7a-55a9-93e5-d16cb03ee133.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        },
        {
          "answer": "Argumentem <img src=\"96223ddd-b085-50ed-b653-df728edaf0d5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"d54ccd3c-069a-5cd5-bad8-6a09111a0be8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"32de2efa-15a0-5ce4-8f3e-55b12851fa81.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"6a9263ed-73da-5c24-984d-20e936be16a4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"186aca84-a32e-56c9-a5d1-2dab3d0e1bad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"28278869-c4c2-5b9c-8e20-7b87a064b001.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"0e199dc0-03eb-546e-84da-cb972da0af97.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1575,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"bda577fc-3b52-58aa-8506-765d345398de.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"eaa33010-6403-5384-b173-00b2da48a6c0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jej postać jest następująca: <img src=\"d6146c62-473a-5b90-80b3-22b8d8904207.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"7aefae24-2d14-5036-934f-099789c1e4e2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"39404eee-0425-59a0-b7b5-add5642f3ca5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"36e175c4-ebd3-5676-9ff7-f9c11f4b386a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"ab40abff-1994-5cec-aaae-70634f0f6513.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"199b4359-1779-500b-8de9-a59eb4448a04.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacji przestawień elementów tablicy <img src=\"69ea3823-098d-5b18-ad0a-8570d54ee8df.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania dokładnie <img src=\"239dd530-4975-5960-88bb-4a9649ae76a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań jej elementów",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"4324c955-b5cb-5412-ba78-c1546f1f741a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"46ed7c50-4280-5af0-8c64-5c911a849605.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy rosnący ciąg różnych liczb naturalnych: <img src=\"1da9fbfc-c17e-5b90-bc82-729fd0dc6e8b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Dla owej tablicy i liczby naturalnej <img src=\"5f9e71e2-83cc-546f-9a74-ad73ed1b48b5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm wyszukiwania binarnego BinSearch. Które z poniższych zdań jest prawdziwe? Uwaga! Zakładamy, że tablica <img src=\"82cc91ef-85a2-5018-937e-c1142db02bbd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowana jest liczbami od <img src=\"c32be612-a2ce-5e00-81a5-214462c30bb6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"176ec725-aa05-5d0a-a6d4-3e2278a8b846.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1572,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejne wartości indeksów <img src=\"e3587580-0e20-5098-bfc4-8a5c4e490b7b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wyznaczane ze wzoru <img src=\"cf7f14a1-c210-575c-820a-54a59a2faff9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania rozważanego algorytmu tworzą następujący ciąg liczb: <img src=\"485237cc-47d9-5133-ba54-efbc180aa7d9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji porównań elementów tablicy <img src=\"93dacd43-045c-530e-9f59-5eeed0820e3e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wyszukiwanym elementem <img src=\"af417ea6-15e8-5cad-9c57-803b64709a23.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie liczbie analogicznych operacji w przypadku wyszukiwania indeksu elementu <img src=\"f686a8aa-bb68-5fdd-b5b8-36d39445861f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w tablicy <img src=\"82bc1537-8cc4-5ac1-99f3-94daf23c34eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przy zastosowaniu tego samego algorytmu",
          "correct": true
        },
        {
          "answer": "Kolejne wartości indeksów <img src=\"29609c08-0559-5792-a9ad-6d07a13e2e24.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wyznaczane ze wzoru <img src=\"c84bc00f-fda8-594f-b05e-e7ba7fbb2947.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania rozważanego algorytmu dla wyszukiwanego elementu <img src=\"d0968bdd-5f11-5c75-9826-95b1e3487a2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tworzą ciąg liczb identyczny jak w przypadku w przypadku wyszukiwania indeksu elementu <img src=\"7d666f1e-1edb-5a7a-8ce2-60aa14a71e21.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w tablicy <img src=\"94769059-c4e4-536a-878b-c01ee236e3e1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przy zastosowaniu tego samego algorytmu",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej <img src=\"5898e716-83ac-5f93-b9d3-eae028bdf157.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1568,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"20ea7b9d-8b37-5f24-a4b1-5d91cb1eb0a4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"b7fc04f3-ea58-513f-b582-60188bbc4ffe.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Ciąg funkcji <img src=\"947ac3bc-c832-559b-ace4-32ff9c23b044.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest ciągiem ściśle rosnącym względem ich rzędów",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej <img src=\"2eb695c8-9fe6-5911-b570-7dd93392a0ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1569,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"277af5e8-b9e3-55b5-af6b-cd22a7f6d733.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"c97c268a-ddf3-5a97-952e-1e2f2e84cf0f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"9ea32882-9358-5b59-94cb-17a58bf69826.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważym algorytm <img src=\"8d06507e-394e-51e1-90ac-da5583a0ff2f.gif\" border=\"0\\\" data-zdaj-se=\"true\"><br>int s:=0, k:=1;while (k &lt;= n) do<br>&nbsp;&nbsp;&nbsp; s:=s+k*k;<br>&nbsp;&nbsp;&nbsp; k:=k+1;<br>od<br>return s;<br>Które z poniższych zdań jest prawdziwe?",
      "id": 1570,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Algorytm zatrzymuje się dla dowolnej liczby naturalnej <img src=\"2d5e9c98-9a47-58ef-b0e3-74ace755f649.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Algorytm jest całkowicie poprawny dla warunku początkowego i końcowego odpowiednio <img src=\"fb042fa8-d4dc-56f8-974f-c8823b9fcb32.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oraz <img src=\"88247130-73ac-5ea3-a8b7-4a8fe0377fd2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Algorytm nie jest&nbsp;częściowo poprawny dla warunku początkowego i końcowego odpowiednio <img src=\"c58b836d-8195-5cec-bf1c-abd0066c1325.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oraz <img src=\"602b6ea7-2a42-52d4-a2fb-58c44c7459db.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i jeżeli operację dodawania zdefiniujemy jako mnożenie liczb (tj. k:=k+1 oznacza k:=k*1)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech będzie dana&nbsp;tablica <img src=\"69e38c77-25d7-5240-9aff-a94e26e00ae5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczb rzeczywistych <img src=\"0cb9299a-dfc7-5754-8552-9736d5752771.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i pewna liczba <img src=\"258ed50e-b735-5bc4-aa2a-ec2d06d5c1a1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Która z wymienionych formuł jest niezmiennikiem pętli w następującym algorytmie <img src=\"46219b1a-5233-5408-80bc-6c46eaf6d6f3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?int i:=0, j:=0;<br>while (i &lt; n) do<br>&nbsp;&nbsp;&nbsp; if (A[i+1]=x) then j:=j+1; fi<br>&nbsp;&nbsp;&nbsp; i:=i+1;<br>od<br>return j;<br>",
      "id": 1571,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"d11307b9-ab58-5977-8db8-90d5fc450066.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"78754e52-0528-5cd8-a701-f55114ddd500.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"d2570010-dbdc-5b28-a68c-863dcbbc913d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"f2d6ef63-1a31-5ade-acfd-d0dbadcd91ca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oraz <img src=\"2d0e89ab-50a5-5b0b-bb92-e3a38bc0392b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> będą algorytmami takimi, że <img src=\"8f96725a-5c10-5ad5-bdbb-c793ed8f4bb4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> oraz <img src=\"420a3760-2333-551d-81ed-17fd1fac3b3b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i <img src=\"8f441b82-ab83-5612-a0b8-5cb14257e859.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Rozważmy teraz algorytm <img src=\"395d1478-cef7-54c8-83fa-133b0d26e189.gif\" border=\"0\\\" data-zdaj-se=\"true\"> taki, że<br>int i:=0;<br>while (i &lt; n)&nbsp;&nbsp;&nbsp; if (i&nbsp;mod 2 = 0) then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alg1(i);&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alg2(i);&nbsp;&nbsp;&nbsp; i:=i+1;<br>od<br>Które z poniższych oszacowań jest prawdziwe?",
      "id": 1566,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"0315af1d-a72f-5a2f-83f4-37a95f406ae4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"b4fd2a77-2a8f-5865-980d-b028610667bd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"2688fcac-537c-52cf-a53d-43e371f324d2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Ile czasu potrzeba na zrealizowanie zadania o rozmiarze <img src=\"e0fdfbe9-a81a-5b7d-8a55-d494a14c33ca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> na ustalonym komputerze, jeśli złożoność algorytmu jest określona funkcją <img src=\"3de8a2a4-abff-5371-ad77-50fd605c9b06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"895f7672-033c-5399-9c2a-c65814e2c578.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest rozmiarem danych wejściowych,&nbsp;a zadanie o rozmiarze <img src=\"d08f2c59-566f-5429-b3d0-3b2eac50bef5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonuje się w czasie <img src=\"56a0101d-ee58-5bf7-b662-bba96faf836c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.?",
      "id": 1567,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeśli <img src=\"84e730bc-2774-5123-9a4b-3ec6b9ac1317.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"8be6df90-a8a3-5ee9-9246-cf192378b982.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": true
        },
        {
          "answer": "Jeśli <img src=\"669ca294-5614-5f6f-aebe-99108a742e42.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi&nbsp; <img src=\"3a095f5a-a530-5f70-ac52-816b513388fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": true
        },
        {
          "answer": "Jeśli <img src=\"a60babf9-8734-5240-8426-2289682aa3ad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to czas wynosi <img src=\"2a882671-e404-5193-b5f5-36056b365524.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Wskaż poprawne oszacowania.",
      "id": 1564,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"9869cd3f-40cc-5837-aaff-61a39697f5ea.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"e7a19d16-b130-52a8-8729-d1a278021026.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"8de1929a-424d-5f55-ac36-9765ff0e43f0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Jaki jest maksymalny rozmiar zadania, które można rozwiązać algorytmem o złożoności <img src=\"7bbed1fd-da4a-5b5a-8393-844777033a5e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"f680aac8-c25f-5b05-b42b-c2451235700f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest rozmiarem danych wejściowych,&nbsp;w czasie <img src=\"651e7e35-5a94-5fd8-a3cb-4e02d143774b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> min., jeżeli wykonanie zadania o rozmiarze <img src=\"3ce8c0ea-1a26-53fc-8c98-3da9e0ac0474.gif\" border=\"0\\\" data-zdaj-se=\"true\"> zajmuje <img src=\"1deea0b8-fa90-5e59-aa65-64c7ae8c37ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.?",
      "id": 1565,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"f4b67e30-8922-54ac-8760-a0f316547f59.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"81e1a84b-884d-54ca-b636-30ce31818651.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Powyższe dane nie pozwalają sformułować jednoznacznej odpowiedzi",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"0ea23852-cfed-506e-8948-ecaa15e2ec5f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"d7245322-50a5-59e7-9fc1-89098cdc3c48.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"0f41923a-9185-585f-afea-bd277d43c5b8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"9e7db77b-50d1-5241-86d9-50de736f65b3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"c47ea88f-c236-52db-9abe-4c21ca7813d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1563,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, tuż po ustaleniu finalnej postaci owego drzewa, jest równa dokładnie <img src=\"56506294-1bd9-5957-8996-264ce00b7f17.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Krawędź <img src=\"7b2d33cd-af66-5bde-a3b9-d11b1f972f2f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"27d3623f-ad7c-593b-a93a-12a25ac780aa.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Krawędź <img src=\"a29a3fd9-5215-57fe-a8d1-8a7d116e21ba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"33515df5-d1f0-5515-8ed1-beeaff93757f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"d58dd505-53bd-5de7-88ac-efbebddcc90c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"89ab30b4-9dc3-5265-8b2d-75b76218677b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"3b3b275f-c933-5e23-9891-96e702be67bc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"33477d45-e7d9-5fc8-a556-d58302cd3703.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2ebd2a38-6aea-5b58-8341-d1e8d45a191a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5300bbed-ec2f-57a6-abbc-88a9a51cddb3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"73938454-98b9-5727-9e8b-8bcf3eba26eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0d787a55-328a-5ebb-bf0c-fd0afe5abae5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ad9cd61a-2e9d-5135-8637-a8938e6d1084.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8c3c2b62-aa9c-5b8b-bf37-e9d869c5b25c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"78616faa-ed6a-54df-bff1-7ad7f347fa28.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"cd7f3de7-c207-5faa-a3bf-fe0a546b3d6e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"7b943b91-5c62-59d6-a85f-15e337458712.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1562,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"588afb02-fb18-5ca3-bc66-a02c8ea1d506.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa co najwyżej <img src=\"2d14afb5-d2f1-518b-bee9-cf890e5bede4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"23dfbdac-fc5a-5764-a125-d2a0a7fb1e0b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność akceptowania krawędzi grafu do drzewa rozpinającego w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"32d36293-5d76-5311-ad50-5685ed442588.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"692285f2-594b-507f-9c87-7a3cb5e4c243.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"af8b9a7c-4009-5fcf-8813-5cc48100be9a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"38454a72-f0f0-57f4-9f1f-11a2105f8c35.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"2e90382c-e14a-5a72-b058-9a2b450f4159.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"de753fcd-39d0-5e59-912c-6697d44630c1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"d33ea83d-b9ad-5bec-8a10-d07f382c0ff0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1561,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Krawędź <img src=\"19872841-cf73-5dda-9c97-bcf7c95591c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"2da1e35f-3471-590e-8aaf-af09854ae749.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"dde61913-cfb1-5c10-831a-069eb2fc0660.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"1f7bb949-4e7b-544e-81de-d00a6c0501d2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"f28f0c5e-4347-59e3-ba3a-2325cce044fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"d46fd781-b09d-5364-b26e-98a2af2469b8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"837ba8ef-e161-5d99-87a8-83de560d17c8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"95569122-2df8-5628-a2ff-08aeacb0f3fa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"045c29f5-9eae-5d29-9a2e-a664d6f4dd38.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"7bf9610f-ee32-5647-a6df-519346e92108.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b5942aa9-5c05-5a7e-8ea4-1dfbde4c528c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"01dc9bdb-b9c8-5499-8f65-d2f3f4a8cc19.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ee025f36-a07c-5ee0-86ef-9c4924b5bed9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b037df7e-f077-58d8-bb87-815cd9d30c6d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"395312cd-a61c-5c9f-af8e-647ca1333d88.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3a2fd677-1a45-5a30-9199-751d9d80b160.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f8434f31-ec76-52fa-9d81-5d9de4f05344.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"6c211274-4fb5-523c-8520-b5619b713981.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"09fd6355-8e1a-5ed7-9d42-bd953e0727eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"b124f022-1fbb-5efe-89ce-1dbef61501d7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1560,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków wewnętrznych w minimalym drzewie rozpinającym będącym rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"774bcb44-283a-5a75-aaa9-e9e14e5d064e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"9534ea20-3697-5b98-a3b4-9f4dafaa72d4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Kolejność przyłączania wierzchołków do minimalnego drzewa rozpinającego grafu <img src=\"de079e7e-a1ad-5fce-a44d-0cd683c5b928.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu Prima jest następująca: <img src=\"4f7144cc-3551-5d56-a1f1-057760e904fd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"65e092d8-4c41-53bd-b589-ae377fe4e8a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"57f252be-d4d7-59f7-8154-fd880e45cfbc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"b1697a60-54dc-5fd6-87b6-dae65b16c15e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"d8ec7d30-f466-5913-a8e6-a63e12c5cd51.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"166fcfe6-bcc8-585c-8505-5d81e6c8b076.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"bfa3e992-da0c-5fd0-979d-275bc85e3ab3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d09af29e-f2f6-5bd9-ada6-2d96b084839a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"78730bea-d2c6-5e99-8afc-56546a87c2eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9256b68b-5a5f-5bca-a44e-d532dbf83def.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3b3c73d4-eac2-5d19-a4d4-a832ac4333d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a93cafc0-b7ad-52ee-9b53-4b66d22108fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"104a954b-d3bc-56ad-bc8b-5bbc196d755b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"612298b3-206e-55d9-a15b-0316ddd8b8c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"d371a88d-662c-525a-9815-edecdecf06f4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1559,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa najkrótszych ścieżek będącego rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"9ac7fe77-cb91-52f2-8023-61bc18941627.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wysokość drzewa najkrótszych ścieżek będącego rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"bf92cea5-8f79-57fb-8eb2-3d5feca191a3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących drzewo najkrótszych ścieżek będące rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"3135f401-6d62-5688-8675-d1bd02d40d12.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"1a5fdf39-d033-5b5b-b07d-3bd44ed0699d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"d813895f-0665-5445-ab28-35b22e965c5a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"e636fece-7279-5ab6-bac0-ff4a24b33955.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"a0406047-83a5-5a86-bd6c-925bea81740f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a0986ee5-65ad-5d07-8dfc-0e3e60b4b98a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"39290075-3e16-581e-aed0-08339128fa2e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e6118856-fc4d-51a1-b3b6-ad6999561cfe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"faf9252f-4361-5b1e-bc22-992a0dabc511.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"7f73bb15-416c-5ed9-9aa7-2dce96eba09c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"64d26131-da36-503f-b5c4-7cace2ee3f6b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"01b845c3-6d8f-5457-a0ce-8a0364dea1d6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6e1cd8d0-b2e7-5acb-9335-b176811731ff.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f6c5405f-8522-5a94-bbde-ac97066f85b0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"6420c96e-4627-5d5f-9714-1f60587a0c39.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"9d306d74-b8a5-50df-8617-562e22077da5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"e113e773-4cea-5aff-92cb-94542614c852.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1558,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"a4d3dd6d-0ded-5313-a004-25f5969d20af.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany kolor <img src=\"ba08a1ae-e887-548f-ab04-a1012af19991.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba chromatyczna <img src=\"73b4199e-3ca0-5dfd-9116-97f2b3e295b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"aa9c151c-dda6-5222-b59c-087873636b0a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"c0521ee6-11d9-5928-b77c-ac938ab8029a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność kolorowania wierzchołków grafu <img src=\"0937eab9-08da-5dbc-9cbd-6f34adcc9dd1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu LF jest następująca: <img src=\"01700df0-0e42-5af5-8fa9-b23d84625b4c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"61c317bc-e46d-5f4e-be60-dfccd3d99734.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"3aae1dfa-d032-5083-8a8c-9e913a49d7d9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"622f56da-d67c-50a9-9b22-143a0b2f43e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"0d127811-03f5-501d-98db-b3f3ff14c792.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"c9b68e3d-98f3-5de1-9b53-5ad0d872cd78.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1557,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Krawędź <img src=\"f890402c-4473-56aa-8b56-090bb27fc9ad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"d3609a1d-885d-544e-a108-ebe2631d05c9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, tuż po ustaleniu finalnej postaci owego drzewa, jest równa dokładnie <img src=\"35b3de1b-50a5-5f7a-a33b-ca5883bd80ef.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"fc05ae6e-ba6d-54e7-92aa-d021a33ecc6f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"a68091b8-853a-5101-aac7-f8bd8ed0be07.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"d9a963de-12b5-5da7-a819-cee0b983443b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"f8c4bd14-7243-5765-ac09-d504628f3bc5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"8ad85190-b805-5889-8c5c-ecd37296373e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a11e82ab-2d94-55af-8acc-3c19d6b72ce6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d76e92e9-d731-5e44-828c-ab84121a851b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6ba4b3a7-b782-59df-95b8-e76e181715da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"89f6c210-b617-5fcc-aec0-10be9425f6d9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"fe75802e-5598-5384-84ef-0289ec252376.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c65f4573-bc94-59c8-92da-6d327d072327.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"cea517d0-3252-5328-8b62-2f45c8ce559d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"50706ce3-ac0e-531a-b293-e20cf1964971.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"a2aa49a7-dec6-595f-9f5c-48bd4a97fc8c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1556,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, jeszcze przed ustaleniem jego finalnej postaci, jest równa dokładnie <img src=\"220cc222-21b3-58a7-afce-6d61c0fbe398.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, jeszcze przed ustaleniem jego finalnej postaci, jest równa dokładnie <img src=\"7f5d99de-03cd-55bc-9fa8-3a7b1dff9352.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"fceb8d97-4155-5d31-8846-2959248c6ccc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"f33a0009-9a17-5332-830c-06af3d5f5ee4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"537cf772-2989-533e-a9c1-b74373cd4f53.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"094cd2ce-60fb-5c9f-b9c4-b4ea9c23c917.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"728359ab-1495-5344-99b1-845c16e30d76.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c2ec8ffc-1da1-5ea3-b281-ea6c4a4f1247.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f62d1ae0-d58b-5c18-b9ba-ac0a963e33a5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5737a0f8-2aff-574d-8c27-424f67dd5db8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"2507bc2e-4ac2-566f-9782-16bd1b42940a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0f759744-1eeb-50a0-ab89-da9b2c3bb865.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d08d7dd4-cf68-5345-a481-3be20f9e9343.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0dfbc688-64e8-5221-a8f5-662c934b97eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"98063d13-c213-5070-b5ae-73d8fdc25b31.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"227270ff-681c-5e5b-aa53-cf2569e78547.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"f33d1625-059c-5d49-bedb-3788967fef48.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1555,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"7636833e-6b52-5164-926b-8b51bb3ad198.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność przyłączania wierzchołków do minimalnego drzewa rozpinającego grafu <img src=\"ecae869c-addf-52c5-b177-a26a37d43555.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu Prima jest następująca: <img src=\"3acc3ff3-881b-536c-a331-1cd6eb28e162.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych w minimalym drzewie rozpinającym będącym rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"9fbcd14a-b7a9-519a-9bd5-589867ff074f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"4aa27ff3-cf40-5818-9dbf-067f5ea26069.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"3376c46e-d2f6-544e-a241-8b60b85fc4c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"2bd5dd9d-3eb8-50dc-99c2-7f3dccc4eb04.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"432645a4-5ada-509e-91c1-bbbad2ebe1cf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"edb763d8-38a1-5825-9fc7-0a7f8a6b95f1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"4db47631-ca09-5502-be79-c8577fca6cbf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1554,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Krawędź <img src=\"e8e478c7-d1e8-5de0-aadf-54e269252887.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"df10cc98-a0f6-577b-8c83-ad2852c83f8f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Kolejność przyłączania wierzchołków do konstruowanego cyklu Hamiltona w trakcie wykonania algorytmu PrimTSP jest następująca: <img src=\"315f2bb2-98c2-5ccf-9568-1f10f4718dfd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"3682229c-5bda-52d5-bd6b-c48d3693a915.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"90fbfc48-766a-5f59-a921-ebda008ef9fd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"2adbcde7-4ede-5bed-bb03-fb213674dbd3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"71b0c9a2-39f8-56dd-8378-d49d7e122420.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"dbd1a30e-2743-5e05-b4a2-47f7a4d208a2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"eba04c76-a3f9-549d-a5e3-f122825cbfbd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"536516e6-cdf7-5e38-9f87-7271640b174f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8166d1f5-1281-5dc8-9ad8-b5e49c0f5d2d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"45252062-8284-594e-9f01-5c4be9c94b01.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"32e8f92b-6b44-5aef-9f23-2b6d344a0009.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"879d4daa-3df3-56b7-98e5-c8209cf700fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"024fb321-a9ef-56e3-9585-f24413f1d15f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f4d21476-b276-5e27-b9b1-e88ab3c7ab4a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"ba2e02ed-81c8-55d8-a4de-ae738c307081.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"cd502fd7-70e0-5256-b07b-29705dedd189.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"67a01520-95c1-5f4f-a4cd-1bb10c29320f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1553,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa najkrótszych ścieżek będącego rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"3af014cc-c25a-5f32-a0c8-e48a9d29aff4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych w drzewie najkrótszych ścieżek będącym rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"6c49d1e9-0132-58ed-aa65-445f6b88ff1c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Najkrótsza ścieżka z wierzchołka <img src=\"0c426632-cf04-5689-823b-247fd7af7707.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"c25a86f9-7dc5-5bd1-bd23-5f4aa0463a17.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w rozważanym grafie jest długości dokładnie <img src=\"d7e8758c-56cf-5f39-8bde-2f4011861b22.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"019e783b-06b6-50b2-94a8-e00d7b3245f7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"149531fe-2578-59f0-8286-d51aba933a7d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"ccc3d80c-bf05-541b-9c42-6815a6548a86.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"4a55068e-6d03-5a9c-8089-1fe811869b7e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a93fb196-8e05-5371-b398-75ed328941e7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0bb1e97d-0405-5e3e-8dde-90ffa6ff4422.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8cf6556f-0736-5ad1-aab1-026acb659110.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"de59b291-5556-5dd2-be7d-2aecbbb60bb1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0868bd17-64b1-5e84-834e-902795a964f4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"43463a00-bc32-5c27-bcef-b0124a1a56d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3febadaa-4390-532d-82e9-371615e00544.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"111f00fe-e33d-58c1-805d-308a99b5ca6b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"76c9192e-6157-5cc2-a1f9-5062e1287af0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"2a9e3ace-e164-5800-b3b5-198214bb687a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"74c15d24-85c2-59b6-a1c8-dd02fc8d97df.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"baee74d9-46c9-5e96-ae57-5271dd636ef2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1552,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba chromatyczna <img src=\"3f67d726-d7d8-5f53-8fde-ee6fcdfbe8c2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"466127bb-96ce-5cef-ad39-1aef198793a2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"8ac3078f-e962-5cf0-9be4-6085071b637e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba chromatyczna <img src=\"5fb4038b-4398-570f-bf0c-737330fb26fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"6a7b08d4-1d0d-5cd7-aa3c-5001a4ae9052.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"74a73aa3-7465-50fe-8bb5-d785fd0984d4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Kolejność kolorowania wierzchołków grafu <img src=\"59b2f16a-b595-5672-ad2d-74f55647b4d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu LF jest następująca: <img src=\"de7f44cb-d625-5a0c-8793-41ae9832a067.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Które z wymienionych własności są prawdziwe dla kopców-drzew?",
      "id": 1550,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W kopcu wszystkie ścieżki od korzenia do liścia mają tę samą długość",
          "correct": false
        },
        {
          "answer": "Ciąg elementów dowolnego poziomu kopca jest uporządkowany&nbsp;malejąco od lewej do prawej strony",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków w kopcu o <img src=\"d603ef49-7611-5cf6-8090-221dfdcd5533.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementach, które są jednocześnie liścimi wynosi co najwyżej <img src=\"ff3112e8-f8bb-5775-b853-020ea2a360da.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"cad240ac-3924-5f97-bdd3-b521023356c3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"e357677b-e879-5774-bee7-08eeb15f1a76.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"a607e842-c4b0-56d6-86da-355a52e25f63.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Następnie w kopcu <img src=\"91f140a5-1344-5617-8d28-acceb54408ed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonujem <img src=\"e7d0c88f-8abb-5cf1-9851-bbf57cd9a927.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -krotnie operaję DELMIN. Które z poniższych zdań jest prawdziwe?",
      "id": 1551,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"ff582b40-5227-5927-baed-36f327a35bd2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"dc847ae8-7980-5cf4-b53b-93aeef5a2e20.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"b557ae29-9980-5a2f-ac31-ddc4a26fcf1f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"c228dc18-0b80-5ab0-8a91-9077a332c2de.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"97341e59-0748-59c0-9365-f334a088d9d3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"1dc6e331-965c-5339-b44f-5cb6f5f8e17f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"ec694d59-5a8d-5f24-91fe-e3b7d62c9fc3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> będzie drzewem AVL, którego etykiety odczytane w porządku PreOrder tworzą ciąg <img src=\"c3fbf214-9b07-5e10-b495-d3771a38b873.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Jaka będzie etykieta korzenia w wyniku usunięciu z tego drzewa węzła z etykietą <img src=\"3ffdef30-e43e-5e39-9791-aa4bab9ed6a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , za pomocą algorytmu <img src=\"819daa73-6f3b-56a2-8b75-8be31ae2019a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , jeśli nie wiemy, która z dwóch dualnych strategii została zastosowana?",
      "id": 1548,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"6afc580f-bd5d-54fc-9c77-408855d965e0.gif\" border=\"0\\\" data-zdaj-se=\"true\">, niezależbnie od wybranej strategii",
          "correct": false
        },
        {
          "answer": "Co najwyżej równa <img src=\"7b88623a-96f0-5d81-a864-dd10df064b59.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"42011acb-dead-506d-b1bb-4a5661a386c8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> albo&nbsp; <img src=\"4ac6e2df-5e28-5e8f-90bf-87db652c0e67.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"5a6d024b-a79b-5b19-8287-1accb58394a4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"c0db37bb-dc75-52eb-827f-1170b7a00ef0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"9a68fbcb-71b3-54d9-a130-09f267e5c6fd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Które z poniższych zdań jest prawdziwe?",
      "id": 1549,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji przestawień elementów kopca wykonanych w trakcie jego budowy jest równa co najwyżej <img src=\"e9031b30-315b-578c-aa27-99a3498aea5b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"9f0ac95b-4369-59b0-addd-e6f91b883ae2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"49edde0c-e678-55ad-9f6c-05e89fa694a0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli zamiast drzewa binarnego do implementacji kopca binarnego <img src=\"9f09b592-f97b-5adb-8fc2-33a8dc40e254.gif\" border=\"0\\\" data-zdaj-se=\"true\"> użyjemy tablicy, to jej finalna postać będzie następująca: <img src=\"84c63035-3faa-57d5-95b4-c7a93e876320.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"a3152d56-2df3-57f5-9a11-a29a0eae49ff.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"1d345e39-1756-5096-8618-2130e90716de.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Które z poniższych zdań jest prawdziwe?",
      "id": 1546,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba rotacji podwójnych w lewo-prawo wykonanych w trakcie budowy drzewa <img src=\"6a1e11ea-b724-54f8-8382-b948a3bcbc24.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"fe41ee76-d158-5089-9404-4eed5fa2bc15.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"a4d72567-f5b4-5fc9-8ab0-2883c13de135.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"063d6a03-8a90-5fa2-a225-5a11ae4a2823.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba rotacji podwójnych w prawo-lewo wykonanych w trakcie budowy drzewa <img src=\"3dbcbeac-21d6-52e4-90cc-fd71dea7f2ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"2d48d134-8022-5ae6-b865-53248232a827.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"28c11c1f-1946-525d-81ae-8492f21a06f4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"e8388ac1-a146-5ce8-9ed2-4c7ed2de2883.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"9c9f4a69-1535-51f4-90d0-a9ab4fa450a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"d322648d-0617-5a8c-9773-46ca34e60f87.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"987a82f9-ea6f-5851-a13e-da9da514dd33.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"0529b936-a97b-593b-aecb-1eec03e899f3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1547,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa <img src=\"f08c3b8f-ce4c-56cb-9810-27fb52aed1e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"47d4bd2f-f62e-5f9f-8c77-f0226dc51132.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"3e8129c0-25e6-5ff3-984c-b3d9dbd8659d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"b6f50922-83cd-5927-a58c-9e8e6a4379ce.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wysokość drzewa <img src=\"f2d0a814-393f-557f-99b7-74b6c50f4f95.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"ee400fb4-a91c-58bc-8008-669909a7935c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"228aae03-1335-5f2e-9ff5-ebfe47f43199.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"8d8de6ad-b966-5712-9a15-a3460f4e38b9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1544,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"95f864e5-187f-582e-a886-c380a7513dbd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"bd098368-d50c-5ede-b4f9-0cd5365c65d8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PreOrder tworzą ciąg: <img src=\"7a55c6e1-81df-520f-8179-1e70eb7191f9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"8c36afe3-a6ff-524a-aff6-6f5fc8140822.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PreOrder tworzą ciąg <img src=\"3e0ec449-d269-5ea8-bb60-0b405732d020.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"97a994a6-5e8e-5b2d-9ece-484902ba81f2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"28f487f9-5e52-5115-b94e-9341e33c057d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PreOrder tworzą ciąg <img src=\"38b8c1f9-fadb-57a2-9c41-2e8d2806eaac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"353bbeae-f2ed-5bf1-82cb-20526651e045.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"6865346b-43a8-58b3-a479-ec82ac686892.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"428fb1c6-deec-5caa-a17f-cc07fd89fcce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"a676224d-2fa9-5513-b7d8-ebf225617506.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"02f805ee-1a97-5f95-941b-69fc6c2a83ad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9a64267e-6a45-567a-a3a1-c3abbc8fed74.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"748038ef-fa18-5520-98ee-841200cc7672.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"792f77b2-7857-5076-b659-2b55e8d1a25e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"591329c1-ee57-5869-8434-5684829a2d8f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a9738c2c-2002-5e60-a8ea-1c44a9379767.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0a47131c-6af9-5919-80b5-e62f6821e563.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"78d27a9e-b4b6-5f06-a16c-e4c6b418a7e4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności DFS z wierzchołka startowego <img src=\"960f5f77-a832-5d7e-9208-01600f5febed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie DFS wierzchołki grafu umieszczamy na stosie pomocniczym w kolejności malejących wartości etykiet.<img src=\"9359264d-bbb1-5d35-b75d-4413662aa614.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1545,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu pomocniczego w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu pomocniczego, w trakacie wykonania rozważnego algorytmu dla grafu <img src=\"8610b034-9c61-567f-ab87-67641eee5068.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"87f005ce-34aa-59b0-a67f-30642183d758.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Kolejność odwiedzenia wierzchołków jest następująca: <img src=\"b8d0b2a1-8eb7-532f-bb5f-984405b961cd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba operacji OUT w stosie pomocniczym w trakcie wykonania algorytmu DFS jest równa dokładnie <img src=\"6638b722-d6fb-5f36-bcc4-4b4cce76bc27.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę kolejki <img src=\"b316eb03-77e8-5c04-9822-0d5d4c165d19.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"91c05b36-183c-505a-8977-4c78abd2b86d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"eee15bd9-3b1c-5fe3-8156-c1ff48cdce36.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"028722bc-cbd6-5424-9abd-1b3a133a53eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"99476027-f854-5ae1-ad0d-ba43029e02d1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3ffda305-c87e-5478-89b9-8c87cf46380d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"82c676b8-a64d-5967-8b52-88bff1e3c043.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"54f99169-6329-55ac-aebe-1aba794e0ebd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"324d26bd-7493-5642-ab05-d2fb10088aa3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0df48fa0-adde-5393-998e-72e2ae8ff13c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0b22f2b7-d60f-54e4-b5be-30df6c9b963a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1542,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna długość kolejki <img src=\"f7d95ff6-6673-5dbd-a238-2a902a76c7f5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"aee6b8ed-48ff-5c08-a30d-42303a81ade0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"99e9900d-df7a-50a8-9059-481f5db942a3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a61f5bdf-64a9-5ca8-934e-bd6149eca909.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ed8e077d-8b6d-5841-a7e8-21b8a6d81f0b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ac14ae37-c1b0-5582-8346-2912712b4c78.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a76112de-1614-5d4c-9d7d-fb5a04f3ac4a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0e82cded-d272-5a66-8be5-c287c05cbb92.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6b910021-5444-54eb-ae99-36f0feb5a55f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"1aa9174f-1f9d-5b99-ac4e-16c6400d80dc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> 0Ostateczna długość kolejki <img src=\"d8c83023-7404-5667-a241-abc4878eb07d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tuż po wykonaniu przedstawionego ciągu operacji jest równa dokładnie <img src=\"5033c6ba-1841-5d1d-a487-5f4e9589cc9b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"ee393245-9c81-5d93-b098-2f2edcc888cf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"eabeb48f-2fa4-5ce7-b319-ce660afa697d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"15ac078a-d452-5bb4-bc15-f6c8dc6ca366.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"81b95450-c139-58fc-9146-618c1d09055e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?",
      "id": 1543,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba operacji IN we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"df450272-6aa7-51cf-9d8a-8a5c3fde06e8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna długość dowolnej kolejki (tj. maksymalna liczba jednocześnie przechowywanych elementów) w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"5f0af26c-1fc1-5c69-9763-5e86c819db37.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji IN we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"a55ad4fb-511b-5070-89a2-b3d2996093a6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"681378e5-ca19-530d-9c53-b48ea384656a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"6b04e89b-8421-5ad6-b623-d209063e2825.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"34e4efae-9294-571c-a4bb-0149ad09f4c7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"667b014e-116c-58cc-953f-10d4ecc770ed.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"2a6f2dcc-fd8f-58b1-8118-a45410eb3ae2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"e3630b12-a398-520b-899e-a841c83968ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1540,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa <img src=\"ce0815d4-e812-53a0-87cb-a8524a52fec8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"a1dbb5a9-52a9-5dcc-8156-839254124ef0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"34150673-426c-5814-a0a1-0d85cfd813df.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"150f780e-dc48-56c9-9093-b24107d4e882.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"102933c1-b88a-5993-b8f6-97d3b4c2b55f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"a73d161e-7b75-51b9-a52b-4a2b4d8dcc8c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"507f73b8-225a-5754-b181-89c32a7f5c46.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1541,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji PUSH na stosie argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"79411f94-8968-513b-865b-57a645619f13.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba operacji POP na stosie argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"1df8fa0d-95c2-50d0-aafa-196415bb74a7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"b5770b92-1dd0-5ccd-95f8-f9bd497a6355.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"d249e620-83a3-5e68-a001-db4c7bc9d86c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"6cbb4806-554b-556a-8355-0cd636104a07.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"e193b11f-e3e2-5676-8a8d-0bb4dd1e5e46.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"14543f52-b88b-5ce3-8e5f-ab2217b1e1cf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3bd57d8b-3c8f-5a66-abf0-d0568b65936e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"344c0972-ab90-541a-bc30-e2fa56a62b08.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5aa9a462-af26-5e97-8d96-83fbb7e4e8da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1dae8be5-765d-51a1-9d17-a6ec3a2b20a9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3eb9b03a-dbf5-5743-bb58-3f3f4ad17de8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ad67d30d-ac91-53d4-93c6-7b4185475279.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"0a7361fe-90f3-5e14-b639-2b3d98127a87.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności BFS z wierzchołka startowego <img src=\"641a9fd7-146a-5885-b58c-b0d8264788e2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie BFS wierzchołki grafu umieszczamy w kolejce pomocniczej w kolejności rosnących wartości etykiet.<img src=\"d6f54dc3-eef2-534d-a48b-788a302b0055.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1539,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji IN w kolejce pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"bdcbbc61-05c7-5512-a710-b23ccb11a174.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba operacji IN w kolejce pomocniczej w trakcie wykonania algorytmu BFS jest równa dokładnie <img src=\"bab77435-396a-5c90-9732-83997e58a1a3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna długość kolejki pomocniczej w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej długości kolejki pomocniczej, w trakacie wykonania rozważnego algorytmu dla grafu <img src=\"355755de-bf83-51c6-b32d-59aa0ac70a63.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"893a1935-fcb6-5433-8c46-c09be8a445f3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"5664555b-6a57-5d4d-9655-b8c9080f7f3c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"cc989802-28e2-5ced-84ee-c20fce243161.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"d8e73cfb-e895-561b-9658-67358e5d0215.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"0be464cf-eb64-5b97-b5e5-4c0063656db7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?",
      "id": 1538,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Tuż po sortowaniu liczb względem cyfr na <img src=\"9a47c4bf-25df-535b-8e27-4685971fa9d2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"6c942466-980a-5146-89b9-1ec37fdde13b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"046a86d1-c7ae-5be5-97ca-be253acaad9e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna długość dowolnej kolejki (tj. maksymalna liczba jednocześnie przechowywanych elementów) w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"a42465af-82d6-5789-96c5-c78f19fa0c07.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Tuż po sortowaniu liczb względem cyfr na <img src=\"0fbb2f44-4039-5367-91f5-326be485a9c2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"b5a582fd-3101-50ca-a9f8-a04b0a8afa83.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"33117b04-b9ee-58f9-8836-68dd9f1efd53.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"153f062c-0a44-5376-add3-f04343bc9477.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"8801761c-0dc1-5c57-bfea-e285f822f062.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1536,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"ee94fee2-2675-535a-b2d4-4ee0ff127b4a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"54fc92cf-67c2-5206-8177-52f0204a53cf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"bca639f3-36b7-5224-ba1f-799334e61f82.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"72fb5222-2f28-53cd-881e-8c6fd866d911.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności InOrder tworzą ciąg <img src=\"77ae56fe-8425-552b-8584-f40d6442253f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"1d93337a-0100-55b6-a555-5cc380f13bd2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"3d36811d-67c4-54e9-a261-5a11aca080ea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności InOrder tworzą ciąg <img src=\"290cef40-4d15-5d41-8036-4b6ddd3523c3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"961418d4-3f77-529c-9780-fbe3f1598f52.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"3a119db7-6592-510c-ad8e-1c6e7a790d6b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1537,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"9d977d0e-52b8-5a0c-94ee-a0fa5d0b2889.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba operacji POP na stosie argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"5fce1094-2eb3-5bc0-9787-06e00f438810.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba operacji POP na stosie argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"0d219ead-6ef3-56f4-b05c-369e2ef5a32f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę stosu <img src=\"66871024-5570-5d96-abdf-c4249a5cc3ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"343b8ff3-211c-5541-ac73-7873805c8530.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"954585cf-625a-5891-8741-fcae0fd57ffa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"d8848aac-6681-51a2-a6fe-8765445edf3c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"7cb17c17-f97e-5f15-b78a-cfa09588c758.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"958ee070-ef49-525b-949c-74f3338cd428.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"176fea8c-35da-510c-aba5-97f465b47a5d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d5c3c124-1350-5bb5-800f-8e3bff09095f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8df75b8f-525d-5ed9-8185-206c91ffb9f9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"eaf1cd6f-d626-561c-8f68-a37a68d22090.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"838aeffd-66c0-52f3-9789-2d3b26715ba7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1535,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Ostateczna wysokość stosu <img src=\"c0b135a4-b2b9-55c6-abb1-59049ddc9848.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tuż po wykonaniu przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"26970586-6553-5af4-b0ee-285f8dbacd53.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9ca639ff-f816-560f-a12e-ed1ae25b01b0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"dd839814-694e-54e7-b145-76e319319820.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4a8a360e-5bbe-5026-b472-d9906c83c05f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1193dfe4-1483-5818-8955-b80832171923.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9e811f20-09f3-5c25-9fe3-be2d2dce1e1d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f19989da-4aa2-5150-8e67-73e10914af88.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5e7f3b4b-27ba-5bc8-ac52-1fa58ea6b495.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"39fa2ac5-3b56-5592-8d35-1bdfbcd9c6ce.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu <img src=\"aeaa65b4-caa4-5be8-a65e-faa972a3dc94.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"b77bbd11-f10c-5735-bb44-f29bc7a0fe36.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"778c89a3-f0c8-5727-973f-09f6bcf85be8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"f04e40ac-2834-5e1a-b965-65512757129d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"eb7e324f-d2c1-5657-8814-3472652fa10b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6ccfaaac-5a90-56fe-bacd-c898b257a3c4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5cd6e910-e21c-5629-9fbe-22cabf3b8b72.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"1c2a834d-2d32-5a92-8ae1-2817c752548f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ddaa7561-4766-535e-9fd3-b28521eed19c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"e61d069c-85a5-5176-8d16-c05602fca183.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"bb6b266f-92fa-59c2-9958-9e2a0cd4b3cc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"65929812-7a04-56ce-b59e-b7511e6df1bc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"8bc63112-3c0d-5466-849f-b8202ae0474e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"5930cf57-e26c-5ef5-94aa-7b0125448062.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"e0bcfd61-dd2d-5b40-a17b-8a7dca2a8865.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1534,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"d10b7ee5-0941-5cd4-8b13-d3afa5de6f3f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"77790c3e-5d79-5852-8536-3fe3b4dca9a6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"06f0c2e3-981c-586f-99c8-f6879bd984ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"04c61792-279c-5093-87fe-4093ca550506.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"b7060293-f03e-5aec-9746-3b70e38543e4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"24a8dd00-60c3-564d-9a1d-720a36143f0c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"b32d65ee-e767-5703-8dc4-676e07226b22.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"9d4f3ff1-925b-5023-a53c-113ef798ba33.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"38a8e673-cb12-53e8-aee1-999066c1376b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1533,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"2c99c431-0f7a-53f0-a19c-958640876c55.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"b899f5a9-0e17-561c-a2ea-d12bcb31b737.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"81c3603a-3baa-5717-804e-f31a8dcce1ef.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"8fc1b104-7c5e-5f4e-b157-2265566a593e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"b9e68483-59f8-55b7-baeb-38eadffa77db.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"6973801f-30d3-52c0-9ccd-45ee668d4250.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"4b15213c-6986-5b4f-850a-aa490d1f8a3c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1532,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"f542f65a-b52c-5eb1-9d44-833ce7a1aa55.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"541b0d0e-d433-5478-ac0c-b54cc3b36af0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"ff06a4ed-d3d7-5323-837e-db4f968e7002.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"81b7c40a-91b1-503b-9fea-f6a2dd194aa3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"98643431-8e2a-5d0f-8dd2-42f67d4f322a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"7f8d12f4-0cf6-5f20-a46b-722408833a54.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"ca72921f-288e-58ac-8a82-1e4ebf18cbad.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"5563628f-71bc-529b-9ca1-1cfe9be76d96.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"46ac005c-f10a-534e-a11d-e4e0295f22f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"a84c0666-fa80-5b77-90dc-614dd8deefcf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"bf5b4602-ab39-51b7-9465-e2b72942c553.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Ile razy zostanie wywołana procedura scalania, jeśli algorytm MergeSort zastosowano do posortowania ciągu o <img src=\"19eea8ef-c9f3-5eab-b7dd-adaac37e9ebc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementach, gdzie <img src=\"dd62a868-ed14-513f-ae0f-ac8874bc1f1b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?",
      "id": 1530,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Co najwyżej <img src=\"1c36065c-4e1c-5e4e-ab92-cf1fe2c7508d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Co najwyżej <img src=\"150e02ea-ad92-5aa3-9175-3779daec96eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy",
          "correct": false
        },
        {
          "answer": "Rzędu&nbsp; <img src=\"3377233c-0cf1-5a74-8cf6-72adec695c8b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> razy",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm sortowania CountingSort zastosowany do sortowania <img src=\"b2f694cf-791f-59cf-9598-d36e92a3c3e4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowego ciągu binarnego <img src=\"5b3277a4-5539-57ea-960a-1e884e073f4c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe w tym przypadku?",
      "id": 1531,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"ddcd0e17-b5a8-574e-9cec-25a99ce8d3f6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"533aecc6-514e-549b-bae3-d814a788b16c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"a7aa61a4-912a-5993-b871-4ba9150a4d36.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"2a8928ea-58f2-5f10-883b-4ea75a3444dd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"8653a4fc-6a95-51c0-8d1b-962a1cce3c6b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"3e562070-c434-5b3c-ba33-1a896f971b07.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm MergeSort w implementacji rekurencyjnej, z procedurą scalania zgodną z metodą Merge. Które z poniższych zdań jest prawdziwe?",
      "id": 1529,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Merge jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"5bf3afc2-300b-5255-9676-2407ca2efd6a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu MergeSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"02f8c127-d7b2-52d4-81c5-ba6941bf667c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Merge jest równa dokładnie <img src=\"8901263c-1d54-5afe-be95-e8044368ce82.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Który z ciągów jest możliwym stanem tablicy po wykonaniu algorytmu Partition, przyjmując, że medianą był element <img src=\"cef50b34-cd4a-5773-ae5d-caf12ec3a43c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?",
      "id": 1527,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"048ab4bc-6fc4-59db-a8be-cfc9469f2407.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"40c89eb2-2237-5056-9247-4496fd907f2d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"780e31b8-2e19-5ec7-ac9d-b015c2ec723a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"36b99524-2e33-56de-8609-5d6d3dac6e2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"b45c7f2c-fcf8-5215-b22a-9415a02459b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg liczb naturalnych: <img src=\"9b3f8995-18a5-5113-9f5a-dff24298fb24.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm CountingSort. Które z poniższych zdań jest prawdziwe?",
      "id": 1528,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po drugiej pętli iteracyjnej (sumowanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"74406e54-1673-5b26-bdab-3fd16f9ecf5f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po drugiej pętli iteracyjnej (sumowanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"92d81fb4-110c-5cdb-bf1c-b26cf7dbecae.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po pierwszej pętli iteracyjnej (zliczanie) postać tablicy pomocniczej wykorzystywanej w rozważanym algorytmie jest następująca: <img src=\"dbb0d55a-19c2-51cb-bf5f-aad7eff50f4d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"71ffabbf-0342-51da-87f4-42c5d3dba20d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"14aed4f4-b92f-56be-bcb1-b2ed9aaf0b68.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"cbfc4da2-4538-5a69-b29e-96087e7e65f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"95e5c8f0-dbe8-56d3-9b9b-f577dea1d08a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1526,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"03ad317c-1e8f-5242-908a-fc67244e2073.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"5aadec40-55da-5281-855b-47037f067ddd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"c94a4809-0719-5165-baed-98ceb56dd2f6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"9785faf1-c06c-5427-a28e-5dbca4aebb36.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"15efcb5d-f61a-54bb-b2e0-cbfb7abffda2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania dokładnie <img src=\"1a5d1ddc-1095-511d-a98c-4d8199d3cd7f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"4a31d3db-893f-5971-a5ce-6bac3aa0d464.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"888b88d0-6cec-501c-8610-b1d7e6e077bd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"ab937fb8-0d04-523a-a2c3-0825101337af.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"b3a1f38e-d192-5904-bcd8-ded9d2b43597.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"7f965600-a0b7-50da-9ac0-39cdd83ab75f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"121d9154-5548-52d7-ae07-6dae8dac9cfe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"3b05be3e-1662-59e6-88d0-1a47417bbc47.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"d20c5f77-32e0-575b-ac83-a3d782d4212a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"1a3b137e-01d5-5ee9-89bb-1aeabd65abe3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1525,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Po pierwszych <img src=\"94d9b1db-e3b2-52f4-8867-1520ae603705.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"46522a01-3527-5339-9b5f-e3d0f570cea5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"a110c4d6-d4af-57cc-b860-f66b97b9a47b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"25509785-faef-5a15-b8ec-40833e6023a5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"b1caff35-b977-55b0-af66-0e1c6f27df07.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"c11fc3db-7988-5b62-9edb-2185eaa4bd82.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"3f21689a-c291-52c0-ac5a-d5b0b662e75c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"820ad806-328f-59ee-b547-68ad9960786e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"32a323de-65b3-5197-9540-210ce0ce3078.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"ec035d00-a1e5-5b68-b31b-97c99db8bda2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"433c976f-8451-517c-aaea-f31b6b1ea6a5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"12e0d8ae-e9be-5a9d-a509-8f82c45cbfc4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"2a121c0a-d27c-5336-9655-f19598426395.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"4704f53b-5cf4-5f4e-9cb8-6a49f607bbf2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1524,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"f7b7f73c-477a-5ea2-953a-8f0da8d03e76.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie wysokości drzewa wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"4e202024-2d3a-59b7-8c54-ce6a0bfd414d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku wyskokść drzewa wywołań rekurencyjnych algorytmu QuickSort jest równa dokładnie wysokości drzewa wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"d6daa4cc-a2f4-5e99-ad3f-82088aa4974e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"f45a8498-dd84-5520-9f93-9cd203b8fec9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"a8b47508-793a-5709-9205-e1c7410b646e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"a23e22d1-4516-5a7b-a1d5-e21b1b7fbd18.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"c656d70c-1a11-5e76-b6dd-9fa72519556d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1523,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"3fb4523d-933d-5fda-be57-bd867e8f7fe3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"2240f6d0-5b35-5e4c-a052-463bd221b1f5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"28154500-56d6-5419-b7ec-6d7274be58b8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"b2fa95ec-0a12-5d9c-bc1d-960b68b97495.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"43101f52-df4d-5ad7-99e6-87e5bf6a0820.gif\" border=\"0\\\" data-zdaj-se=\"true\"> operacjach przestawień elementów tablicy <img src=\"cc0f7bd7-807f-5bf2-b66c-4d35a7a7645d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jej postać jest następująca: <img src=\"e5c4fd6f-1bf0-5f37-9f70-ebd9787e35eb.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"c1eabe48-15dc-5b64-9286-f67fc4b88f04.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"e102da3a-cc6a-52dd-bc03-933b3fe8a4e3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"c7077943-8ab0-5d44-b2ef-170e9d4bd174.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"1b5caf76-d0fe-5ae6-9ac5-d855bebfbb99.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"aa6b03f3-93dc-5659-a1a4-9d52bf282613.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"b69c12e8-82f7-5ef2-9a99-70babca11dba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"1b2911fe-a74c-5b0d-addc-09fdbdc6cc49.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"2ee12744-ff5b-519e-ad6d-0c2bba71a818.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1522,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Argumentem <img src=\"16f0fd6e-976f-5634-b2f7-ffee1e7f891d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"b407df65-f852-5cef-bc90-c9c57c6fb36b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"c707e1af-482f-5aa3-9023-6a3162adb570.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        },
        {
          "answer": "Argumentem <img src=\"8af74e3c-7133-52cf-b237-289f60e0dd95.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"b256a7cd-8189-553b-9908-d911d2cf63f1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"6c7bd6fa-799c-51a2-b29d-48602053c5ce.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest większa od liczby wykonań tego algorytmu, gdy zamiast indeksu elementu <img src=\"f9ad64c4-475f-5459-aae7-fac055f23cab.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości będziemy wyszukiwali indeksu elementu <img src=\"c54dedfe-5260-54ea-9631-ee304622d8d0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"d389327a-83a9-5cd4-a38f-92bff3f64d03.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"a7341148-5ef4-501b-acaf-fef34a9e8af4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"e55b4362-33ba-50de-bffc-6e50d9060630.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm InsertionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"ce8b5fae-aaca-5fc3-9ca1-25c61f6409b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1521,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"d558db55-337a-5aa4-b7f3-870e3b4b84a1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"1428b32a-4d61-56a7-ad84-1ca7e07813d1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"07fcab61-cee9-5d23-8190-8b53a87f87a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"f90b1924-2ae2-52f5-89fd-eb09f4ef3d85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"f5a3ea7c-eb96-5bb3-b405-74c8eedfa584.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"0401186d-fdae-5b71-989e-7a0c6ef23508.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"601ed39a-e9f8-50c2-bd75-20e6398128cd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"46f07540-fa5d-558f-9446-a7d0e75322e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"003b84d1-aa9d-5cc9-8e7d-a08d089e6eb9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"1fe770d3-0d44-5524-90d3-e18480239395.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów tablicy <img src=\"84b2ccce-e944-57c9-94c8-bde4fb1e5b2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"eac0345a-62ee-5e43-8863-312ca6e5a7e1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"1dd4ac8a-463b-5f66-8684-1fb9025989fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"95c79032-01c3-5690-9ab5-3d76cd1e6777.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"62df6792-5103-58c7-a98a-50631348dc78.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm SelectionSort. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między różnymi indeksami tablicy <img src=\"a729c86f-0b85-5f1a-b453-59e00fd7dd7c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1520,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"8dd3bd7a-60ab-5f9b-ad97-3919af18ee40.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"e52546b3-c34e-503a-9e6c-0b491737b8b5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"808081e1-0bdd-5ca2-bf9f-2ad2b614a2a0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"963a8bcd-1dca-5109-acc7-e9ca9cbe8a74.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"3386dd75-e282-5cf4-9efe-883b548bffaa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracjach pętli zewnętrznej algorytmu postać tablicy <img src=\"adb556be-1ff9-5833-8b58-ad65952fbb72.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"c1d97eac-220b-554d-97fa-ff14863bdadb.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wykonanie pierwszych <img src=\"4801c247-29b0-5f67-9720-c880a10e3efa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji pętli zewnętrznej algorytmu wymaga wykonania o co najwyżej <img src=\"54f2ae23-eb9d-5b96-a064-58766b1ac7ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przestawień elementów tablicy <img src=\"bf9ceed3-309a-5d03-9e66-831a11055d51.gif\" border=\"0\\\" data-zdaj-se=\"true\"> mniej niż w przypadku wykonania pierwszych <img src=\"246550f4-956a-5080-bb60-e5830839e81f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> iteracji rozważanego algorytmu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"c66fa45b-1333-5654-9e3c-8a48570512c1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"c2f43320-7cb2-515a-b1d3-4bdcf17ecb1f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"afe90ed5-3a10-5117-8e1d-2c7285e06e06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm QuickSort w implementacji rekurencyjnej, z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1519,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie <img src=\"ee4dddc0-2328-5cfc-9946-df40a447b358.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań rekurencyjnych algorytmu QuickSort jest równa dokładnie liczbie wywołań rekurencyjnych rozważanego algorytmu dla danych wejściowych <img src=\"c7ae24c6-6a07-57b3-9180-9949f709d056.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie liczbie wykonań rozważanego algorytmu dla danych wejściowych <img src=\"798afd5f-0bac-57ff-9daf-9bfcae4cdcb3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"5007473d-03c5-5476-8805-816b4115701e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowaną od <img src=\"8d64b008-4707-5d4e-a2ab-15130a0d07eb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , reprezentującą <img src=\"4ba0e1d7-5637-5dd9-aaed-a9ddb41fa7bb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"b89d33c4-5205-5796-a2d3-fe5a4dc731ad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do rozdzielenia elementów owej tablicy względem mediany stosujemy algorytm Partition. Które z poniższych zdań jest prawdziwe? Uwaga! Przy zliczaniu przestawień elementów bierzemy pod uwagę jedynie transpozycje między elementami tablicy o różnych indeksach.",
      "id": 1518,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykonanie pierwszych <img src=\"35301b14-e853-5fe5-8163-1114c1dcbbd3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji przestawień elementów tablicy <img src=\"e49cf5ec-0595-5c65-b47d-347cf0ba4abd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wymaga wykonania o co najwyżej <img src=\"24522526-c882-5b27-96ff-61419545e8cb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> porównań elementów mniej niż w przypadku wykonania pierwszych <img src=\"b4488387-be28-5a26-b0b9-f046f9d3d03e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacji rozważanego typu",
          "correct": true
        },
        {
          "answer": "Po pierwszych <img src=\"edfed259-306d-5488-9978-ac6d4fb44620.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacjach przestawień elementów tablicy <img src=\"76c1bc72-be77-5eaf-a912-2c5b9c001bcd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> lewy wskaźnik wykorzystywany w rozważanym algorytmie, wskazuje na element tablicy <img src=\"683dd526-d43f-520a-8959-155be5cda00f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> o indeksie <img src=\"973d7469-4928-5bc6-b1dd-c0b40f32b036.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po pierwszych <img src=\"aead1170-9a0a-5dd1-8c4f-633f53f4539f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ech operacjach przestawień elementów tablicy <img src=\"483851d4-3203-5274-be28-04bba96a87ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> lewy wskaźnik wykorzystywany w rozważanym algorytmie, wskazuje na element tablicy <img src=\"43f9fb85-1a32-502d-b28f-4a9ac469bfca.gif\" border=\"0\\\" data-zdaj-se=\"true\"> o indeksie <img src=\"7a07dba8-4dfe-55b1-a8cc-8ce6f16feb1a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"85555fa4-4ada-5344-a239-e5253f05e9db.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"cb1b99f7-67b9-54f0-bed5-30ffa9eea82a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg różnych liczb naturalnych: <img src=\"4ce57ef7-3921-53d0-a15f-7df5ebde5266.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . W owej tablicy wyszukujemy indeksu elementu <img src=\"2be0a2da-ac4a-58bd-9488-36b7b1c1611f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości za pomocą algorytmu Hoare&amp;aposa z procedurą podziału zgodną z metodą Partition. Które z poniższych zdań jest prawdziwe?",
      "id": 1517,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie <img src=\"b9879364-528e-589f-bb9b-92a6cb4f4745.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "W rozważanym przypadku liczba wykonanań algorytmu Partition jest równa dokładnie <img src=\"ccd3327c-0f5c-508a-b91e-a5d5e266747b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Argumentem <img src=\"5c774e77-5026-5f51-a2ec-605290cf8da5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go wykonania algorytmu Partition jest tablica postaci: <img src=\"db9a2743-faf4-5c40-8c50-26ee12f9ad06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , w której szukamy indeksu elementu <img src=\"a7649e69-acac-5a4e-9953-fe386ffeec1e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -go co do wielkości",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Dany jest <img src=\"617ee8bf-b968-502d-8184-986001df995e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> elementowy ciąg <img src=\"a443de94-379b-59d6-9ac1-8c3090f550d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> parami różnych elementów. Jaki jest koszt (mierzony liczba wykonanych porównań elementów) następującego algorytmu&nbsp; <img src=\"bdfbed75-09ab-5a00-b85b-68d41b2dfdfb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> &nbsp;wyszukiwania mediany tego ciągu.<br>int i:=1;while (i &lt; n+1) do<br>&nbsp;&nbsp;&nbsp; znajdz_i_usun_minimum_ciagu(E);&nbsp;&nbsp;&nbsp; znajdz_i_usun_maksimum_ciagu(E);<br>&nbsp;&nbsp;&nbsp; i:=i+1;od<br>Zakładamy, że usuwanie elementów zmniejsza liczbę elementów ciągu i nie wymaga dodatkowych porównań.",
      "id": 1516,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"14546f7e-7c48-552c-9d72-86e59ab758de.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"353f8d24-1395-55e7-9e3e-358bf0e929e3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"57db0169-cfde-50ac-98d4-947e52f15097.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"d4df08c6-9cf8-5e46-bd35-d2989462a63c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"8a010adc-85db-59b3-9fa6-3b1c57c3255d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy rosnący ciąg różnych liczb naturalnych: <img src=\"042a1053-0ad3-548d-96cc-ed23c85925f7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Dla owej tablicy i liczby naturalnej <img src=\"c1a6aa03-cc6a-5948-8245-fe60dbdd0930.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm wyszukiwania binarnego BinSearch. Które z poniższych zdań jest prawdziwe? Uwaga! Zakładamy, że tablica <img src=\"e2f38af2-183c-5d85-8aad-72c47f16270c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> indeksowana jest liczbami od <img src=\"ec6982de-e5a8-5257-8f6e-5f0045b3c8bf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"9c9bd9ea-b1c8-533f-902c-bee3cc100221.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1515,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejne wartości indeksów <img src=\"3048fc30-ef6c-5fe5-94ef-ad26a2b9d153.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wyznaczane ze wzoru <img src=\"0d263366-e75a-5a23-9eb7-f6a3aa502257.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania rozważanego algorytmu tworzą następujący ciąg liczb: <img src=\"628cdc4f-b6dd-5450-9666-662c340404d5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Łączna liczba operacji porównań elementów tablicy <img src=\"3990eb7f-ea8a-5ada-bb40-ff780df716a4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wyszukiwanym elementem <img src=\"987fb4ab-d853-5871-a956-23de4db51b23.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie liczbie analogicznych operacji w przypadku wyszukiwania indeksu elementu <img src=\"c910a909-3d6a-53db-abd2-49b09b78e74f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w tablicy <img src=\"44fd6506-e182-58b5-9c2c-023d62a46b09.gif\" border=\"0\\\" data-zdaj-se=\"true\"> przy zastosowaniu tego samego algorytmu",
          "correct": true
        },
        {
          "answer": "Kolejne wartości indeksów <img src=\"ea9533d0-2e9e-54e8-bbbc-992503a2eac6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wyznaczane ze wzoru <img src=\"ef1aa465-48e1-5a80-bbcc-6d6249b39b2a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania rozważanego algorytmu tworzą następujący ciąg liczb: <img src=\"4a2db4f2-41b5-50b8-b96f-a5b78cf22bb4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej <img src=\"0bf9fcaa-0805-57a2-9826-2bda32b06de9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1511,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"9902c7e0-bd31-5385-b1b2-5c297c0bfed0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"02457e11-bd05-5b4a-8690-7979595f9926.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"bc12e234-bcf9-5216-b40b-f784d2f329d0.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej <img src=\"7d4629fa-7486-58c7-9d3d-21f3004ec67d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1512,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Ciąg funkcji <img src=\"acc37ceb-17a0-5152-b113-63c7b458173b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest ciągiem ściśle malejącym względem ich rzędów",
          "correct": true
        },
        {
          "answer": "<img src=\"a624d3aa-e75c-5f21-b1f5-905b9130cc12.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"3388dd77-0db9-5039-ac29-4842496388d2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm <img src=\"52ec6ab2-1802-5302-83c3-6409942ab6d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"><br>real&nbsp;i:=0, s:=0;<br>while (i &lt; n) do<br>&nbsp;&nbsp;&nbsp; i:=i+1;&nbsp;&nbsp;&nbsp; s:=s+x;<br>od<br>return s;<br>w strukturze liczb naturalnych. Wskaż zdania prawdziwe.",
      "id": 1513,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Dla dowolnych wartości&nbsp;argumentów wywołania&nbsp; <img src=\"477313e5-0cdb-5d97-9fcc-a553b1b4e4e5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"175e05a6-1417-5437-b400-4ec128ababc8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , algorytm&nbsp;zatrzymuje się, a po jego wykonaniu <img src=\"da49c7ab-260c-59a3-a732-3b23bb00104b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Warunkiem koniecznym na to by algorytm się zatrzymał jest by <img src=\"74eda842-9a79-5520-9c9f-b023afe81ac3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> było liczbą naturalną",
          "correct": false
        },
        {
          "answer": "Algorytm <img src=\"d2d6df4f-aecc-58f1-8fc9-8bf63681ee3d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest całkowicie poprawny ze względu na warunek początkowy <img src=\"b7d184b3-ffb8-522f-a5cc-50e57d86def7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i warunek końcowy <img src=\"9404ef04-e00f-572d-8c34-665a3f5a64a5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech będzie dana&nbsp;tablica <img src=\"3013d4a0-7657-53f7-b39a-d8a59d7470b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> liczb rzeczywistych <img src=\"012f378a-1bef-5b72-b946-5b6eca0703dc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i pewna liczba <img src=\"174dc995-e872-557d-9fa8-4ae106d40433.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Która z wymienionych formuł jest niezmiennikiem pętli w następującym algorytmie <img src=\"a8ddc695-4ec4-5045-8df7-4266b4324e51.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?int i:=0, j:=0;<br>while (i &lt; n) do&nbsp;&nbsp;&nbsp; if (A[i+1]=x) then j:=j+1; fi<br>&nbsp;&nbsp;&nbsp; i:=i+1;od<br>return j;<br>",
      "id": 1514,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"bcb6dd5f-1465-5fb7-840e-ef8940f8e929.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"e28db354-ecf1-5a9e-86d8-54162b019256.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"b9a1e04a-c4da-5c30-8e83-690c5a0aa431.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Jaki jest maksymalny rozmiar zadania, które można rozwiązać algorytmem o złożoności <img src=\"5fc3ca60-2715-57f7-a0e3-71c40e6769d4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , gdzie <img src=\"2816c13e-b3b7-5058-bbad-f1bea5c83a9b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest rozmiarem danych wejściowych,&nbsp;w czasie <img src=\"8a3873f8-2305-5498-967d-4acef0d408f3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> min., jeżeli wykonanie zadania o rozmiarze <img src=\"469f88cc-a541-5cc8-84c5-1b62f78b74c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> zajmuje <img src=\"542077c5-c44c-5c2a-ac6d-9252e506135d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> sek.?",
      "id": 1509,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"c9a70a43-069f-5bbd-b3ae-c66689b34ba9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Powyższe dane pozwalają sformułować jednoznaczną odpowiedź",
          "correct": true
        },
        {
          "answer": "<img src=\"4c399411-d553-5ed6-96bb-9cc3a7b193d1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Złożoność&nbsp;czasowa algorytmu <img src=\"3365016e-adb3-53b4-9f9f-f5de18286bb4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest wielomianowa względem rozmiaru danych wejściowych. Jaka może być postać funkcji&nbsp;złożoności <img src=\"b957c407-caa2-58be-a2ba-55406e58bcac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ?",
      "id": 1510,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"cc623996-75a4-592a-98ac-1b3268b4603c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"49275386-80e3-5649-ac86-81be8b42d97c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"2363cd43-efcb-5417-bd7f-4245ef2681eb.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Wskaż funkcje, które asymptotycznie można oszacować z góry przez funkcję <img src=\"835a94a6-9dc7-5949-bfaa-113a9e6ef07f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .",
      "id": 1507,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"0003273f-ae46-5887-850e-4a9fea17c05a.gif\" border=\"0\\\" data-zdaj-se=\"true\">, dla <img src=\"15dd6477-d8ba-53eb-9101-42e11697a7cd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"b65a2dd1-bb69-5a89-a2d7-5c6f76decc20.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"139f952a-f4b0-5b19-bdc4-73acecb00bf3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Niech <img src=\"a12eae0f-c1c4-58f7-9b5a-7650b14c1a7c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych oszacowań jest prawdziwe?",
      "id": 1508,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"231c7831-5518-5552-8389-513969550522.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"bad918eb-b75e-5533-bdde-ab503439c822.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"0c5d7681-9920-5617-a187-3b8e3b1c2b99.gif\" border=\"0\\\" data-zdaj-se=\"true\">, dla <img src=\"000a72f6-e54b-5dca-8147-09aacb89b79f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"461118a9-5ef7-596a-80ea-d8adaa8f3d9d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu BST powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"1e5cbd77-5ca8-5169-a5c6-4702356e29b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"6b970247-0e21-572d-8494-7e1de564d1cd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"910f8d44-c303-5728-b396-6e5027ee9157.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"fc6c3f2f-cd1e-595b-a201-d56c61af33dc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"2e8ccbeb-3f82-52f2-ad8e-ce501bffbd09.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1690,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"07427287-8dbe-5c04-ae8f-f7d2f151b7b8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PreOrder tworzą ciąg: <img src=\"b69e6950-aa7f-5c40-b277-2927fb0197c2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"9ab24cd1-093d-5e55-99b4-562cc5c97a81.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"700a4b8c-07b0-56fe-94bb-881dd82f849c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"e8f22864-ae66-5654-8385-743e8f389f2c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"803a1fda-32b9-5040-8905-75c9e6e63973.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy wykonanie algorytmu obliczania wartości poprawnie i w pełni nawiasowanego wyrażenia arytmetycznego, przy użyciu dwóch stosów: stosu argumentów i stosu operatorów. Wyrażenie wejściowe ma postać <img src=\"f1d65db6-2fdd-5a9c-bf32-13c5f96c151b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1691,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji POP na stosie argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"59fda2f0-b6bc-5f14-8b05-cf71c34fb832.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa dokładnie <img src=\"ce09126f-5635-57de-9fc9-5c35e168078e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu argumentów w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu argumentów, w trakcie wykonania rozważnego algorytmu dla wyrażenia wejściowego <img src=\"2e3f5875-2306-5012-8ca0-cefcbd8ee1d9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy początkowo pustą strukturę kolejki <img src=\"3099725b-2d6a-5e06-98b4-22c7a044af4a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , do której wstawiono elementy: <img src=\"a9f8bec8-eef2-57f8-9289-b295e9750457.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Następnie na strukturze <img src=\"d77964e1-1520-598d-90bd-d628e9aab7c0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonano kolejno ciąg operacji: <img src=\"c859644d-ee84-548f-a7fa-044768851baf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a390b49a-5f77-5103-a3da-7deba71aaa5d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3e241884-9c13-56cd-af06-00fa26b8b46a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"18ea8e13-92ab-5523-8727-1885c0e6c800.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4cd28937-8df1-5ac2-a82c-baac5ef79763.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"faa213bc-0f42-51da-b678-7ad7754d4bdd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9742efba-fcf5-5eb2-80f8-aa1e5dd4d200.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"81b1fbf2-3f60-50a0-a127-7553ce532e00.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1692,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"31ff319d-dc4c-551b-9f24-731f22207573.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Ostateczna długość kolejki <img src=\"d7eaeb7c-bcf3-5ece-8474-4d12aac12a17.gif\" border=\"0\\\" data-zdaj-se=\"true\"> tuż po wykonaniu przedstawionego ciągu operacji jest taka sama jak w przypadku wykonania następującego ciągu operacji: <img src=\"ce1dd0a9-73d0-5098-a3d2-a5f3984bbf8e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"cd85ffb7-36de-5265-aa62-8c7339014e4e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4e82cfea-aeb6-5890-a12a-636c1bdd36b0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"94262740-16b2-5fa9-8e4c-7e4130c07ebe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"50a95b7f-6a86-54a3-be01-d72939086ee7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"abf38aa3-3600-5a39-94ca-f39113125935.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"354bfb86-4c49-59a6-b756-bdb22a0c2091.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6b339eb7-4cde-5fee-81de-069b90ffdff8.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "<img src=\"f860a86a-5737-54a9-aedb-93e302d83137.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy tablicę <img src=\"6b78d854-2083-5b8a-8ef0-a219abcb22cd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> reprezentującą <img src=\"725bf7ae-3faa-5d94-8b02-febfe74b28a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -elementowy ciąg <img src=\"72e6f6fa-9ff2-5865-9ae7-6fb09204bd10.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -cyfrowych liczb naturalnych: <img src=\"4facb142-5b71-5bcc-8d73-ebd9a9e9b208.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Do posortowania owej tablicy stosujemy algorytm RadixSort zaimplementowany przy użyciu kolejek. Które z poniższych zdań jest prawdziwe?",
      "id": 1693,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba operacji FIRST we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"4df39923-0e62-5f91-9b3b-d0b40f0855b7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Tuż po sortowaniu liczb względem cyfr na <img src=\"1cb24fc8-d3d9-5f85-ac32-8ceb5553c569.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -ej pozycji dziesiętnej (liczonej od prawej do lewej strony), zawartość tablicy <img src=\"5c127587-a5a3-569a-bc75-c93f3d0e6c6d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest następująca: <img src=\"ea23d70f-77f4-5ce7-aba5-bda3af562825.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna długość dowolnej kolejki (tj. maksymalna liczba jednocześnie przechowywanych elementów) w trakcie wykonania rozważanego algorytmu jest równa dokładnie <img src=\"fcb8a8f0-ff7d-52d7-8dcd-741b205071e4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy pełne drzewo binarne <img src=\"193b7246-dd7a-5066-9f37-a05465c82303.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wysokości <img src=\"8eaee384-d998-5db0-b8f2-780ef53d09d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?",
      "id": 1694,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"b1cdc7c4-cc5f-5d7a-9a93-9ab339f003d7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PreOrder tworzą ciąg <img src=\"b8e1bd2e-884e-59e0-ab6f-865950d2b354.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności PostOrder tworzą ciąg: <img src=\"8725e74b-9acf-55ed-866d-bc7444cc4abd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"a082f2d1-a093-5e7b-ac40-9a3fb0d80738.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"ddaed6fa-0162-5be1-840d-6a1b7550cb0e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"7f24f1b1-aa11-59a5-9b55-5edbc0e30c8f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Jeżeli wierzchołki drzewa <img src=\"ef06679b-8468-5221-879f-146560ce33bd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w kolejności PostOrder tworzą ciąg <img src=\"04b9e4cc-020e-5395-95cc-827097f16032.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , to w kolejności InOrder tworzą ciąg: <img src=\"06ab3119-68c8-547c-9c11-47fce887678d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"127049bc-6595-5214-8529-33ba92c96083.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"4bbd18f6-9020-5ca3-83a9-262524a23e78.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"07bf6434-41f9-5684-b131-6783dfb4e912.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"4784a184-cbe6-5e66-8cae-8080e2f140f1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4ddfaec7-1f5b-5021-a868-7ae51676f42a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b46c2f49-f88e-5682-bf2b-5321c31a0316.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9364a740-c9bc-5130-852c-2ecbf337012b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"be7e3e84-f10f-590a-9f51-7c5bb554816c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"170c6deb-9c1e-55e2-828b-d75e92bcf159.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"94cbb202-2158-5f73-a9b6-c77527bc00f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Wierzchołki grafu <img src=\"37c16444-274b-5559-8230-b9c01e229930.gif\" border=\"0\\\" data-zdaj-se=\"true\"> odwiedzamy w kolejności DFS z wierzchołka startowego <img src=\"290ef2ec-3bee-500f-bb4e-37401e487ea7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie DFS wierzchołki grafu umieszczamy na stosie pomocniczym w kolejności malejących wartości etykiet.<img src=\"304500e4-ebb5-5773-a424-68fbe340b1c3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1695,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu pomocniczego w trakcie wykonania algorytmu jest równa co najwyżej maksymalnej wysokości stosu pomocniczego, w trakacie wykonania rozważnego algorytmu dla grafu <img src=\"ca29f6d5-ad84-53ef-b47c-fc95ec4ce886.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"b7e2225a-c234-587f-813a-0fe018174678.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego w trakcie wykonania algorytmu DFS jest równa dokładnie <img src=\"cd6225d8-7566-5e74-b228-95fd1370cd9c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba operacji POP w stosie pomocniczym w trakcie wykonania algorytmu DFS jest równa dokładnie <img src=\"fd782646-3ca1-534d-884d-246677fb78a6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"010bee9e-5363-5d65-b704-65532759f969.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"86960d66-df5c-5b2d-b558-a9f93119d230.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Które z poniższych zdań jest prawdziwe?",
      "id": 1696,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"c013b200-ff67-5074-b857-516c551ba8f2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności PostOrder tworzą ciąg: <img src=\"76451fcb-f33b-5a0b-91de-2d0b8f763e25.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Łączna liczba rotacji podwójnych w lewo-prawo wykonanych w trakcie budowy drzewa <img src=\"771f22fe-f565-5aa8-aa2d-438343ebbdba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"26861dd4-486a-5d6c-9ef9-c7281ec9b813.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wysokość drzewa <img src=\"62760b82-2885-5595-b7fd-bf584d6c3a06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"d344f095-f083-5d9e-8250-920d2bd9d39b.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy drzewo <img src=\"2df0c041-5f6d-5396-8fcd-ba9555c400b9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu AVL powstałe na skutek kolejnego wstawiania elementów ciągu <img src=\"f85ecf1f-a38b-5428-8b9c-157c4f0156ea.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do początkowo pustej struktury (przy użyciu operacji INSERT). Następnie z drzewa <img src=\"9b40361a-cb10-594e-9913-e24eb328980b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> usuwamy wierzchołki z etykietami <img src=\"e90cf2fb-4a7a-5420-a862-2929979e0743.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe?. Uwaga! W razie konieczności w operacji DELETE w miejsce usuwanego wierzchołka wstawiamy wierzchołek bezpośrednio poprzedni (drzewo <img src=\"1ca277ee-0872-56c4-a28e-4b352d2859c2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) albo następny (drzewo <img src=\"ed44a52c-381c-5b9b-b6db-9f6fe2eebb12.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ) względem porządku etykiet.",
      "id": 1697,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba wierzchołków wewnętrznych drzewa <img src=\"f555db48-d0aa-594d-9065-8e09eefe8fc5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"2b63b710-04c5-55a3-b932-691e73a6c646.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Wysokość drzewa <img src=\"ac72fb56-e787-5723-83f3-429ab6719774.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"ffb8a695-dbc5-5096-9d1e-e0decf2a551d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa <img src=\"c34b7573-b501-5230-b485-5a0ac8ab47ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"415c4fdc-85bc-5260-8f39-423f595ed404.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Które z wymienionych zdań jest prawdziwe?",
      "id": 1698,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Minimalna liczba liści w drzewie AVL o wysokości <img src=\"a9349d27-ba8c-5c13-8a13-51e0b1cb0af0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wynosi <img src=\"a69bec45-50a1-5d56-9f15-928642c6cdef.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Koszt wyszukania etykiety minimalnej w drzewie AVL jest zawsze&nbsp;tego samego rzędu co koszt wyszukania etykiety maksymalnej",
          "correct": true
        },
        {
          "answer": "Wstawienie do drzewa AVL nowej etykiety&nbsp;zawsze powoduje wykonanie co&nbsp;najwyżej jednej&nbsp;co najwyżej podwójnej rotacji",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"37d6fb12-85d8-526c-9aae-9e632e6fccd7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"2871f9ff-01dc-553a-8235-424009b9d6c4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"6817527a-16d9-5d20-95ed-b2634bab7ecd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Które z poniższych zdań jest prawdziwe?",
      "id": 1699,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jeżeli zamiast drzewa binarnego do implementacji kopca binarnego <img src=\"84b1abd4-eb6e-5bb7-b8d6-dcd40a47fa33.gif\" border=\"0\\\" data-zdaj-se=\"true\"> użyjemy tablicy, to jej finalna postać będzie następująca: <img src=\"b06e960d-1b9e-5096-a8c5-fe659d921a78.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba operacji przestawień elementów kopca wykonanych w trakcie jego budowy jest równa co najwyżej <img src=\"9dcb713d-c291-5365-9108-bd7d66df14fd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych drzewa-kopca <img src=\"ead078a3-e6a4-549f-aa8e-75c876c3fdc1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"e29cc9ef-fb2a-5b14-9559-f1425e4a0f2a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Ile maksymalnie elementów można jeszcze umieścić w kopcu, w którym jest już <img src=\"bc0617a9-92f0-5154-9cc0-0ed8eb443eaf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wierzchołków, tak by nie zwiększyć jego wysokości?",
      "id": 1700,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<img src=\"3fb8c814-d4d8-5e51-8f72-bbbc24d5e87c.gif\" border=\"0\\\" data-zdaj-se=\"true\">, gdy <img src=\"dc33d4ef-61e0-594c-ae57-74404aa88eca.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "<img src=\"a12c3847-44b1-5c1c-a0d8-11cae8b685dd.gif\" border=\"0\\\" data-zdaj-se=\"true\">, gdy <img src=\"f6017054-7707-517b-beb6-87d4e033b386.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Tyle samo dla <img src=\"ba407d9f-9dbb-5203-8299-c63a5d6533ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , co dla <img src=\"038bc1e8-715c-5fb4-934c-6866aef567d9.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy kopiec binarny <img src=\"68b4cb23-559c-55fd-8ce4-7d57b1998307.gif\" border=\"0\\\" data-zdaj-se=\"true\"> typu min zaimplementowany w drzewie binarnym. Kopiec <img src=\"a0aa74ce-2e54-5912-a0e8-18b59b2fb346.gif\" border=\"0\\\" data-zdaj-se=\"true\"> konstruujemy z elementów ciągu <img src=\"a94b68c7-53e0-5573-a116-049916f38c9f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosując szybki algorytm budowy kopca HeapConstruct. Następnie w kopcu <img src=\"64ad094b-4f4e-529d-ba7e-273e2316fb0a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wykonujem <img src=\"94592e10-dc4f-5eb3-81da-34bea1f34683.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -krotnie operaję DELMIN. Które z poniższych zdań jest prawdziwe?",
      "id": 1701,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa-kopca <img src=\"79230c1a-52f7-501c-abad-6a0465e4290b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"a84b270a-70db-55b2-9bfd-86d2772cdb0e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"1a027c3a-6dda-528f-8c2e-32d1d5a7992f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"bed55066-3537-5343-a76b-a6f837176f3f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Etykiety wierzchołków drzewa-kopca <img src=\"de7da97d-2da8-52ff-a6af-9d750166c642.gif\" border=\"0\\\" data-zdaj-se=\"true\"> wypisane w kolejności InOrder tworzą ciąg: <img src=\"4208c839-f11f-5916-9636-3a3267203080.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"ac0731d8-1764-5bcf-bb26-53baca16bf27.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"89978686-d3b1-5a89-8fa8-fe6351f26c95.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"ba75a1a5-adaa-5cc2-acc2-3e32e5a0ba1c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"78748ed5-98bf-59df-bce8-23bab2c7f98a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b9c96e61-aa95-537a-8636-17f407993ee0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"86841174-1201-51ca-bc6a-9d065620860a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8a5650ae-9d8a-5780-a0eb-fe98d7a93fc7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"67559d02-0ee4-5b38-a2a1-da95d114a5b5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"405d7503-9884-5ad6-beb5-1700f8e599a8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a8b542ac-485f-5c3e-b95c-cd8a7396a47c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a45c2a84-45a0-5af6-92e8-8d906ec89b5a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0b50a4cb-001c-5613-b885-0d5eeef7e1fb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"166b40c1-2f11-5282-be66-1d6afd6d713f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"9acd4c5a-22c3-543e-8b85-b53fee54d207.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"26c2af4f-ac08-5c98-b6b5-65f67a5932b4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"d91db440-9dad-5f3d-9849-0e934f9b8147.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1702,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba chromatyczna <img src=\"1cf867b4-d4d7-5bb0-80b2-fac22536f06a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"ebd79523-7841-524a-9f74-806a08f019ae.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"2e673386-547d-5107-b855-b0c7669ee6fd.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"77403da1-67d6-55c3-ab47-8527e1076c4d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany taki sam kolor jak wierzchołek <img src=\"f27329bd-87d5-5a12-8769-6add0f588323.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba chromatyczna <img src=\"5cd7e5ba-fdbe-540d-bc28-6451fa61629b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"19f8a9d1-71a8-5eb6-a9e4-dafbdb6e797c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"9d646c1c-404b-53e7-acfd-0f5703310cea.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"0144324d-24ac-5666-80a5-25d253c42d85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"e6059325-ec01-5ea2-9a5c-8cb91ca495d9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"e60a5cd3-9f3d-530e-9b62-af390ca5923c.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"797b091a-ac1a-5221-828f-2e5c81f4eb7d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"187265d4-5502-53aa-8659-42fec4267332.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"72b9e9e0-87c2-50e2-885c-f3f065faf7a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"7d8a1f05-9114-5b1e-9b4b-140d26e49b05.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"285da762-8ab3-5096-9584-d24995b0a941.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"95aea1d3-4845-59fc-877d-fe025691ecbb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4ae4e17f-a6d4-5b85-953b-ce25a8fbd137.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"075210f5-1ec9-53c5-b4b0-1e12ec3f5cf2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"0a78682a-eef2-583a-ba89-a79e34dcb0e7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"f0a7d32b-aa3f-51e2-8b14-a1286dedbbac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"03eb2b21-c95a-5bc5-b51c-9f6c564372d3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1703,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Suma wag krawędzi tworzących drzewo najkrótszych ścieżek będące rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"d2ff1859-329a-5107-b8ca-37f910d37f29.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych w drzewie najkrótszych ścieżek będącym rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"4a691e72-61cb-5c8a-8a31-10f22df6e5ac.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych w drzewie najkrótszych ścieżek będącym rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"37f8bb3c-4679-5853-a496-c2f0aeb0f273.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"f32ddabc-307b-5514-a813-d9e8acd4c7a6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"cfbe14a3-96c5-537f-a34c-1362a3f3a8da.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"329c809e-8452-5f86-a0f8-71b1b6bb5f41.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"d939c2b8-2867-5e8c-917b-0ab374070d78.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"dc3b126d-7e10-5492-914c-67c13aa95a29.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"f39d97aa-54aa-52c0-9418-a948d71fbc06.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1704,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Krawędź <img src=\"d89756c5-52fa-5549-bd7a-9cfbe0757b76.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"3d02dce2-7fb8-5917-92b6-9abbf333454d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"969f3c0e-8f82-5b8e-97a7-dd4322839cfd.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"8d6b57c8-e474-5113-80d3-914d8865be3c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"1eda5c50-dbc4-5a73-840a-ff0e23121279.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"0df92f65-69ce-525b-bf42-4a2bee43a543.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"abcadb54-509c-50b9-b84e-967b0e494155.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"679da248-71da-5a5e-88f0-9f1866995b8d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"3beacbb1-2c26-51d6-ad1e-8c5d46f549a7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"d8eccd5d-3538-54fe-888b-2a0db759362b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a9461fc3-d481-559e-99d1-434adcf761b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b85c211b-2070-5391-84c1-60b1a8189a9d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"da22e200-0799-557c-8e32-fdb87faa630b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8077f2e9-1c06-5a40-a4a1-97a3c6ea00e2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4a64dac4-7568-5eb8-9342-8d0801e79a81.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"95e91ed0-33e1-501c-bcfd-17683694a1fc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3b3bdb6c-2677-5d0e-afcb-99d8868494c9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"449b5cda-d3ab-595b-af36-6fe61f87807b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"30ce6154-b868-5206-b404-842d09a5d5a6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"dba9e854-65d9-5e36-afeb-10f39bcbf88a.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1705,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność przyłączania wierzchołków do minimalnego drzewa rozpinającego grafu <img src=\"3863812b-089b-5c42-9a67-a30b4e9d9632.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu Prima jest następująca: <img src=\"79bf2033-8d1c-51aa-a0a5-95fed811216f.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"dc41451c-b915-52ca-96a2-db444fa401f2.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wysokość minimalego drzewa rozpinającego będącego rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"8f060fc0-9df7-582b-a01a-3f24bfccba01.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"cbd9c39c-3c4d-5615-b43e-bbaff9205403.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"0bacb5d5-1cfb-533a-9542-9282fe1c4705.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"7bb7e6d5-106b-57c0-a240-9e3e5ddb0ab7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"efc6de18-d7b8-57d1-8c49-22bc905d2ff1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ee691167-1628-58a7-9d4b-271706fcc73a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"cc6c8fd7-1cfe-5af3-a3b9-1a94422a571b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"a9b307a2-5a45-597b-8da8-3feeaa7fff13.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"44961ef9-7014-5c2f-86b8-76254f79cc51.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"14d7304c-0c94-542a-ba3a-ec906ae9d92a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"b2ad0035-5252-5287-85d9-daf9f2c58955.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ccc48d21-5e87-5c69-b255-0ab91946b350.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"b39725a5-c565-57c5-bec0-bfee68bd4999.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"dd71c1f0-e82e-5e66-813a-17a1af24ec9c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1706,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"80a0ee86-4ace-5093-9867-fcd56dd25b77.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących drzewo rozpinające grafu <img src=\"50dae04c-b30f-535b-897e-f589f714b303.gif\" border=\"0\\\" data-zdaj-se=\"true\"> będące rezultatem działania algorytmu Kruskala jest równa dokładnie <img src=\"fcd8ca30-e2e5-59ea-88c4-5ed6f5dec7bf.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, tuż po ustaleniu jego finalnej postaci, jest równa dokładnie <img src=\"eb414d45-965a-53b2-b0d2-4ebb21dad1c6.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"951365bf-e9a5-57df-b08c-71b6bed10e23.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"de010a82-9fd9-5f54-ab00-f2fde5b78327.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"adfab4d4-a1c0-5adb-8e6e-b881aefcbe8a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"406222d8-9b66-54e1-87a2-ecd9415a0e35.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"b60f7a5c-63f9-5118-a388-d3e8bc19deac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1707,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"37101ec7-36e7-50d3-bedb-738a3d224d97.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Krawędź <img src=\"014cbe59-7a9c-521b-806d-3503aea3b928.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"47e4bacc-356f-50a8-be1a-ec3ea9bc72fc.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Kolejność akceptowania krawędzi grafu do konstruowanego cyklu Hamiltona w trakcie wykonania rozważanego algorytmu jest następująca: <img src=\"44e12450-17a4-5a18-a0c1-99fb51b0aec5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"1092968c-ca95-5626-b801-518a144adee4.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"342e993f-cd70-5991-8c45-1d5f449bd4d3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"1f7c5ce1-08b1-575e-a6a8-e57f5b221e36.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"40bda918-fcae-5912-8b4b-0ec2d8b759cf.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c789f151-d374-5ed3-a963-45ec22b95ae9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"15e48763-3ec7-5f7a-8c1c-abbd32989369.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"e2445bff-5c55-5d0b-962a-fd65ee242db1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"3e9821a9-07ab-59d1-b0a6-6358c48522b6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"0d514287-6a9d-5ef7-af83-3bb19d39a257.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c94a6f9c-6716-5483-b591-ec9b615dfb32.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d9c83a5c-d28e-5826-ae98-9c203b5d0ab6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d9945db9-4841-535c-8e48-eec26fb54166.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"d8ee6f1f-93f7-509d-b90b-d0170f44384d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"dea26bca-5e24-5e78-b863-49330aac47d3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm kolorowania LF (largest first). Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą. Kolory indeksujemy od <img src=\"0518f37c-42eb-5718-a23b-6318e3b5086a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> .<img src=\"af240df5-5177-516e-b5cd-880c6612c9f5.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1708,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność kolorowania wierzchołków grafu <img src=\"98f54678-020d-5943-a3e0-a970bacb249a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu LF jest następująca: <img src=\"e2da997e-86cf-5973-adef-1671e4067502.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Liczba chromatyczna <img src=\"eca23559-a810-509c-a675-b452a000c22b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> grafu <img src=\"28558eb6-bfa8-561b-9e78-2b1aeaccd264.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa dokładnie <img src=\"25394769-137e-5ce7-bdaf-c13282ecdb0e.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Po zastosowaniu algorytm LF wierzchołek <img src=\"b1143177-08e7-5376-9a3a-ff0e61637ec8.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ma przypisany kolor <img src=\"7a3a7c16-b4f8-548e-b504-d7971885f5c7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"a20cae37-1475-59f9-affa-f49f2062c8ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"a270cb6d-f150-5655-aaca-626a9d76537d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"0f54051f-6bff-5d83-b40c-1fd680e0f3c6.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"632d9ef7-0bce-5827-a251-6dd30cd62932.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"bd09f570-fdbe-57bb-9688-16c661696be7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"eeb4a249-3879-5674-8f91-8a29595cdcdc.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9989cad2-2e65-5898-9145-d6e41d2cfe08.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5cf09f35-0f6c-5e7f-a17e-fa5d3656a238.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c3355b6d-724d-5051-9397-79933ef23e4b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"209b4ca2-db90-57f4-9c1c-e9a9f09def9a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"381de289-da1b-5fff-8cf1-7ecdf413580a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"15f58bc5-274b-5e25-ba8c-7fed8252f649.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"99a1902b-22fb-5acd-982e-f921924909fe.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Dijkstry. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"62f01934-3ce0-5361-81b9-6c8de96aa403.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1709,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wierzchołek <img src=\"11efa613-f992-5c47-a92c-8d9083401d17.gif\" border=\"0\\\" data-zdaj-se=\"true\"> leży na najkrótszej ścieżce z wierzchołka startowego <img src=\"1de40a74-7d6f-5ace-8340-3214e9c38f43.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"5da41648-1880-54a2-bd39-b56bc3e94a85.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w drzewie najkrótszych ścieżek będącym rezultatem działania rozważanego algorytmu dla grafu <img src=\"732056a3-a0ec-5b16-87ec-4cf633b88eca.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych w drzewie najkrótszych ścieżek będącym rezultatem działania algorytmu Dijkstry jest równa dokładnie <img src=\"1fa9e092-9a20-52eb-b185-f4d66ef4050d.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Wierzchołek <img src=\"1fd1eeb3-1c11-5db7-8323-4fcb7c442e98.gif\" border=\"0\\\" data-zdaj-se=\"true\"> leży na najkrótszej ścieżce z wierzchołka startowego <img src=\"fd2a451a-12ed-5941-80cf-7e590a326eb2.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do wierzchołka <img src=\"15830a04-d28d-5cb3-a47f-aec0b7d25582.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w drzewie najkrótszych ścieżek będącym rezultatem działania rozważanego algorytmu dla grafu <img src=\"831c29a0-c4a9-5ad3-86cf-0954f2f3c5c1.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"522af4be-316b-5969-8455-ae6789c8a102.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"ad7fb6c3-4828-5868-bdc9-d46b03ba2d2e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"b8667b3e-013c-557c-839b-1f2caccc7415.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"8601b859-c593-5c03-a1df-6b7c161d4e79.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"8663638b-40e1-5c7f-8799-7d501d09b3ec.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"c06670ea-95f3-5621-9823-44fe1fe2d67b.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"fbe24f3f-e2a9-56a5-a05e-867ae7af19c3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"5889e0a0-b80d-56a1-9f1a-c0756d32aaf7.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"4d927055-7286-59ca-85be-f089d95577ad.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"68bdd4d2-d4d3-5bf0-af8c-91558f6a7d01.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"30e2e095-d182-5281-80cd-3c8f53af8241.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"ab499fc3-aec3-5edb-9515-4e33f2946a5e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i wierzchołka startowego <img src=\"9ac3ad42-c58d-5c6f-94ae-f47097b84f13.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy stosujemy algorytm Prima wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.<img src=\"72e87891-dc6f-515a-bc36-ebcfa67604ae.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1710,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Kolejność przyłączania wierzchołków do minimalnego drzewa rozpinającego grafu <img src=\"85781b30-ef32-5ba2-b41d-293442a1c421.gif\" border=\"0\\\" data-zdaj-se=\"true\"> w trakcie wykonania algorytmu Prima jest następująca: <img src=\"4c251a64-ff4b-5019-b335-ceef07dfff50.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych w minimalym drzewie rozpinającym będącym rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"6660169d-7cbd-57b3-9222-9cf57c599389.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących minimalne drzewo rozpinające będące rezultatem działania algorytmu Prima jest równa dokładnie <img src=\"e257bbce-1e3b-5409-bf1b-f7f3331e57a7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm PrimTSP rozwiązujący problem komiwojażera w <img src=\"de0ce101-e5cd-5480-b765-3509b11acf1e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"60f0746b-c501-5e44-8e01-6783a523621d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"d4e61419-d522-5389-8a44-33d61d6a20e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"3d44857c-6938-51d3-88bb-36b3d0ea1a43.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"d567d5f6-9ecf-5618-a4aa-790a411a728f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe jeżeli wierzchołkiem startowym jest <img src=\"5dc45b97-e715-57ce-b407-ebd89dd1ce57.gif\" border=\"0\\\" data-zdaj-se=\"true\"> ? Uwaga! W przypadku niejednoznacznej możliwości wyboru wierzchołków, jako pierwszy wybieramy wierzchołek z mniejszą etykietą.",
      "id": 1711,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"1244eaa9-d07a-5349-b1f2-74edcf1aa987.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"a43fa543-10f3-52d6-a2e4-fa66c50efe14.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"fe975c20-b03b-51ef-8388-c6722b216a7e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"0cf451d2-4737-5394-bc6b-992acc386fe7.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Maksymalna wysokość stosu pomocniczego użytego do realizacji przejścia grafu <img src=\"b6107697-2459-5aad-aa7e-28266f9e8fba.gif\" border=\"0\\\" data-zdaj-se=\"true\"> metodą DFS w celu wyznaczenia cyklu Hamiltona jest równa dokładnie <img src=\"9db32276-f863-5738-a851-e34010acdd2c.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy nieskierowany graf prosty <img src=\"05941d11-f92d-52a0-aa4b-296903234779.gif\" border=\"0\\\" data-zdaj-se=\"true\"> z wagami, którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"c4f5e32e-4182-5191-9e70-fcec435543f5.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"55581570-4e5d-5172-b9cc-ff70ef859b1e.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie, zadany tabicą list sąsiedztwa postaci: <img src=\"31ce8051-a80d-598a-bd58-e3a4c9f4d80d.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"18f0ae7c-7411-5d96-b0bf-6e7c6025df82.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"80a4fe31-6468-55f5-8394-965bd5fac0e9.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"ceea19b0-d9b2-5464-8f69-66e33cc62251.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"bdfac3c0-3f71-56f9-967f-be65d433108a.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"6d269c91-938c-5254-8e8e-0c0f2e4047fa.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"befbd627-160c-55fd-a95a-4dcc672d797f.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , <img src=\"9d211929-f840-5e01-9311-195f153817ac.gif\" border=\"0\\\" data-zdaj-se=\"true\"> i przedstawiony na poniższym rysunku. Dla grafu <img src=\"f91e36bc-29e2-59ee-b678-de0b6b65abeb.gif\" border=\"0\\\" data-zdaj-se=\"true\"> stosujemy algorytm Kruskala wyznaczenia minimalnego drzewa rozpinającego. Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.<img src=\"2e449254-8d73-519c-beff-b44395f4d106.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
      "id": 1712,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Maksymalna waga krawędzi tworzącej otrzymane drzewo rozpinające grafu <img src=\"fda4449c-cf3c-5f9d-b380-398c066e73f0.gif\" border=\"0\\\" data-zdaj-se=\"true\"> jest równa co najmniej <img src=\"01050e16-6a1f-5d8d-8877-98e577b20338.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego, jeszcze przed ustaleniem jego finalnej postaci, jest równa dokładnie <img src=\"8774353f-c576-5a99-8ab2-41e331e82283.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Suma wag krawędzi tworzących drzewo rozpinające grafu <img src=\"d9f451e9-4a6d-5d36-b3f0-aeea7acc15b1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> będące rezultatem działania algorytmu Kruskala jest równa dokładnie <img src=\"1349b044-c9a6-5284-bbe5-a8bdf7f1e0b3.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy zachłanny algorytm KruskalTSP rozwiązujący problem komiwojażera w <img src=\"1aef67ea-dc01-5f24-ac31-693f2852d552.gif\" border=\"0\\\" data-zdaj-se=\"true\"> -wierzchołkowym grafie <img src=\"2e6b4765-ae12-5907-8aa8-2fd400dc9f56.gif\" border=\"0\\\" data-zdaj-se=\"true\"> , którego wierzchołki etykietowane są liczbami naturalnymi od <img src=\"130282a4-5aa0-59a8-8282-684a372737d1.gif\" border=\"0\\\" data-zdaj-se=\"true\"> do <img src=\"2b35ba1c-4fcf-56dd-a205-29661b64b383.gif\" border=\"0\\\" data-zdaj-se=\"true\"> włącznie i rozmieszczone są w odpowiednio następujących punktach płaszczyzny euklidesowej: <img src=\"bc4ed08b-24e0-58af-9bfc-e9b7b4cf1b77.gif\" border=\"0\\\" data-zdaj-se=\"true\"> . Które z poniższych zdań jest prawdziwe? Uwaga! W przypadku niejednoznacznej możliwości wyboru krawędzi, jako pierwszą wybieramy krawędź, której etykiety wierzchołków krańcowych w kolejności niemalejącej tworzą mniejszą liczbę naturalną.",
      "id": 1713,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba krawędzi grafu odrzuconych (ze względu na możliwość utworzenia cyklu) w trakcie konstrukcji drzewa rozpinającego stanowiącego podstawę poszukiwanego cyklu Hamiltona, jeszcze przed ustaleniem finalnej postaci owego drzewa, jest równa dokładnie <img src=\"a131340a-812f-5279-8a68-f666d02e8e62.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": false
        },
        {
          "answer": "Krawędź <img src=\"478dfa9a-74a1-5ccd-b083-0023da7a6003.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"ab12bec5-80aa-5b13-804f-8bc7d09cd3b4.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        },
        {
          "answer": "Krawędź <img src=\"acf3cb88-e997-568e-b500-22717de709c3.gif\" border=\"0\\\" data-zdaj-se=\"true\"> należy do wyznaczonego cyklu Hamiltona w grafie <img src=\"bcfb06a8-5f2c-53c5-bfca-1a6809863e39.gif\" border=\"0\\\" data-zdaj-se=\"true\">",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Jeżeli pewien algorytm działa w pesymistycznym czasie <em>O(logn)</em> dla danych wielkości n, to będzie działał w pesymistycznym czasie&nbsp;<em>O(logn)</em> również dla danych wielkości",
      "id": 1714,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "n+1",
          "correct": true
        },
        {
          "answer": "2n",
          "correct": true
        },
        {
          "answer": "n<sup>2</sup>",
          "correct": false
        },
        {
          "answer": "logn",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Mnożenie dwóch n-cyfrowych liczb da się wykonać w czasie:",
      "id": 1953,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "O(nlogn)",
          "correct": true
        },
        {
          "answer": "<span \\'times=\"\" new=\"\" roman\\';=\"\" font-size:=\"\" small;\\\"=\"\">O(n</span><sup \\'times=\"\" new=\"\" roman\\';\\\"=\"\">2<span small;\\\"=\"\">)</span></sup>(1)",
          "correct": true
        },
        {
          "answer": "<span \\'times=\"\" new=\"\" roman\\';\\\"=\"\"><span 8px;\\\"=\"\">O(n</span></span><sup \\'times=\"\" new=\"\" roman\\';\\\"=\"\">log</sup><sub \\'times=\"\" new=\"\" roman\\';\\\"=\"\">2</sub><sup \\'times=\"\" new=\"\" roman\\';\\\"=\"\">3</sup>)(1)",
          "correct": true
        },
        {
          "answer": "<span>O(n)</span>",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Algorytm Karacuby służy do:",
      "id": 1954,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "analizy i obróbki sygnałów dźwiękowych",
          "correct": false
        },
        {
          "answer": "mnożenia wielomianów",
          "correct": true
        },
        {
          "answer": "mnożenia liczb",
          "correct": true
        },
        {
          "answer": "sortowania",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Kopiec n-elementowy można:",
      "id": 1955,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "przekształcić w kopiec odwrotny(z najmniejszym, a nie największym elementem w każdym korzeniu) w czasie O(n)",
          "correct": false
        },
        {
          "answer": "rozebrać w czasie O(n)",
          "correct": false
        },
        {
          "answer": "utworzyć w czasie O(n)",
          "correct": true
        },
        {
          "answer": "scalić z innym kopcem n-elementowym (czyli utworzyć nowy kopiec z tych dwóch) w czasie O(n)",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Aby otrzymać B-drzewo o wysokości 2 dla t=5",
      "id": 1956,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "wstawić co najwyżej 1000 elementów",
          "correct": false
        },
        {
          "answer": "doprowadzić do sytuacji, w której łącznie będzie co najmniej 9 węzłów",
          "correct": true
        },
        {
          "answer": "ustalić jego stopień na co najmniej 5",
          "correct": false
        },
        {
          "answer": "należy po zainicjalizowaniu pustego drzewa wstawić co najmniej 25 elementów",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "dla algorytmu Alg( int n, int m ){<p></p>\n<p>int k = 1;</p>\n<p>while( k &lt;= n ){</p>\n<p>n-=m;</p>\n<p>m-=n;</p>\n<p>k/= m*n;</p>\n<p>}</p>\n<p>dla wejścia Alg( 1990, 100 )\n          </p>",
      "id": 1958,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wykona się zapętlenie.",
          "correct": false
        },
        {
          "answer": "Warunek zostanie spełniony po 2^4 obiegach pętli.",
          "correct": true
        },
        {
          "answer": "Liczba k na wyjściu będzie ujemna.",
          "correct": false
        },
        {
          "answer": "Liczba n na wyjściu będzie ujemna.",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Algorytm wyszukiwania k-tego elementu w zbiorze n-elementowym zwany jest algorytmem ''piątek\" gdyż zaczynamy od podzialu zbioru na 5-elementowe podzbiory.Liczba 5 zostala tak dobrana, gdyz",
      "id": 3170,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jest liczbą najmniejszą możliwą, a testy pokozaly ze optymalna w srednim przypadku sposród wszystkich pozostalych",
          "correct": false
        },
        {
          "answer": "Jest jedyną liczbą która spowoduje, że koszt spadnie do liniowego",
          "correct": false
        },
        {
          "answer": "jest liczba nieparzysta a czwórka choć równie dobra, dawalaby rezultaty tez dobre ale z gorsza stalą",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Przy szyfrowaniu RSA:",
      "id": 2645,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "zostaje upubliczniona pewna duża liczba pierwsza",
          "correct": true
        },
        {
          "answer": "zostaje upubliczniona pewna duża liczba złożona",
          "correct": false
        },
        {
          "answer": "nadawca wiadomości jest w stanie zarówno wiadomość zaszyfrować jak i odszyfrować",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Przy szyfrowaniu RSA:",
      "id": 2646,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "zostaje upubliczniona pewna duża liczba pierwsza",
          "correct": false
        },
        {
          "answer": "zostaje upubliczniona pewna duża liczba złożona",
          "correct": true
        },
        {
          "answer": "nadawca wiadomości jest w stanie zarówno wiadomość zaszyfrować jak i odszyfrować",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Algorytm wyszukiwania k-tego elementu w zbiorze n-elementowym zwany jest algorytmem ''piątek\" gdyż zaczynamy od podzialu zbioru na 5-elementowe podzbiory.Liczba 5 zostala tak dobrana, gdyz",
      "id": 3169,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Jest liczbą najmniejszą możliwą, a testy pokozaly ze optymalna w srednim przypadku sposród wszystkich pozostalych",
          "correct": false
        },
        {
          "answer": "Jest jedyną liczbą która spowoduje, że koszt spadnie do liniowego",
          "correct": false
        },
        {
          "answer": "jest liczba nieparzysta a czwórka choć równie dobra, dawalaby rezultaty tez dobre ale z gorsza stalą",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "<span>Rozważmy algorytm AVLConstruct postaci:</span><p></p>\n<p>&nbsp;</p>\n<p></p>\n<p>Niech drzewo&nbsp;&nbsp;będzie rezultatem działania algorytmu AVLConstruct dla danych wejściowych:</p>\n<ul>\n<li>tablica elementów&nbsp;.</li>\n</ul>\n<p><span>Które z poniższych zdań jest prawdziwe?</span>\n          </p>",
      "id": 2937,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<span>Łączna liczba rotacji podwójnych w prawo-lewo wykonanych w trakcie budowy drzewa&nbsp;</span><span>&nbsp;jest równa dokładnie&nbsp;</span>",
          "correct": false
        },
        {
          "answer": "<span>Łączna liczba rotacji podwójnych w prawo-lewo wykonanych w trakcie budowy drzewa&nbsp;</span><span>&nbsp;jest równa dokładnie&nbsp;</span>",
          "correct": true
        },
        {
          "answer": "<span>Łączna liczba rotacji podwójnych w lewo-prawo wykonanych w trakcie budowy drzewa&nbsp;</span><span>&nbsp;jest równa dokładnie&nbsp;</span>",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rzutowanie",
      "id": 3017,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rzucie równoległym ortogonalnym bryła widzenia jest ostrosłupem ścietym",
          "correct": false
        },
        {
          "answer": "W rzucie perspektywicznym promienie rzutujace przecinają się w jednym punkcie",
          "correct": true
        },
        {
          "answer": "<p><span><span>w rzucie równoległym ortogonalnym odcinki równoległe do siebie pozostają równoległe po </span></span></p>\n<p>&nbsp;</p>\n<p><span><span><span>wykonaniu rzutowania na płaszczyznę ekranu&nbsp;</span></span></span></p>",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rzutowanie",
      "id": 3018,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "W rzucie równoległym ortogonalnym bryła widzenia jest ostrosłupem ścietym",
          "correct": false
        },
        {
          "answer": "W rzucie perspektywicznym promienie rzutujace przecinają się w jednym punkcie",
          "correct": true
        },
        {
          "answer": "<p><span><span>w rzucie równoległym ortogonalnym odcinki równoległe do siebie pozostają równoległe po </span></span></p>\n<p>&nbsp;</p>\n<p><span><span><span>wykonaniu rzutowania na płaszczyznę ekranu&nbsp;</span></span></span></p>",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Dana jest funkcja haszująca h(i)=i mod17 oraz rehaszująca r(i)=(i+3)mod17. Korzystając z tych funkcji wprowadzamy do początkowo pustej tablicy intA[16] kolejno wartości: 6,0,20,13,3,17. Po wprowadzeniu tych liczb:",
      "id": 2910,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Trzy liczby znajdują się pod indeksami im równymi",
          "correct": true
        },
        {
          "answer": "0 poprzedza wszystkie inne wprowadzone wartości",
          "correct": true
        },
        {
          "answer": "3 występuje przed 6",
          "correct": false
        },
        {
          "answer": "17 znajdzie się po wszystkich wprowadzonych wartościach",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "dana jest funkcja heszujaca h(i) = 1mod 15 oraz rehaszujaca r(i) = (i+3) mod 15. Korzystajac z tych funkcji wprowadzamy do poczatkowo pustej tablicy int A[14] kolejno 6,5,20,23,17,2. Po wprowadzeniu tych liczb",
      "id": 3171,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "trzy liczby znajduja sie pod indeksami im rownymi",
          "correct": false
        },
        {
          "answer": "jest jedyna liczba, ktora spowoduje, ze koszt spadnie do liniowego",
          "correct": false
        },
        {
          "answer": "jest liczba nieparzysta, a czworka, choc rownie dobra, dawalaby rezultaty tez dobre, ale z gorsza stala",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Które z wymienionych algorytmów sortowania są stabilne?",
      "id": 3451,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "queuesort",
          "correct": false
        },
        {
          "answer": "merge sort",
          "correct": true
        },
        {
          "answer": "radix sort",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "<span>Istnieje drzewo AVL</span>",
      "id": 3452,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<span>o 5 węzłach i 2 liściach</span>",
          "correct": true
        },
        {
          "answer": "<span>o 20 węzłach i 8 liściach</span>",
          "correct": true
        },
        {
          "answer": "<span>o 12 węzłach i wysokości 4</span>",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Za pomocą kopców zupełnych można",
      "id": 3453,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "rozebrać kopiec w czasie liniowo-logarytmicznym",
          "correct": true
        },
        {
          "answer": "zbudować kopiec w czasie liniowym",
          "correct": true
        },
        {
          "answer": "posortować dane w czasie liniowo-logarytmicznym",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm AVLConstruct postaci:<p></p>\n<p>&nbsp;</p>\n<p><img src=\"c039f2c1-84d8-584f-ac4d-e83cb209ea1f.gif\" alt=\"\" data-zdaj-se=\"true\"></p>\n<p>Niech drzewo  będzie rezultatem działania algorytmu AVLConstruct dla danych wejściowych:</p>\n<ul>\n<li>tablica elementów .</li>\n</ul>\n<p>Które z poniższych zdań jest prawdziwe?\n          </p>",
      "id": 3500,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba rotacji pojedynczych w lewo wykonanych w trakcie budowy drzewa  jest równa dokładnie",
          "correct": true
        },
        {
          "answer": "Etykiety wierzchołków drzewa  wypisane w kolejności PostOrder tworzą ciąg:",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków zewnętrznych drzewa  jest równa dokładnie",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm HeapFastConstruct (szybkiej budowy kopca-drzewa binarnego) postaci:<p></p>\n<p>&nbsp;</p>\n<p><img src=\"d02fa4c3-2509-5534-8004-60903662f12b.gif\" alt=\"\" data-zdaj-se=\"true\"></p>\n<p>Niech kopiec  będzie rezultatem działania algorytmu HeapFastConstruct dla danych wejściowych:</p>\n<ul>\n<li>tablica elementów .</li>\n</ul>\n<p>Które z poniższych zdań jest prawdziwe?\n          </p>",
      "id": 3501,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Liczba operacji porównań elementów kopca-drzewa wykonanych w trakcie jego budowy jest równa dokładnie",
          "correct": true
        },
        {
          "answer": "Liczba operacji przestawień elementów kopca-drzewa wykonanych w trakcie jego budowy jest równa dokładnie",
          "correct": true
        },
        {
          "answer": "Wysokość kopca-drzewa  jest równa dokładnie",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy funkcje zmiennej . Które z poniższych zdań jest prawdziwe?",
      "id": 3502,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Funkcja  jest poprawnym dolnym ograniczeniem funkcji",
          "correct": false
        },
        {
          "answer": "Funkcja  jest poprawnym górnym ograniczeniem funkcji",
          "correct": true
        },
        {
          "answer": "Funkcja  jest poprawnym dolnym ograniczeniem funkcji",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm DFS postaci:<p></p>\n<p>&nbsp;</p>\n<p><img src=\"bf52e1c6-5aee-5fbd-8714-4e59aed1363c.gif\" alt=\"\" data-zdaj-se=\"true\"></p>\n<p>dla grafu :</p>\n<ul>\n<li>zbiór wierzchołków grafu ,</li>\n<li>zbiór krawędzi grafu zadany tablicą list incydencji:\n<ul>\n<li></li>\n<li></li>\n<li></li>\n<li></li>\n<li></li>\n<li></li>\n<li></li>\n<li></li>\n</ul>\n</li>\n<li>wierzchołek startowy .</li>\n</ul>\n<p>przedstawionego na poniższym rysunku.</p>\n<p>&nbsp;</p>\n<p><img src=\"72f3b5ce-2911-5080-8e09-1cc591ab97d8.gif\" alt=\"\" data-zdaj-se=\"true\"></p>\n<p>Które z poniższych zdań jest prawdziwe? Uwaga! W algorytmie DFS wierzchołki grafu umieszczamy na stosie pomocniczym w kolejności rosnących wartości etykiet.\n          </p>",
      "id": 3503,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Wysokość drzewa rozpinającego będącego rezultatem działania algorytmu DFS jest równa dokładnie",
          "correct": true
        },
        {
          "answer": "Liczba wierzchołków wewnętrznych w drzewie rozpinającym będącym rezultatem działania algorytmu DFS jest równa dokładnie",
          "correct": false
        },
        {
          "answer": "Wierzchołek  leży na najkrótszej ścieżce z wierzchołka startowego  do wierzchołka  w drzewie rozpinającym będącym rezultatem działania rozważanego algorytmu dla grafu",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Rozważmy algorytm sortowania RadixSort, zaimplementowany przy użyciu struktur pomocniczych kolejek, postaci:<p></p>\n<p>&nbsp;</p>\n<p><img src=\"49ceb6d1-133a-5b48-9c79-0814d6ad11c1.gif\" alt=\"\" data-zdaj-se=\"true\"></p>\n<p>dla danych wejściowych:</p>\n<ul>\n<li>tablica elementów: ,</li>\n<li>liczba pozycji składowych elementów tablicy : ,</li>\n</ul>\n<p>Które z poniższych zdań jest prawdziwe?\n          </p>",
      "id": 3504,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Łączna liczba operacji IN we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie",
          "correct": false
        },
        {
          "answer": "Maksymalna długość dowolnej kolejki (tj. maksymalna liczba jednocześnie przechowywanych elementów) w trakcie wykonania rozważanego algorytmu jest równa dokładnie",
          "correct": true
        },
        {
          "answer": "Łączna liczba operacji FIRST we wszystkich kolejkach w trakcie wykonania rozważanego algorytmu jest równa dokładnie",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Aby znaleźć najmniejszy lub największy element w tablicy nieuporządkowanej trzeba wykonać n-1 porównań. Jednak gdy szukamy konkretnych dwóch elementów, koszt ten może być mniejszy.",
      "id": 3505,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Najmniejszy i największy element można znaleźć wykonując (5/4) n porównań dla dużych n",
          "correct": false
        },
        {
          "answer": "Dwa najmniejsze elementy można znaleźć wykonując n+logn porównań",
          "correct": true
        },
        {
          "answer": "Dwa największe elementy można znaleźć wykonując (3/2) n porównań dla dużych n",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Algorytm Karacuby służy do",
      "id": 3506,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "przechodzenia grafu",
          "correct": false
        },
        {
          "answer": "mnożenia liczb wielocyfrowych",
          "correct": true
        },
        {
          "answer": "analizy i obróbki sygnałów video",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Za pomocą drzew lewicowych możemy w czasie O(log n)",
      "id": 3507,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "usunąć ekstremalny element z kolejki priorytetowej",
          "correct": true
        },
        {
          "answer": "zrealizować dodanie elementu do kolejki priorytetowej",
          "correct": true
        },
        {
          "answer": "odwrócić porządek w kolejce priorytetowej, czyli z kolejki obsługującej minima zrobić kolejkę obsługującą maksima i na odwrót",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Notacja",
      "id": 3508,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "definiuje konkretną funkcję ze zbioru liczb naturalnych w zbiór liczb rzeczywistych nieujemnych.",
          "correct": false
        },
        {
          "answer": "definiuje nieskończoną klasę funkcji ze zbioru liczb naturalnych w zbiór liczb rzeczywistych nieujemnych.",
          "correct": true
        },
        {
          "answer": "pozwala uprościć obliczenia złożoności przez podanie asymptotycznego ograniczenia zarówno górnego, jak i dolnego",
          "correct": false
        }
      ],
      "comments": []
    },
    {
      "question": "Notacja",
      "id": 3509,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pozwala uprościć obliczenia złożoności przez podanie asymptotycznego ograniczenia dolnego",
          "correct": true
        },
        {
          "answer": "definiuje konkretną funkcję ze zbioru liczb naturalnych w zbiór liczb rzeczywistych nieujemnych.",
          "correct": false
        },
        {
          "answer": "definiuje nieskończoną klasę funkcji ze zbioru liczb naturalnych w zbiór liczb rzeczywistych nieujemnych.",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Notacja",
      "id": 3510,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "pozwala uprościć obliczenia złożoności przez podanie asymptotycznego ograniczenia dolnego",
          "correct": true
        },
        {
          "answer": "pozwala uprościć obliczenia złożoności przez podanie asymptotycznego ograniczenia zarówno górnego, jak i dolnego",
          "correct": true
        },
        {
          "answer": "pozwala uprościć obliczenia złożoności przez podanie asymptotycznego ograniczenia górnego",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "Do drzewa binarnych wyszukiwań d wstawiono kolejno elementy 5 3 9 4 10 6 7",
      "id": 3511,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "Obieg prefiksowy d lewo-prawo daje kolejno 5 3 4 9 6 7 10",
          "correct": true
        },
        {
          "answer": "Obieg postfiksowy d lewo-prawo daje kolejno 4 3 7 6 10 9 5",
          "correct": true
        },
        {
          "answer": "Obieg infiksowy d prawo-lewo daje kolejno 10 9 7 6 5 4 3",
          "correct": true
        }
      ],
      "comments": []
    },
    {
      "question": "<span>Sortowanie przez zliczanie (count sort) n danych o zakresie 0..m-1</span>",
      "id": 3622,
      "numberOfComments": 0,
      "answers": [
        {
          "answer": "<span>wymaga dodatkowej pamięci rozmiaru Ω(n)</span>",
          "correct": true
        },
        {
          "answer": "<span>działa w czasie O(n)</span>",
          "correct": false
        },
        {
          "answer": "<span>działa w czasie O(m)</span>",
          "correct": false
        }
      ],
      "comments": []
    }
  ],
  "updatedAt": 1717800145540
}